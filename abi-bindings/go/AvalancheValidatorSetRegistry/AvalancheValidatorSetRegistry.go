// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package avalanchevalidatorsetregistry

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ava-labs/libevm"
	"github.com/ava-labs/libevm/common"
	"github.com/ava-labs/libevm/core/types"
	"github.com/ava-labs/libevm/event"
	"github.com/ava-labs/subnet-evm/accounts/abi"
	"github.com/ava-labs/subnet-evm/accounts/abi/bind"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ICMMessage is an auto generated low-level Go binding around an user-defined struct.
type ICMMessage struct {
	UnsignedMessage      ICMUnsignedMessage
	UnsignedMessageBytes []byte
	Signature            ICMSignature
}

// ICMSignature is an auto generated low-level Go binding around an user-defined struct.
type ICMSignature struct {
	Signers   []byte
	Signature []byte
}

// ICMUnsignedMessage is an auto generated low-level Go binding around an user-defined struct.
type ICMUnsignedMessage struct {
	AvalancheNetworkID          uint32
	AvalancheSourceBlockchainID [32]byte
	Payload                     []byte
}

// Validator is an auto generated low-level Go binding around an user-defined struct.
type Validator struct {
	BlsPublicKey []byte
	Weight       uint64
}

// ValidatorSet is an auto generated low-level Go binding around an user-defined struct.
type ValidatorSet struct {
	AvalancheBlockchainID [32]byte
	Validators            []Validator
	TotalWeight           uint64
	PChainHeight          uint64
	PChainTimestamp       uint64
}

// AvalancheValidatorSetRegistryMetaData contains all meta data concerning the AvalancheValidatorSetRegistry contract.
var AvalancheValidatorSetRegistryMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_avalancheNetworkID\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"validatorSetID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"avalancheBlockchainID\",\"type\":\"bytes32\"}],\"name\":\"ValidatorSetRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"validatorSetID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"avalancheBlockchainID\",\"type\":\"bytes32\"}],\"name\":\"ValidatorSetUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"avalancheNetworkID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvalancheNetworkID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorSetID\",\"type\":\"uint256\"}],\"name\":\"getValidatorSet\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"avalancheBlockchainID\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"blsPublicKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"internalType\":\"structValidator[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"totalWeight\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"pChainHeight\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"pChainTimestamp\",\"type\":\"uint64\"}],\"internalType\":\"structValidatorSet\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextValidatorSetID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"avalancheNetworkID\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"avalancheSourceBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"structICMUnsignedMessage\",\"name\":\"unsignedMessage\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"unsignedMessageBytes\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signers\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"structICMSignature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"structICMMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"validatorBytes\",\"type\":\"bytes\"}],\"name\":\"registerValidatorSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorSetID\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"avalancheNetworkID\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"avalancheSourceBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"structICMUnsignedMessage\",\"name\":\"unsignedMessage\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"unsignedMessageBytes\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signers\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"structICMSignature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"structICMMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"validatorBytes\",\"type\":\"bytes\"}],\"name\":\"updateValidatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorSetID\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"avalancheNetworkID\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"avalancheSourceBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"structICMUnsignedMessage\",\"name\":\"unsignedMessage\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"unsignedMessageBytes\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signers\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"structICMSignature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"structICMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"verifyICMMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60a03461007f57601f61300d38819003918201601f19168301916001600160401b038311848410176100835780849260209460405283398101031261007f575163ffffffff8116810361007f575f8055608052604051612f759081610098823960805181818161026e015281816103f601528181610569015261066e0152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c8063381536221461007f5780634095a5881461007a57806368531ed01461007557806382366d0514610075578063a04e829314610070578063ba8d49791461006b5763fd94b8ea14610066575f80fd5b61059f565b610521565b61041a565b6103da565b6101d5565b3461009a575f36600319011261009a575f5460805260206080f35b5f80fd5b9081606091031261009a5790565b634e487b7160e01b5f52604160045260245ffd5b60a081019081106001600160401b038211176100db57604052565b6100ac565b604081019081106001600160401b038211176100db57604052565b606081019081106001600160401b038211176100db57604052565b90601f801991011681019081106001600160401b038211176100db57604052565b6040519061014660a083610116565b565b60405190610146604083610116565b60405190610146608083610116565b6001600160401b0381116100db57601f01601f191660200190565b92919261018d82610166565b9161019b6040519384610116565b82948184528183011161009a578281602093845f960137010152565b9080601f8301121561009a578160206101d293359101610181565b90565b3461009a57606036600319011261009a576004356024356001600160401b03811161009a5761020890369060040161009e565b6044356001600160401b03811161009a5761038b61039b61029d6102336103b29436906004016101b7565b61023f5f5488106106f1565b610251875f52600160205260405f2090565b95610298610293610262368461079c565b61026b8a6108b6565b907f000000000000000000000000000000000000000000000000000000000000000090610f4c565b610a45565b611244565b939091956102ae8751825414610a87565b61037b60208801956102f760026102cc89516001600160401b031690565b940154936001600160401b036102ef604087901c82165b6001600160401b031690565b911611610acc565b61033660408a01936001600160401b0361032e6102e361031e88516001600160401b031690565b9360801c6001600160401b031690565b911611610b3e565b61035a61034c8a5198516001600160401b031690565b93516001600160401b031690565b94610363610137565b97885260208801526001600160401b03166040870152565b6001600160401b03166060850152565b6001600160401b03166080830152565b6103ad845f52600160205260405f2090565b610d49565b51907fd48741f16bef6492997e28d107c7a13b06376de704072bdb37a9b02e502ea1f95f80a3005b3461009a575f36600319011261009a57602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461009a57602036600319011261009a5761043f600435610439610f13565b506112f8565b6040516020815260c081018251602083015260208301519060a06040840152815180915260e0830190602060e08260051b8601019301915f905b8282106104c45760408701516001600160401b031660608701528580866104c060808b60608101516001600160401b03168583015201516001600160401b031660a0840152565b0390f35b90919293602080606060019360df198a8203018652826001600160401b03818b518051604086528051948591826040890152018787015e5f85850187015201511684830152601f01601f1916010196019493919091019101610479565b3461009a57604036600319011261009a576004356024356001600160401b03811161009a5760209161056361055d61059593369060040161009e565b916112f8565b906105907f000000000000000000000000000000000000000000000000000000000000000091369061079c565b610f4c565b6040519015158152f35b3461009a57604036600319011261009a576004356001600160401b03811161009a576105cf90369060040161009e565b6024356001600160401b03811161009a576102936106696106006105fa6106959436906004016101b7565b85611244565b610659839492979351946106496001600160401b0360408160208501511693015116936040519a8b986106328a6100c0565b895260208901526001600160401b03166040880152565b6001600160401b03166060860152565b6001600160401b03166080840152565b6105907f000000000000000000000000000000000000000000000000000000000000000091369061079c565b5f54906106a182610f3e565b5f556106b9816103ad845f52600160205260405f2090565b516104c0604051928392817fe93e9f47e7810153341664fc2050adcb29c88899748615c477d17b712d6215835f80a382526020820190565b156106f857565b60405162461bcd60e51b815260206004820152601c60248201527f56616c696461746f722073657420646f6573206e6f74206578697374000000006044820152606490fd5b919060408382031261009a5760405190610756826100e0565b819380356001600160401b03811161009a57826107749183016101b7565b83526020810135916001600160401b03831161009a5760209261079792016101b7565b910152565b919060608382031261009a57604051906107b5826100fb565b819380356001600160401b03811161009a57810160608184031261009a57604051906107e0826100fb565b803563ffffffff8116810361009a578252602081013560208301526040810135906001600160401b03821161009a5761081b918591016101b7565b6040820152835260208101356001600160401b03811161009a57826108419183016101b7565b60208401526040810135916001600160401b03831161009a57604092610797920161073d565b6001600160401b0381116100db5760051b60200190565b90600182811c921680156108ac575b602083101461089857565b634e487b7160e01b5f52602260045260245ffd5b91607f169161088d565b906040516108c3816100c0565b809280548252600181018054906108d982610867565b916108e76040519384610116565b80835260208301915f5260205f205f925b82841061096d575050505061095f600284936080936020610146970152015461093a61092a826001600160401b031690565b6001600160401b03166040860152565b610950604082901c6001600160401b0316610649565b60801c6001600160401b031690565b6001600160401b0316910152565b604051610979816100e0565b6040515f84546109888161087e565b8084529060018116908115610a2257506001146109eb575b5092600292826109b66020946001970382610116565b81526109dd6109ce868801546001600160401b031690565b6001600160401b031682850152565b8152019201930192906108f8565b5f868152602081209092505b818310610a0c575050810160200160026109a0565b60018160209254838688010152019201916109f7565b60ff191660208086019190915291151560051b84019091019150600290506109a0565b15610a4c57565b60405162461bcd60e51b8152602060048201526013602482015272496e76616c69642049434d206d65737361676560681b6044820152606490fd5b15610a8e57565b60405162461bcd60e51b8152602060048201526016602482015275084d8dec6d6c6d0c2d2dc40928840dad2e6dac2e8c6d60531b6044820152606490fd5b15610ad357565b60405162461bcd60e51b815260206004820152603d60248201527f502d436861696e20686569676874206d7573742062652067726561746572207460448201527f68616e207468652063757272656e742076616c696461746f72207365740000006064820152608490fd5b15610b4557565b608460405162461bcd60e51b815260206004820152604060248201527f502d436861696e2074696d657374616d70206d7573742062652067726561746560448201527f72207468616e207468652063757272656e742076616c696461746f72207365746064820152fd5b634e487b7160e01b5f52601160045260245ffd5b908160031b9180830460081490151715610bd957565b610baf565b818110610be9575050565b5f8155600101610bde565b9190601f8111610c0357505050565b610146925f5260205f20906020601f840160051c83019310610c2d575b601f0160051c0190610bde565b9091508190610c20565b91909182519283516001600160401b0381116100db57610c6181610c5b855461087e565b85610bf4565b6020601f8211600114610cd557600192610c9c83610cad94602094610146999a5f92610cca575b50508160011b915f199060031b1c19161790565b85555b01516001600160401b031690565b9101906001600160401b03166001600160401b0319825416179055565b015190505f80610c88565b601f19821695610ce8855f5260205f2090565b965f5b818110610d31575083610146979860209460019794610cad97899510610d19575b505050811b018555610c9f565b01515f1960f88460031b161c191690555f8080610d0c565b83830151895560019098019760209384019301610ceb565b81518155600181016020830151908151916801000000000000000083116100db578154838355808410610e68575b506020610d899101915f5260205f2090565b5f915b838310610e4a575050505090610e2260806002610146940192610dd9610dbc60408301516001600160401b031690565b855467ffffffffffffffff19166001600160401b03909116178555565b610c9f610df060608301516001600160401b031690565b85546fffffffffffffffff0000000000000000191660409190911b6fffffffffffffffff000000000000000016178555565b815467ffffffffffffffff60801b191660809190911b67ffffffffffffffff60801b16179055565b6002602082610e5c6001945186610c37565b01920192019190610d8c565b6001600160ff1b0381168103610bd9576001600160ff1b0384168403610bd957825f5260205f209060011b8101908460011b015b818110610ea95750610d77565b80610eb66002925461087e565b80610ec9575b505f600182015501610e9c565b601f8111600114610edf57505f81555b5f610ebc565b610f02906001601f610ef4855f5260205f2090565b920160051c82019101610bde565b5f8181526020812081835555610ed9565b60405190610f20826100c0565b5f608083828152606060208201528260408201528260608201520152565b5f198114610bd95760010190565b919063ffffffff80610f64855163ffffffff90511690565b9216911603611040576040820191610fb1610fad6040610fa7610f96610f8b885151611485565b60208801519061163c565b92909601516001600160401b031690565b9061171e565b1590565b61100a57602080610fc89451015191015191611754565b8015610fd15790565b60405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c6964206176616c616e636865206e6574776f726b204944000000006044820152606490fd5b60405190608082018281106001600160401b038211176100db576040525f6060838281528260208201528260408201520152565b903590601e198136030182121561009a57018035906001600160401b03821161009a5760200191813603831361009a57565b156110f257565b60405162461bcd60e51b815260206004820152601c60248201527f536f757263652061646472657373206d75737420626520656d707479000000006044820152606490fd5b805191908290602001825e015f815290565b6040513d5f823e3d90fd5b1561115b57565b60405162461bcd60e51b815260206004820152601b60248201527f56616c696461746f72207365742068617368206d69736d6174636800000000006044820152606490fd5b156111a757565b60405162461bcd60e51b815260206004820152601d60248201527f56616c696461746f72207365742063616e6e6f7420626520656d7074790000006044820152606490fd5b156111f357565b60405162461bcd60e51b815260206004820152602360248201527f546f74616c20776569676874206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608490fd5b91909161124f611085565b508035605e198236030181121561009a5761128761128261127b60209361129a950160408101906110b9565b3691610181565b611993565b611293815151156110eb565b0151611b31565b9160608301519060205f604051806112b28186611137565b039060025afa156112f3576112cc6112d1925f5114611154565b611e6e565b90916101466001600160401b03836112eb865115156111a0565b1615156111ec565b611149565b611300610f13565b5061130d5f5482106106f1565b5f5260016020526101d260405f206108b6565b634e487b7160e01b5f52603260045260245ffd5b8051156113415760200190565b611320565b8051600110156113415760210190565b908151811015611341570160200190565b1561136e57565b60405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a5908189a5d081cd95d608a1b6044820152606490fd5b6007039060078211610bd957565b5f19810191908211610bd957565b91908203918211610bd957565b906113d882610867565b6113e56040519182610116565b82815280926113f6601f1991610867565b0190602036910137565b8051600110156113415760400190565b8051600210156113415760600190565b8051600310156113415760800190565b8051600410156113415760a00190565b8051600510156113415760c00190565b8051600610156113415760e00190565b805160071015611341576101000190565b80518210156113415760209160051b010190565b8051151580611587575b61149890611367565b6114bb6114b56114a783611334565b516001600160f81b03191690565b60f81c90565b905f916080905b60ff82821616156115655750506114ea6114e5836114e08451610bc3565b6113c1565b6113ce565b5f905f5b835181101561155d578061155757845b6008811061150f57506001016114ee565b9261155060019161154b60ff61152b6114b56114a7888c611356565b856115358a6113a5565b1b161615156115448388611471565b9015159052565b610f3e565b93016114fe565b5f6114fe565b509250505090565b909261157f61157560ff92610f3e565b9460011c607f1690565b9190506114c2565b506114986001600160f81b03196115a06114a784611334565b161515905061148f565b156115b157565b60405162461bcd60e51b815260206004820152603e60248201527f5369676e657273206c656e677468206d757374206265206c657373207468616e60448201527f206f7220657175616c20746f2076616c696461746f7273206c656e67746800006064820152608490fd5b906001600160401b03809116911601906001600160401b038211610bd957565b919061164c8351825110156115aa565b6060905f905f5b81518110156117165785518181811091826116e9575b5050611678575b600101611653565b916116838383611471565b51936001600160401b038216156116c9576001916116ba60206116ab6116c09489519061201f565b9701516001600160401b031690565b9061161c565b925b9050611670565b505060016116e3602085519501516001600160401b031690565b926116c2565b61170f92506116fe61170992611703926113c1565b6113b3565b88611471565b51151590565b815f611669565b505092509190565b906001600160401b03169081604302916043830403610bd9576001600160401b03169081606402916064830403610bd957111590565b9160405191611764606084610116565b602b83527f424c535f5349475f424c53313233383147325f584d443a5348412d3235365f5360208401526a5357555f524f5f504f505f60a81b6040840152608084510361183f576001936117fe611812836118046117d461183b985f986117cf60c08b9a51146120b5565b6127ef565b916117fe6117e96117e3612101565b92612a35565b916040519687956117fe60208801809b611137565b90611137565b03601f198101835282610116565b5190600f5afa611829611823611fa4565b9161218e565b61183660208251146121da565b612232565b1490565b60405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207075626c6963206b6579206c656e677468000000000000006044820152606490fd5b60405190611891826100e0565b60606020838281520152565b156118a457565b60405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a590818dbd91958c8125160821b6044820152606490fd5b80516020909101516001600160e01b03198116929190600482106118fe575050565b6001600160e01b031960049290920360031b82901b16169150565b1561192057565b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207061796c6f616420747970652049440000000000000000006044820152606490fd5b63ffffffff16600a019063ffffffff8211610bd957565b63ffffffff16600e019063ffffffff8211610bd957565b61199b611884565b506119a581611334565b516001600160f81b0319161580611a5f575b6119c09061189d565b6119eb600163ffffffff6119e46119de6119d986612254565b6118dc565b60e01c90565b1614611919565b611a4c6119fd6119de6119d9846122ec565b91611a0e63ffffffff84168261233f565b9263ffffffff611a44611a2f611a3e6119de6119d9611a38611a2f88611965565b63ffffffff1690565b8861239a565b9361197c565b9116916125e5565b611a54610148565b918252602082015290565b506119c0611a7f611a726114a784611346565b6001600160f81b03191690565b1590506119b7565b15611a8e57565b60405162461bcd60e51b815260206004820152602960248201527f496e76616c69642056616c696461746f725365745374617465207061796c6f6160448201526819081d1e5c1948125160ba1b6064820152608490fd5b9081602091031261009a575190565b80516020909101516001600160c01b0319811692919060088210611b16575050565b6001600160c01b031960089290920360031b82901b16169150565b611b39611085565b506001600160f81b0319611b4f6114a783611334565b161580611c0c575b611b609061189d565b611b80600463ffffffff611b796119de6119d986612254565b1614611a87565b611b9b611b8c826123ef565b60208082518301019101611ae5565b90611c04611bb9611bb3611bae84612442565b611af4565b60c01c90565b91611bf4611bd8611b8c611bd2611bb3611bae86612495565b936124e8565b93611be1610157565b9586526001600160401b03166020860152565b6001600160401b03166040840152565b606082015290565b50611b60611c1f611a726114a784611346565b159050611b57565b90611c3182610867565b611c3e6040519182610116565b8281528092611c4f601f1991610867565b01905f5b828110611c5f57505050565b602090604051611c6e816100e0565b606081525f8382015282828501015201611c53565b60405160809190611c948382610116565b6060815291601f1901366020840137565b60405160a09190611cb68382610116565b6080815291601f1901366020840137565b6040516101009190610120611cdc8183610116565b8382526001600160401b038294116100db57601f190190369060200137565b90611d0582610166565b611d126040519182610116565b82815280926113f6601f1991610166565b15611d2a57565b60405162461bcd60e51b815260206004820152603960248201527f424c53207075626c6963206b6579206d7573742062652067726561746572207460448201527f68616e20746865206c6174657374207075626c6963206b6579000000000000006064820152608490fd5b9060608201809211610bd957565b9060688201809211610bd957565b6010019081601011610bd957565b9060308201809211610bd957565b6050019081605011610bd957565b9060908201809211610bd957565b6090019081609011610bd957565b60d001908160d011610bd957565b91908201809211610bd957565b15611e1957565b60405162461bcd60e51b815260206004820152602760248201527f56616c696461746f7220776569676874206d75737420626520677265617465726044820152660207468616e20360cc1b6064820152608490fd5b906001600160f81b0319611e846114a784611334565b161580611f89575b611e959061189d565b63ffffffff611ea96119de6119d985612254565b16611eb381611c27565b925f91600694611ec1611c83565b925f945b63ffffffff861684811015611f7d57611f73611f6d8763ffffffff94611f67600195611f3c8f611bb3611bae611f1c83611f178f611f11611f0a611f22985f9361253b565b9c8d612640565b13611d23565b611d95565b8d612590565b94611f376001600160401b0387161515611e12565b612726565b611f44610148565b9081526001600160401b0385166020820152611f60828c611471565b5289611471565b5061161c565b99611da3565b9601169496611ec5565b50965050925050509190565b50611e95611f9c611a726114a785611346565b159050611e8c565b3d15611fce573d90611fb582610166565b91611fc36040519384610116565b82523d5f602084013e565b606090565b15611fda57565b60405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f2061646420473120706f696e74730000000000000000006044820152606490fd5b906080825114806120aa575b15612065575f9161180461204e84936040519283916117fe602084018097611137565b5190600b5afa6101d261205f611fa4565b91611fd3565b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420473120706f696e74206c656e6774680000000000000000006044820152606490fd5b50608081511461202b565b156120bc57565b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207369676e6174757265206c656e67746800000000000000006044820152606490fd5b6040519061211060a083610116565b608082527f67816aef1db507c96655b9d5caac42364e6f38ba0ecb751bad54dcd6b939c2ca6080836f17f1d3a73197d7942695638c4fa9ac0f60208201527fc3688c4f9774b905a14e3a3f171bac586c55e83ff97a1aeffb3af00adb22c6bb60408201526f114d1d6855d545a8aa7d76c8cf2e21f260608201520152565b1561219557565b60405162461bcd60e51b815260206004820152601f60248201527f4661696c656420746f20706572666f726d2070616972696e6720636865636b006044820152606490fd5b156121e157565b60405162461bcd60e51b815260206004820152602360248201527f496e76616c69642070616972696e6720636865636b206f7574707574206c656e6044820152620cee8d60eb1b6064820152608490fd5b602081519101519060208110612246575090565b5f199060200360031b1b1690565b9060068251106122a7576122686004611cfb565b9160025f5b6004811061227a57505050565b80820190818311610bd9576122946114a760019386611356565b5f1a6122a08288611356565b530161226d565b60405162461bcd60e51b815260206004820152601960248201527f42797465536c696365723a206f7574206f6620626f756e6473000000000000006044820152606490fd5b90600a8251106122a7576123006004611cfb565b9160065f5b6004811061231257505050565b80820190818311610bd95761232c6114a760019386611356565b5f1a6123388288611356565b5301612305565b9190825181600a019081600a11610bd957106122a75761235e81611cfb565b925f5b82811061236d57505050565b806123876114a7612381600194600a611e05565b85611356565b5f1a6123938288611356565b5301612361565b919082516004820190818311610bd957106122a7576123b96004611cfb565b925f5b600481106123c957505050565b806123dc6114a761238160019487611e05565b5f1a6123e88288611356565b53016123bc565b9060268251106122a7576124036020611cfb565b9160065f5b6020811061241557505050565b80820190818311610bd95761242f6114a760019386611356565b5f1a61243b8288611356565b5301612408565b90602e8251106122a7576124566008611cfb565b9160265f5b6008811061246857505050565b80820190818311610bd9576124826114a760019386611356565b5f1a61248e8288611356565b530161245b565b9060368251106122a7576124a96008611cfb565b91602e5f5b600881106124bb57505050565b80820190818311610bd9576124d56114a760019386611356565b5f1a6124e18288611356565b53016124ae565b9060568251106122a7576124fc6020611cfb565b9160365f5b6020811061250e57505050565b80820190818311610bd9576125286114a760019386611356565b5f1a6125348288611356565b5301612501565b919082516060820190818311610bd957106122a75761255a6060611cfb565b925f5b6060811061256a57505050565b8061257d6114a761238160019487611e05565b5f1a6125898288611356565b530161255d565b919082516008820190818311610bd957106122a7576125af6008611cfb565b925f5b600881106125bf57505050565b806125d26114a761238160019487611e05565b5f1a6125de8288611356565b53016125b2565b92919092805182850190818611610bd957106122a75761260482611cfb565b935f5b8381106126145750505050565b8061262d6114a761262760019486611e05565b86611356565b5f1a6126398289611356565b5301612607565b80518015808061271d575b6127155761270d57825180156126f4578082101561270657505b5f5b818110612690575050519051908181106126895711612684575f90565b600190565b50505f1990565b61269d6114a78285611356565b6126ad611a726114a78488611356565b6001600160f81b0319909116106126fd576126cb6114a78285611356565b6126db611a726114a78488611356565b6001600160f81b0319909116116126f457600101612667565b50505050600190565b505050505f1990565b9050612665565b505050600190565b505050505f90565b5083511561264b565b9060608251036127aa57612738611ca5565b5f5b6030811061278757505f5b6030811061275257509150565b8061276a6114a7612764600194611dbf565b87611356565b61278061277683611dcd565b915f1a9185611356565b5301612745565b806127976114a760019387611356565b6127a361277683611db1565b530161273a565b60405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420696e707574207075626c6963206b6579206c656e677468006044820152606490fd5b906127f8612b0d565b5061287761286961282961282261281d612813610100612cf1565b60051c6107ff1690565b612d05565b61ffff1690565b9261283760ff851115612d19565b61284560ff82511115612d6f565b612863612853825160ff1690565b60f81b6001600160f81b03191690565b90612daa565b928390600160f81b90612ddd565b9160205f612894612887856113ce565b9560405191828092611137565b039060025afa156112f3575f5160205f6128bd6128b18585612e30565b60405191828092611137565b039060025afa156112f3575f516128d385611334565b5260025b8360ff821611156129845750505050806101d2915061297e6129776128fa612b0d565b61291761290685611334565b5161291086611400565b5190612eaf565b81515261293061292685611410565b5161291086611420565b60208251015261296b61294f61294586611430565b5161291087611440565b94602083019586515261291061296482611450565b5191611460565b60208551015251612b6e565b9151612b6e565b90612c59565b60205f6129be836128b16129a96129a361299d84612e6a565b60ff1690565b8b611471565b51871861180489604051948593898501612e8f565b039060025afa156112f3576129e4905f516129de61170361299d84612e7d565b52612e59565b6128d7565b156129f057565b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420696e707574207369676e6174757265206c656e67746800006044820152606490fd5b90612a4360c08351146129e9565b612a4b611cc7565b5f5b60308110612ae857505f5b60308110612ac557505f5b60308110612aa057505f5b60308110612a7b57509150565b80612a8d6114a7612764600194611d95565b612a9961277683611df7565b5301612a6e565b80612ab26114a7612764600194611ddb565b612abe61277683611de9565b5301612a63565b80612ad56114a760019387611356565b612ae161277683611dcd565b5301612a58565b80612afa6114a7612764600194611dbf565b612b0661277683611db1565b5301612a4d565b6040908151612b1c8382610116565b91604090835f5b838110612b305750505050565b6020908351612b3e816100e0565b8451612b4a8682610116565b8536823781528451612b5c8682610116565b85368237838201528184015201612b23565b5f80918051519060208082510151910160208151519151015190604051926020840194855260408401526060830152608082015260808152612bb160a082610116565b519060115afa612bbf611fa4565b9015612bc85790565b60405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f206d61702046703220746f2047320000000000000000006044820152606490fd5b15612c1457565b60405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f2061646420473220706f696e74730000000000000000006044820152606490fd5b9061010082511480612ce5575b15612ca0575f91611804612c8984936040519283916117fe602084018097611137565b5190600d5afa6101d2612c9a611fa4565b91612c0d565b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420473220706f696e74206c656e6774680000000000000000006044820152606490fd5b50610100815114612c66565b61ffff5f199116019061ffff8211610bd957565b61ffff60019116019061ffff8211610bd957565b15612d2057565b60405162461bcd60e51b815260206004820152602160248201527f6c656e5f696e5f627974657320746f6f206c6172676520666f722073686132356044820152601b60f91b6064820152608490fd5b15612d7657565b60405162461bcd60e51b815260206004820152600c60248201526b64737420746f6f206c6f6e6760a01b6044820152606490fd5b600161014691612dc594936040519586926020840190611137565b9060ff60f81b16815203601e19810185520183610116565b612e22612e0794936003610146946040519788955f60208801525f60408801526060870190611137565b6001600160f01b031990911681525f60028201520190611137565b03601f198101845283610116565b61014690929192612e226040519485926020840152600160f81b60408401526041830190611137565b60ff1660ff8114610bd95760010190565b60ff6001199116019060ff8211610bd957565b60ff5f199116019060ff8211610bd957565b6101d29392602192825260ff60f81b9060f81b1660208201520190611137565b919091604092838051612ec28282610116565b3690378351908482526020808301528482019285845260608301526080820152600160a08201526f1a0111ea397fe69a4b1ba7b6434bacd760c08201527f64774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab60e08201528381610100816005610545195a01fa15612f3d579252565bfefea2646970667358221220ef9392b988ae7b5d33688f2cd14b61146630819620e89a05fe02e54658ef929864736f6c634300081e0033",
}

// AvalancheValidatorSetRegistryABI is the input ABI used to generate the binding from.
// Deprecated: Use AvalancheValidatorSetRegistryMetaData.ABI instead.
var AvalancheValidatorSetRegistryABI = AvalancheValidatorSetRegistryMetaData.ABI

// AvalancheValidatorSetRegistryBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use AvalancheValidatorSetRegistryMetaData.Bin instead.
var AvalancheValidatorSetRegistryBin = AvalancheValidatorSetRegistryMetaData.Bin

// DeployAvalancheValidatorSetRegistry deploys a new Ethereum contract, binding an instance of AvalancheValidatorSetRegistry to it.
func DeployAvalancheValidatorSetRegistry(auth *bind.TransactOpts, backend bind.ContractBackend, _avalancheNetworkID uint32) (common.Address, *types.Transaction, *AvalancheValidatorSetRegistry, error) {
	parsed, err := AvalancheValidatorSetRegistryMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(AvalancheValidatorSetRegistryBin), backend, _avalancheNetworkID)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &AvalancheValidatorSetRegistry{AvalancheValidatorSetRegistryCaller: AvalancheValidatorSetRegistryCaller{contract: contract}, AvalancheValidatorSetRegistryTransactor: AvalancheValidatorSetRegistryTransactor{contract: contract}, AvalancheValidatorSetRegistryFilterer: AvalancheValidatorSetRegistryFilterer{contract: contract}}, nil
}

// AvalancheValidatorSetRegistry is an auto generated Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistry struct {
	AvalancheValidatorSetRegistryCaller     // Read-only binding to the contract
	AvalancheValidatorSetRegistryTransactor // Write-only binding to the contract
	AvalancheValidatorSetRegistryFilterer   // Log filterer for contract events
}

// AvalancheValidatorSetRegistryCaller is an auto generated read-only Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AvalancheValidatorSetRegistryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AvalancheValidatorSetRegistryFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type AvalancheValidatorSetRegistryFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AvalancheValidatorSetRegistrySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type AvalancheValidatorSetRegistrySession struct {
	Contract     *AvalancheValidatorSetRegistry // Generic contract binding to set the session for
	CallOpts     bind.CallOpts                  // Call options to use throughout this session
	TransactOpts bind.TransactOpts              // Transaction auth options to use throughout this session
}

// AvalancheValidatorSetRegistryCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type AvalancheValidatorSetRegistryCallerSession struct {
	Contract *AvalancheValidatorSetRegistryCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                        // Call options to use throughout this session
}

// AvalancheValidatorSetRegistryTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type AvalancheValidatorSetRegistryTransactorSession struct {
	Contract     *AvalancheValidatorSetRegistryTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                        // Transaction auth options to use throughout this session
}

// AvalancheValidatorSetRegistryRaw is an auto generated low-level Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistryRaw struct {
	Contract *AvalancheValidatorSetRegistry // Generic contract binding to access the raw methods on
}

// AvalancheValidatorSetRegistryCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistryCallerRaw struct {
	Contract *AvalancheValidatorSetRegistryCaller // Generic read-only contract binding to access the raw methods on
}

// AvalancheValidatorSetRegistryTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistryTransactorRaw struct {
	Contract *AvalancheValidatorSetRegistryTransactor // Generic write-only contract binding to access the raw methods on
}

// NewAvalancheValidatorSetRegistry creates a new instance of AvalancheValidatorSetRegistry, bound to a specific deployed contract.
func NewAvalancheValidatorSetRegistry(address common.Address, backend bind.ContractBackend) (*AvalancheValidatorSetRegistry, error) {
	contract, err := bindAvalancheValidatorSetRegistry(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistry{AvalancheValidatorSetRegistryCaller: AvalancheValidatorSetRegistryCaller{contract: contract}, AvalancheValidatorSetRegistryTransactor: AvalancheValidatorSetRegistryTransactor{contract: contract}, AvalancheValidatorSetRegistryFilterer: AvalancheValidatorSetRegistryFilterer{contract: contract}}, nil
}

// NewAvalancheValidatorSetRegistryCaller creates a new read-only instance of AvalancheValidatorSetRegistry, bound to a specific deployed contract.
func NewAvalancheValidatorSetRegistryCaller(address common.Address, caller bind.ContractCaller) (*AvalancheValidatorSetRegistryCaller, error) {
	contract, err := bindAvalancheValidatorSetRegistry(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistryCaller{contract: contract}, nil
}

// NewAvalancheValidatorSetRegistryTransactor creates a new write-only instance of AvalancheValidatorSetRegistry, bound to a specific deployed contract.
func NewAvalancheValidatorSetRegistryTransactor(address common.Address, transactor bind.ContractTransactor) (*AvalancheValidatorSetRegistryTransactor, error) {
	contract, err := bindAvalancheValidatorSetRegistry(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistryTransactor{contract: contract}, nil
}

// NewAvalancheValidatorSetRegistryFilterer creates a new log filterer instance of AvalancheValidatorSetRegistry, bound to a specific deployed contract.
func NewAvalancheValidatorSetRegistryFilterer(address common.Address, filterer bind.ContractFilterer) (*AvalancheValidatorSetRegistryFilterer, error) {
	contract, err := bindAvalancheValidatorSetRegistry(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistryFilterer{contract: contract}, nil
}

// bindAvalancheValidatorSetRegistry binds a generic wrapper to an already deployed contract.
func bindAvalancheValidatorSetRegistry(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := AvalancheValidatorSetRegistryMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _AvalancheValidatorSetRegistry.Contract.AvalancheValidatorSetRegistryCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.AvalancheValidatorSetRegistryTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.AvalancheValidatorSetRegistryTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _AvalancheValidatorSetRegistry.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.contract.Transact(opts, method, params...)
}

// AvalancheNetworkID is a free data retrieval call binding the contract method 0x68531ed0.
//
// Solidity: function avalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCaller) AvalancheNetworkID(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _AvalancheValidatorSetRegistry.contract.Call(opts, &out, "avalancheNetworkID")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// AvalancheNetworkID is a free data retrieval call binding the contract method 0x68531ed0.
//
// Solidity: function avalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) AvalancheNetworkID() (uint32, error) {
	return _AvalancheValidatorSetRegistry.Contract.AvalancheNetworkID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// AvalancheNetworkID is a free data retrieval call binding the contract method 0x68531ed0.
//
// Solidity: function avalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerSession) AvalancheNetworkID() (uint32, error) {
	return _AvalancheValidatorSetRegistry.Contract.AvalancheNetworkID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// GetAvalancheNetworkID is a free data retrieval call binding the contract method 0x82366d05.
//
// Solidity: function getAvalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCaller) GetAvalancheNetworkID(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _AvalancheValidatorSetRegistry.contract.Call(opts, &out, "getAvalancheNetworkID")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GetAvalancheNetworkID is a free data retrieval call binding the contract method 0x82366d05.
//
// Solidity: function getAvalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) GetAvalancheNetworkID() (uint32, error) {
	return _AvalancheValidatorSetRegistry.Contract.GetAvalancheNetworkID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// GetAvalancheNetworkID is a free data retrieval call binding the contract method 0x82366d05.
//
// Solidity: function getAvalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerSession) GetAvalancheNetworkID() (uint32, error) {
	return _AvalancheValidatorSetRegistry.Contract.GetAvalancheNetworkID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// GetValidatorSet is a free data retrieval call binding the contract method 0xa04e8293.
//
// Solidity: function getValidatorSet(uint256 validatorSetID) view returns((bytes32,(bytes,uint64)[],uint64,uint64,uint64))
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCaller) GetValidatorSet(opts *bind.CallOpts, validatorSetID *big.Int) (ValidatorSet, error) {
	var out []interface{}
	err := _AvalancheValidatorSetRegistry.contract.Call(opts, &out, "getValidatorSet", validatorSetID)

	if err != nil {
		return *new(ValidatorSet), err
	}

	out0 := *abi.ConvertType(out[0], new(ValidatorSet)).(*ValidatorSet)

	return out0, err

}

// GetValidatorSet is a free data retrieval call binding the contract method 0xa04e8293.
//
// Solidity: function getValidatorSet(uint256 validatorSetID) view returns((bytes32,(bytes,uint64)[],uint64,uint64,uint64))
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) GetValidatorSet(validatorSetID *big.Int) (ValidatorSet, error) {
	return _AvalancheValidatorSetRegistry.Contract.GetValidatorSet(&_AvalancheValidatorSetRegistry.CallOpts, validatorSetID)
}

// GetValidatorSet is a free data retrieval call binding the contract method 0xa04e8293.
//
// Solidity: function getValidatorSet(uint256 validatorSetID) view returns((bytes32,(bytes,uint64)[],uint64,uint64,uint64))
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerSession) GetValidatorSet(validatorSetID *big.Int) (ValidatorSet, error) {
	return _AvalancheValidatorSetRegistry.Contract.GetValidatorSet(&_AvalancheValidatorSetRegistry.CallOpts, validatorSetID)
}

// NextValidatorSetID is a free data retrieval call binding the contract method 0x38153622.
//
// Solidity: function nextValidatorSetID() view returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCaller) NextValidatorSetID(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _AvalancheValidatorSetRegistry.contract.Call(opts, &out, "nextValidatorSetID")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// NextValidatorSetID is a free data retrieval call binding the contract method 0x38153622.
//
// Solidity: function nextValidatorSetID() view returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) NextValidatorSetID() (*big.Int, error) {
	return _AvalancheValidatorSetRegistry.Contract.NextValidatorSetID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// NextValidatorSetID is a free data retrieval call binding the contract method 0x38153622.
//
// Solidity: function nextValidatorSetID() view returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerSession) NextValidatorSetID() (*big.Int, error) {
	return _AvalancheValidatorSetRegistry.Contract.NextValidatorSetID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// VerifyICMMessage is a free data retrieval call binding the contract method 0xba8d4979.
//
// Solidity: function verifyICMMessage(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message) view returns(bool)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCaller) VerifyICMMessage(opts *bind.CallOpts, validatorSetID *big.Int, message ICMMessage) (bool, error) {
	var out []interface{}
	err := _AvalancheValidatorSetRegistry.contract.Call(opts, &out, "verifyICMMessage", validatorSetID, message)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// VerifyICMMessage is a free data retrieval call binding the contract method 0xba8d4979.
//
// Solidity: function verifyICMMessage(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message) view returns(bool)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) VerifyICMMessage(validatorSetID *big.Int, message ICMMessage) (bool, error) {
	return _AvalancheValidatorSetRegistry.Contract.VerifyICMMessage(&_AvalancheValidatorSetRegistry.CallOpts, validatorSetID, message)
}

// VerifyICMMessage is a free data retrieval call binding the contract method 0xba8d4979.
//
// Solidity: function verifyICMMessage(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message) view returns(bool)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerSession) VerifyICMMessage(validatorSetID *big.Int, message ICMMessage) (bool, error) {
	return _AvalancheValidatorSetRegistry.Contract.VerifyICMMessage(&_AvalancheValidatorSetRegistry.CallOpts, validatorSetID, message)
}

// RegisterValidatorSet is a paid mutator transaction binding the contract method 0xfd94b8ea.
//
// Solidity: function registerValidatorSet(((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactor) RegisterValidatorSet(opts *bind.TransactOpts, message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.contract.Transact(opts, "registerValidatorSet", message, validatorBytes)
}

// RegisterValidatorSet is a paid mutator transaction binding the contract method 0xfd94b8ea.
//
// Solidity: function registerValidatorSet(((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) RegisterValidatorSet(message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.RegisterValidatorSet(&_AvalancheValidatorSetRegistry.TransactOpts, message, validatorBytes)
}

// RegisterValidatorSet is a paid mutator transaction binding the contract method 0xfd94b8ea.
//
// Solidity: function registerValidatorSet(((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactorSession) RegisterValidatorSet(message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.RegisterValidatorSet(&_AvalancheValidatorSetRegistry.TransactOpts, message, validatorBytes)
}

// UpdateValidatorSet is a paid mutator transaction binding the contract method 0x4095a588.
//
// Solidity: function updateValidatorSet(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns()
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactor) UpdateValidatorSet(opts *bind.TransactOpts, validatorSetID *big.Int, message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.contract.Transact(opts, "updateValidatorSet", validatorSetID, message, validatorBytes)
}

// UpdateValidatorSet is a paid mutator transaction binding the contract method 0x4095a588.
//
// Solidity: function updateValidatorSet(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns()
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) UpdateValidatorSet(validatorSetID *big.Int, message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.UpdateValidatorSet(&_AvalancheValidatorSetRegistry.TransactOpts, validatorSetID, message, validatorBytes)
}

// UpdateValidatorSet is a paid mutator transaction binding the contract method 0x4095a588.
//
// Solidity: function updateValidatorSet(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns()
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactorSession) UpdateValidatorSet(validatorSetID *big.Int, message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.UpdateValidatorSet(&_AvalancheValidatorSetRegistry.TransactOpts, validatorSetID, message, validatorBytes)
}

// AvalancheValidatorSetRegistryValidatorSetRegisteredIterator is returned from FilterValidatorSetRegistered and is used to iterate over the raw logs and unpacked data for ValidatorSetRegistered events raised by the AvalancheValidatorSetRegistry contract.
type AvalancheValidatorSetRegistryValidatorSetRegisteredIterator struct {
	Event *AvalancheValidatorSetRegistryValidatorSetRegistered // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AvalancheValidatorSetRegistryValidatorSetRegisteredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AvalancheValidatorSetRegistryValidatorSetRegistered)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AvalancheValidatorSetRegistryValidatorSetRegistered)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AvalancheValidatorSetRegistryValidatorSetRegisteredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AvalancheValidatorSetRegistryValidatorSetRegisteredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AvalancheValidatorSetRegistryValidatorSetRegistered represents a ValidatorSetRegistered event raised by the AvalancheValidatorSetRegistry contract.
type AvalancheValidatorSetRegistryValidatorSetRegistered struct {
	ValidatorSetID        *big.Int
	AvalancheBlockchainID [32]byte
	Raw                   types.Log // Blockchain specific contextual infos
}

// FilterValidatorSetRegistered is a free log retrieval operation binding the contract event 0xe93e9f47e7810153341664fc2050adcb29c88899748615c477d17b712d621583.
//
// Solidity: event ValidatorSetRegistered(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) FilterValidatorSetRegistered(opts *bind.FilterOpts, validatorSetID []*big.Int, avalancheBlockchainID [][32]byte) (*AvalancheValidatorSetRegistryValidatorSetRegisteredIterator, error) {

	var validatorSetIDRule []interface{}
	for _, validatorSetIDItem := range validatorSetID {
		validatorSetIDRule = append(validatorSetIDRule, validatorSetIDItem)
	}
	var avalancheBlockchainIDRule []interface{}
	for _, avalancheBlockchainIDItem := range avalancheBlockchainID {
		avalancheBlockchainIDRule = append(avalancheBlockchainIDRule, avalancheBlockchainIDItem)
	}

	logs, sub, err := _AvalancheValidatorSetRegistry.contract.FilterLogs(opts, "ValidatorSetRegistered", validatorSetIDRule, avalancheBlockchainIDRule)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistryValidatorSetRegisteredIterator{contract: _AvalancheValidatorSetRegistry.contract, event: "ValidatorSetRegistered", logs: logs, sub: sub}, nil
}

// WatchValidatorSetRegistered is a free log subscription operation binding the contract event 0xe93e9f47e7810153341664fc2050adcb29c88899748615c477d17b712d621583.
//
// Solidity: event ValidatorSetRegistered(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) WatchValidatorSetRegistered(opts *bind.WatchOpts, sink chan<- *AvalancheValidatorSetRegistryValidatorSetRegistered, validatorSetID []*big.Int, avalancheBlockchainID [][32]byte) (event.Subscription, error) {

	var validatorSetIDRule []interface{}
	for _, validatorSetIDItem := range validatorSetID {
		validatorSetIDRule = append(validatorSetIDRule, validatorSetIDItem)
	}
	var avalancheBlockchainIDRule []interface{}
	for _, avalancheBlockchainIDItem := range avalancheBlockchainID {
		avalancheBlockchainIDRule = append(avalancheBlockchainIDRule, avalancheBlockchainIDItem)
	}

	logs, sub, err := _AvalancheValidatorSetRegistry.contract.WatchLogs(opts, "ValidatorSetRegistered", validatorSetIDRule, avalancheBlockchainIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AvalancheValidatorSetRegistryValidatorSetRegistered)
				if err := _AvalancheValidatorSetRegistry.contract.UnpackLog(event, "ValidatorSetRegistered", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseValidatorSetRegistered is a log parse operation binding the contract event 0xe93e9f47e7810153341664fc2050adcb29c88899748615c477d17b712d621583.
//
// Solidity: event ValidatorSetRegistered(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) ParseValidatorSetRegistered(log types.Log) (*AvalancheValidatorSetRegistryValidatorSetRegistered, error) {
	event := new(AvalancheValidatorSetRegistryValidatorSetRegistered)
	if err := _AvalancheValidatorSetRegistry.contract.UnpackLog(event, "ValidatorSetRegistered", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// AvalancheValidatorSetRegistryValidatorSetUpdatedIterator is returned from FilterValidatorSetUpdated and is used to iterate over the raw logs and unpacked data for ValidatorSetUpdated events raised by the AvalancheValidatorSetRegistry contract.
type AvalancheValidatorSetRegistryValidatorSetUpdatedIterator struct {
	Event *AvalancheValidatorSetRegistryValidatorSetUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AvalancheValidatorSetRegistryValidatorSetUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AvalancheValidatorSetRegistryValidatorSetUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AvalancheValidatorSetRegistryValidatorSetUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AvalancheValidatorSetRegistryValidatorSetUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AvalancheValidatorSetRegistryValidatorSetUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AvalancheValidatorSetRegistryValidatorSetUpdated represents a ValidatorSetUpdated event raised by the AvalancheValidatorSetRegistry contract.
type AvalancheValidatorSetRegistryValidatorSetUpdated struct {
	ValidatorSetID        *big.Int
	AvalancheBlockchainID [32]byte
	Raw                   types.Log // Blockchain specific contextual infos
}

// FilterValidatorSetUpdated is a free log retrieval operation binding the contract event 0xd48741f16bef6492997e28d107c7a13b06376de704072bdb37a9b02e502ea1f9.
//
// Solidity: event ValidatorSetUpdated(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) FilterValidatorSetUpdated(opts *bind.FilterOpts, validatorSetID []*big.Int, avalancheBlockchainID [][32]byte) (*AvalancheValidatorSetRegistryValidatorSetUpdatedIterator, error) {

	var validatorSetIDRule []interface{}
	for _, validatorSetIDItem := range validatorSetID {
		validatorSetIDRule = append(validatorSetIDRule, validatorSetIDItem)
	}
	var avalancheBlockchainIDRule []interface{}
	for _, avalancheBlockchainIDItem := range avalancheBlockchainID {
		avalancheBlockchainIDRule = append(avalancheBlockchainIDRule, avalancheBlockchainIDItem)
	}

	logs, sub, err := _AvalancheValidatorSetRegistry.contract.FilterLogs(opts, "ValidatorSetUpdated", validatorSetIDRule, avalancheBlockchainIDRule)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistryValidatorSetUpdatedIterator{contract: _AvalancheValidatorSetRegistry.contract, event: "ValidatorSetUpdated", logs: logs, sub: sub}, nil
}

// WatchValidatorSetUpdated is a free log subscription operation binding the contract event 0xd48741f16bef6492997e28d107c7a13b06376de704072bdb37a9b02e502ea1f9.
//
// Solidity: event ValidatorSetUpdated(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) WatchValidatorSetUpdated(opts *bind.WatchOpts, sink chan<- *AvalancheValidatorSetRegistryValidatorSetUpdated, validatorSetID []*big.Int, avalancheBlockchainID [][32]byte) (event.Subscription, error) {

	var validatorSetIDRule []interface{}
	for _, validatorSetIDItem := range validatorSetID {
		validatorSetIDRule = append(validatorSetIDRule, validatorSetIDItem)
	}
	var avalancheBlockchainIDRule []interface{}
	for _, avalancheBlockchainIDItem := range avalancheBlockchainID {
		avalancheBlockchainIDRule = append(avalancheBlockchainIDRule, avalancheBlockchainIDItem)
	}

	logs, sub, err := _AvalancheValidatorSetRegistry.contract.WatchLogs(opts, "ValidatorSetUpdated", validatorSetIDRule, avalancheBlockchainIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AvalancheValidatorSetRegistryValidatorSetUpdated)
				if err := _AvalancheValidatorSetRegistry.contract.UnpackLog(event, "ValidatorSetUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseValidatorSetUpdated is a log parse operation binding the contract event 0xd48741f16bef6492997e28d107c7a13b06376de704072bdb37a9b02e502ea1f9.
//
// Solidity: event ValidatorSetUpdated(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) ParseValidatorSetUpdated(log types.Log) (*AvalancheValidatorSetRegistryValidatorSetUpdated, error) {
	event := new(AvalancheValidatorSetRegistryValidatorSetUpdated)
	if err := _AvalancheValidatorSetRegistry.contract.UnpackLog(event, "ValidatorSetUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
