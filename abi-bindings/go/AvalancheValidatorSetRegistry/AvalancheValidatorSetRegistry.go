// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package avalanchevalidatorsetregistry

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ava-labs/libevm"
	"github.com/ava-labs/libevm/common"
	"github.com/ava-labs/libevm/core/types"
	"github.com/ava-labs/libevm/event"
	"github.com/ava-labs/subnet-evm/accounts/abi"
	"github.com/ava-labs/subnet-evm/accounts/abi/bind"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ICMMessage is an auto generated low-level Go binding around an user-defined struct.
type ICMMessage struct {
	UnsignedMessage      ICMUnsignedMessage
	UnsignedMessageBytes []byte
	Signature            ICMSignature
}

// ICMSignature is an auto generated low-level Go binding around an user-defined struct.
type ICMSignature struct {
	Signers   []byte
	Signature []byte
}

// ICMUnsignedMessage is an auto generated low-level Go binding around an user-defined struct.
type ICMUnsignedMessage struct {
	AvalancheNetworkID          uint32
	AvalancheSourceBlockchainID [32]byte
	Payload                     []byte
}

// Validator is an auto generated low-level Go binding around an user-defined struct.
type Validator struct {
	BlsPublicKey []byte
	Weight       uint64
}

// ValidatorSet is an auto generated low-level Go binding around an user-defined struct.
type ValidatorSet struct {
	AvalancheBlockchainID [32]byte
	Validators            []Validator
	TotalWeight           uint64
	PChainHeight          uint64
	PChainTimestamp       uint64
}

// AvalancheValidatorSetRegistryMetaData contains all meta data concerning the AvalancheValidatorSetRegistry contract.
var AvalancheValidatorSetRegistryMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_avalancheNetworkID\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"validatorSetID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"avalancheBlockchainID\",\"type\":\"bytes32\"}],\"name\":\"ValidatorSetRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"validatorSetID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"avalancheBlockchainID\",\"type\":\"bytes32\"}],\"name\":\"ValidatorSetUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"avalancheNetworkID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvalancheNetworkID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorSetID\",\"type\":\"uint256\"}],\"name\":\"getValidatorSet\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"avalancheBlockchainID\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"blsPublicKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"internalType\":\"structValidator[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"totalWeight\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"pChainHeight\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"pChainTimestamp\",\"type\":\"uint64\"}],\"internalType\":\"structValidatorSet\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextValidatorSetID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"avalancheNetworkID\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"avalancheSourceBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"structICMUnsignedMessage\",\"name\":\"unsignedMessage\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"unsignedMessageBytes\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signers\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"structICMSignature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"structICMMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"validatorBytes\",\"type\":\"bytes\"}],\"name\":\"registerValidatorSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorSetID\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"avalancheNetworkID\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"avalancheSourceBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"structICMUnsignedMessage\",\"name\":\"unsignedMessage\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"unsignedMessageBytes\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signers\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"structICMSignature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"structICMMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"validatorBytes\",\"type\":\"bytes\"}],\"name\":\"updateValidatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorSetID\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"avalancheNetworkID\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"avalancheSourceBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"structICMUnsignedMessage\",\"name\":\"unsignedMessage\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"unsignedMessageBytes\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signers\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"structICMSignature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"structICMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"verifyICMMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"verifyWarpMessage\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"avalancheNetworkID\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"avalancheSourceBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"structICMUnsignedMessage\",\"name\":\"unsignedMessage\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"unsignedMessageBytes\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signers\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"structICMSignature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"structICMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60a03461008657601f61343138819003918201601f19168301916001600160401b0383118484101761008a57808492602094604052833981010312610086575163ffffffff81168103610086575f8055608052604051613392908161009f823960805181818161027e01528181610526015281816106800152818161078501526112990152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c8063381536221461008f5780634095a5881461008a5780634fae83111461008557806368531ed01461008057806382366d0514610080578063a04e82931461007b578063ba8d4979146100765763fd94b8ea14610071575f80fd5b6106b6565b610638565b61054a565b61050a565b61049d565b6101e5565b346100aa575f3660031901126100aa575f5460805260206080f35b5f80fd5b908160609103126100aa5790565b634e487b7160e01b5f52604160045260245ffd5b60a081019081106001600160401b038211176100eb57604052565b6100bc565b604081019081106001600160401b038211176100eb57604052565b606081019081106001600160401b038211176100eb57604052565b90601f801991011681019081106001600160401b038211176100eb57604052565b6040519061015660a083610126565b565b60405190610156604083610126565b60405190610156608083610126565b6001600160401b0381116100eb57601f01601f191660200190565b92919261019d82610176565b916101ab6040519384610126565b8294818452818301116100aa578281602093845f960137010152565b9080601f830112156100aa578160206101e293359101610191565b90565b346100aa5760603660031901126100aa576004356024356001600160401b0381116100aa576102189036906004016100ae565b6044356001600160401b0381116100aa5761039b6103ab6102ad6102436103c29436906004016101c7565b61024f5f548810610808565b610261875f52600160205260405f2090565b956102a86102a361027236846108c1565b61027b8a6109d7565b907f00000000000000000000000000000000000000000000000000000000000000009061131e565b610b66565b61160b565b939091956102be8751825414610ba8565b61038b602088019561030760026102dc89516001600160401b031690565b940154936001600160401b036102ff604087901c82165b6001600160401b031690565b911611610bed565b61034660408a01936001600160401b0361033e6102f361032e88516001600160401b031690565b9360801c6001600160401b031690565b911611610c5f565b61036a61035c8a5198516001600160401b031690565b93516001600160401b031690565b94610373610147565b97885260208801526001600160401b03166040870152565b6001600160401b03166060850152565b6001600160401b03166080830152565b6103bd845f52600160205260405f2090565b610e6a565b51907fd48741f16bef6492997e28d107c7a13b06376de704072bdb37a9b02e502ea1f95f80a3005b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6101e2916020825260406104676104528284516060602088015263ffffffff8151166080880152602081015160a08801520151606060c087015260e08601906103ea565b6020840151858203601f1901848701526103ea565b910151916060601f1982840301910152602061048c83516040845260408401906103ea565b9201519060208184039101526103ea565b346100aa5760203660031901126100aa576004356001600160401b0381116100aa57366023820112156100aa578060040135906001600160401b0382116100aa5736602483830101116100aa576105069160246104fa9201611202565b6040519182918261040e565b0390f35b346100aa575f3660031901126100aa57602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346100aa5760203660031901126100aa5761056f6004356105696112e5565b50611757565b6040516020815260c081018251602083015260208301519060a06040840152815180915260e0830190602060e08260051b8601019301915f905b8282106105f05760408701516001600160401b0316606087015285808661050660808b60608101516001600160401b03168583015201516001600160401b031660a0840152565b9091929360208060019260df19898203018552875190826001600160401b038161062385516040865260408601906103ea565b940151169101529601920192019092916105a9565b346100aa5760403660031901126100aa576004356024356001600160401b0381116100aa5760209161067a6106746106ac9336906004016100ae565b91611757565b906106a77f00000000000000000000000000000000000000000000000000000000000000009136906108c1565b61131e565b6040519015158152f35b346100aa5760403660031901126100aa576004356001600160401b0381116100aa576106e69036906004016100ae565b6024356001600160401b0381116100aa576102a36107806107176107116107ac9436906004016101c7565b8561160b565b610770839492979351946107606001600160401b0360408160208501511693015116936040519a8b986107498a6100d0565b895260208901526001600160401b03166040880152565b6001600160401b03166060860152565b6001600160401b03166080840152565b6106a77f00000000000000000000000000000000000000000000000000000000000000009136906108c1565b5f54906107b882611310565b5f556107d0816103bd845f52600160205260405f2090565b51610506604051928392817fe93e9f47e7810153341664fc2050adcb29c88899748615c477d17b712d6215835f80a382526020820190565b1561080f57565b60405162461bcd60e51b815260206004820152601c60248201527f56616c696461746f722073657420646f6573206e6f74206578697374000000006044820152606490fd5b63ffffffff8116036100aa57565b91906040838203126100aa576040519061087b826100f0565b819380356001600160401b0381116100aa57826108999183016101c7565b83526020810135916001600160401b0383116100aa576020926108bc92016101c7565b910152565b91906060838203126100aa57604051906108da8261010b565b819380356001600160401b0381116100aa5781016060818403126100aa57604051906109058261010b565b803561091081610854565b8252602081013560208301526040810135906001600160401b0382116100aa5761093c918591016101c7565b6040820152835260208101356001600160401b0381116100aa57826109629183016101c7565b60208401526040810135916001600160401b0383116100aa576040926108bc9201610862565b6001600160401b0381116100eb5760051b60200190565b90600182811c921680156109cd575b60208310146109b957565b634e487b7160e01b5f52602260045260245ffd5b91607f16916109ae565b906040516109e4816100d0565b809280548252600181018054906109fa82610988565b91610a086040519384610126565b80835260208301915f5260205f205f925b828410610a8e5750505050610a806002849360809360206101569701520154610a5b610a4b826001600160401b031690565b6001600160401b03166040860152565b610a71604082901c6001600160401b0316610760565b60801c6001600160401b031690565b6001600160401b0316910152565b604051610a9a816100f0565b6040515f8454610aa98161099f565b8084529060018116908115610b435750600114610b0c575b509260029282610ad76020946001970382610126565b8152610afe610aef868801546001600160401b031690565b6001600160401b031682850152565b815201920193019290610a19565b5f868152602081209092505b818310610b2d57505081016020016002610ac1565b6001816020925483868801015201920191610b18565b60ff191660208086019190915291151560051b8401909101915060029050610ac1565b15610b6d57565b60405162461bcd60e51b8152602060048201526013602482015272496e76616c69642049434d206d65737361676560681b6044820152606490fd5b15610baf57565b60405162461bcd60e51b8152602060048201526016602482015275084d8dec6d6c6d0c2d2dc40928840dad2e6dac2e8c6d60531b6044820152606490fd5b15610bf457565b60405162461bcd60e51b815260206004820152603d60248201527f502d436861696e20686569676874206d7573742062652067726561746572207460448201527f68616e207468652063757272656e742076616c696461746f72207365740000006064820152608490fd5b15610c6657565b608460405162461bcd60e51b815260206004820152604060248201527f502d436861696e2074696d657374616d70206d7573742062652067726561746560448201527f72207468616e207468652063757272656e742076616c696461746f72207365746064820152fd5b634e487b7160e01b5f52601160045260245ffd5b908160031b9180830460081490151715610cfa57565b610cd0565b818110610d0a575050565b5f8155600101610cff565b9190601f8111610d2457505050565b610156925f5260205f20906020601f840160051c83019310610d4e575b601f0160051c0190610cff565b9091508190610d41565b91909182519283516001600160401b0381116100eb57610d8281610d7c855461099f565b85610d15565b6020601f8211600114610df657600192610dbd83610dce94602094610156999a5f92610deb575b50508160011b915f199060031b1c19161790565b85555b01516001600160401b031690565b9101906001600160401b03166001600160401b0319825416179055565b015190505f80610da9565b601f19821695610e09855f5260205f2090565b965f5b818110610e52575083610156979860209460019794610dce97899510610e3a575b505050811b018555610dc0565b01515f1960f88460031b161c191690555f8080610e2d565b83830151895560019098019760209384019301610e0c565b81518155600181016020830151908151916801000000000000000083116100eb578154838355808410610f89575b506020610eaa9101915f5260205f2090565b5f915b838310610f6b575050505090610f4360806002610156940192610efa610edd60408301516001600160401b031690565b855467ffffffffffffffff19166001600160401b03909116178555565b610dc0610f1160608301516001600160401b031690565b85546fffffffffffffffff0000000000000000191660409190911b6fffffffffffffffff000000000000000016178555565b815467ffffffffffffffff60801b191660809190911b67ffffffffffffffff60801b16179055565b6002602082610f7d6001945186610d58565b01920192019190610ead565b6001600160ff1b0381168103610cfa576001600160ff1b0384168403610cfa57825f5260205f209060011b8101908460011b015b818110610fca5750610e98565b80610fd76002925461099f565b80610fea575b505f600182015501610fbd565b601f811160011461100057505f81555b5f610fdd565b611023906001601f611015855f5260205f2090565b920160051c82019101610cff565b5f8181526020812081835555610ffa565b60405190611041826100f0565b60606020838281520152565b81601f820112156100aa5780519061106482610176565b926110726040519485610126565b828452602083830101116100aa57815f9260208093018386015e8301015290565b91906040838203126100aa57604051906110ac826100f0565b819380516001600160401b0381116100aa57826110ca91830161104d565b83526020810151916001600160401b0383116100aa576020926108bc920161104d565b6020818303126100aa578051906001600160401b0382116100aa57016060818303126100aa57604051916111208361010b565b81516001600160401b0381116100aa5782016060818303126100aa57604051906111498261010b565b805161115481610854565b8252602081015160208301526040810151906001600160401b0382116100aa576111809184910161104d565b6040820152835260208201516001600160401b0381116100aa57816111a691840161104d565b602084015260408201516001600160401b0381116100aa576111c89201611093565b604082015290565b90918060409360208452816020850152848401375f828201840152601f01601f1916010190565b6040513d5f823e3d90fd5b611261915f916040516112148161010b565b6040516112208161010b565b848152846020820152606060408201528152606060208201526040611243611034565b91015260405163025c04c960e21b81529384928392600484016111d0565b038173__$c62815adaaea21c2af821606fda8374628$__5af49081156112e0575f916112be575b506101e26102a36112976116e3565b7f00000000000000000000000000000000000000000000000000000000000000008461131e565b6112da91503d805f833e6112d28183610126565b8101906110ed565b5f611288565b6111f7565b604051906112f2826100d0565b5f608083828152606060208201528260408201528260608201520152565b5f198114610cfa5760010190565b919063ffffffff80611336855163ffffffff90511690565b921691160361141257604082019161138361137f604061137961136861135d8851516118bb565b602088015190611a72565b92909601516001600160401b031690565b90611b54565b1590565b6113dc5760208061139a9451015191015191611b8a565b80156113a35790565b60405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c6964206176616c616e636865206e6574776f726b204944000000006044820152606490fd5b60405190608082018281106001600160401b038211176100eb576040525f6060838281528260208201528260408201520152565b903590601e19813603018212156100aa57018035906001600160401b0382116100aa576020019181360383136100aa57565b156114c457565b60405162461bcd60e51b815260206004820152601c60248201527f536f757263652061646472657373206d75737420626520656d707479000000006044820152606490fd5b805191908290602001825e015f815290565b1561152257565b60405162461bcd60e51b815260206004820152601b60248201527f56616c696461746f72207365742068617368206d69736d6174636800000000006044820152606490fd5b1561156e57565b60405162461bcd60e51b815260206004820152601d60248201527f56616c696461746f72207365742063616e6e6f7420626520656d7074790000006044820152606490fd5b156115ba57565b60405162461bcd60e51b815260206004820152602360248201527f546f74616c20776569676874206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608490fd5b919091611616611457565b508035605e19823603018112156100aa5761164e6116496116426020936116619501604081019061148b565b3691610191565b611db0565b61165a815151156114bd565b0151611f4e565b9160608301519060205f604051806116798186611509565b039060025afa156112e057611693611698925f511461151b565b61228b565b90916101566001600160401b03836116b286511515611567565b1615156115b3565b6007039060078211610cfa57565b5f19810191908211610cfa57565b91908203918211610cfa57565b6116eb6112e5565b505f548015611712575f198101908111610cfa575f5260016020526101e260405f206109d7565b60405162461bcd60e51b815260206004820152601760248201527f4e6f2076616c696461746f7220736574732065786973740000000000000000006044820152606490fd5b61175f6112e5565b5061176c5f548210610808565b5f5260016020526101e260405f206109d7565b634e487b7160e01b5f52603260045260245ffd5b8051156117a05760200190565b61177f565b8051600110156117a05760210190565b9081518110156117a0570160200190565b156117cd57565b60405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a5908189a5d081cd95d608a1b6044820152606490fd5b9061180e82610988565b61181b6040519182610126565b828152809261182c601f1991610988565b0190602036910137565b8051600110156117a05760400190565b8051600210156117a05760600190565b8051600310156117a05760800190565b8051600410156117a05760a00190565b8051600510156117a05760c00190565b8051600610156117a05760e00190565b8051600710156117a0576101000190565b80518210156117a05760209160051b010190565b80511515806119bd575b6118ce906117c6565b6118f16118eb6118dd83611793565b516001600160f81b03191690565b60f81c90565b905f916080905b60ff828216161561199b57505061192061191b836119168451610ce4565b6116d6565b611804565b5f905f5b8351811015611993578061198d57845b600881106119455750600101611924565b9261198660019161198160ff6119616118eb6118dd888c6117b5565b8561196b8a6116ba565b1b1616151561197a83886118a7565b9015159052565b611310565b9301611934565b5f611934565b509250505090565b90926119b56119ab60ff92611310565b9460011c607f1690565b9190506118f8565b506118ce6001600160f81b03196119d66118dd84611793565b16151590506118c5565b156119e757565b60405162461bcd60e51b815260206004820152603e60248201527f5369676e657273206c656e677468206d757374206265206c657373207468616e60448201527f206f7220657175616c20746f2076616c696461746f7273206c656e67746800006064820152608490fd5b906001600160401b03809116911601906001600160401b038211610cfa57565b9190611a828351825110156119e0565b6060905f905f5b8151811015611b4c578551818181109182611b1f575b5050611aae575b600101611a89565b91611ab983836118a7565b51936001600160401b03821615611aff57600191611af06020611ae1611af69489519061243c565b9701516001600160401b031690565b90611a52565b925b9050611aa6565b50506001611b19602085519501516001600160401b031690565b92611af8565b611b459250611b34611b3f92611b39926116d6565b6116c8565b886118a7565b51151590565b815f611a9f565b505092509190565b906001600160401b03169081604302916043830403610cfa576001600160401b03169081606402916064830403610cfa57111590565b9160405191611b9a606084610126565b602b83527f424c535f5349475f424c53313233383147325f584d443a5348412d3235365f5360208401526a5357555f524f5f504f505f60a81b60408401526080845103611c7557600193611c34611c4883611c3a611c0a611c71985f98611c0560c08b9a51146124d2565b612c0c565b91611c34611c1f611c1961251e565b92612e52565b91604051968795611c3460208801809b611509565b90611509565b03601f198101835282610126565b5190600f5afa611c5f611c596123c1565b916125ab565b611c6c60208251146125f7565b61264f565b1490565b60405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207075626c6963206b6579206c656e677468000000000000006044820152606490fd5b15611cc157565b60405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a590818dbd91958c8125160821b6044820152606490fd5b80516020909101516001600160e01b0319811692919060048210611d1b575050565b6001600160e01b031960049290920360031b82901b16169150565b15611d3d57565b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207061796c6f616420747970652049440000000000000000006044820152606490fd5b63ffffffff16600a019063ffffffff8211610cfa57565b63ffffffff16600e019063ffffffff8211610cfa57565b611db8611034565b50611dc281611793565b516001600160f81b0319161580611e7c575b611ddd90611cba565b611e08600163ffffffff611e01611dfb611df686612671565b611cf9565b60e01c90565b1614611d36565b611e69611e1a611dfb611df684612709565b91611e2b63ffffffff84168261275c565b9263ffffffff611e61611e4c611e5b611dfb611df6611e55611e4c88611d82565b63ffffffff1690565b886127b7565b93611d99565b911691612a02565b611e71610158565b918252602082015290565b50611ddd611e9c611e8f6118dd846117a5565b6001600160f81b03191690565b159050611dd4565b15611eab57565b60405162461bcd60e51b815260206004820152602960248201527f496e76616c69642056616c696461746f725365745374617465207061796c6f6160448201526819081d1e5c1948125160ba1b6064820152608490fd5b908160209103126100aa575190565b80516020909101516001600160c01b0319811692919060088210611f33575050565b6001600160c01b031960089290920360031b82901b16169150565b611f56611457565b506001600160f81b0319611f6c6118dd83611793565b161580612029575b611f7d90611cba565b611f9d600463ffffffff611f96611dfb611df686612671565b1614611ea4565b611fb8611fa98261280c565b60208082518301019101611f02565b90612021611fd6611fd0611fcb8461285f565b611f11565b60c01c90565b91612011611ff5611fa9611fef611fd0611fcb866128b2565b93612905565b93611ffe610167565b9586526001600160401b03166020860152565b6001600160401b03166040840152565b606082015290565b50611f7d61203c611e8f6118dd846117a5565b159050611f74565b9061204e82610988565b61205b6040519182610126565b828152809261206c601f1991610988565b01905f5b82811061207c57505050565b60209060405161208b816100f0565b606081525f8382015282828501015201612070565b604051608091906120b18382610126565b6060815291601f1901366020840137565b60405160a091906120d38382610126565b6080815291601f1901366020840137565b60405161010091906101206120f98183610126565b8382526001600160401b038294116100eb57601f190190369060200137565b9061212282610176565b61212f6040519182610126565b828152809261182c601f1991610176565b1561214757565b60405162461bcd60e51b815260206004820152603960248201527f424c53207075626c6963206b6579206d7573742062652067726561746572207460448201527f68616e20746865206c6174657374207075626c6963206b6579000000000000006064820152608490fd5b9060608201809211610cfa57565b9060688201809211610cfa57565b6010019081601011610cfa57565b9060308201809211610cfa57565b6050019081605011610cfa57565b9060908201809211610cfa57565b6090019081609011610cfa57565b60d001908160d011610cfa57565b91908201809211610cfa57565b1561223657565b60405162461bcd60e51b815260206004820152602760248201527f56616c696461746f7220776569676874206d75737420626520677265617465726044820152660207468616e20360cc1b6064820152608490fd5b906001600160f81b03196122a16118dd84611793565b1615806123a6575b6122b290611cba565b63ffffffff6122c6611dfb611df685612671565b166122d081612044565b925f916006946122de6120a0565b925f945b63ffffffff86168481101561239a5761239061238a8763ffffffff946123846001956123598f611fd0611fcb612339836123348f61232e61232761233f985f93612958565b9c8d612a5d565b13612140565b6121b2565b8d6129ad565b946123546001600160401b038716151561222f565b612b43565b612361610158565b9081526001600160401b038516602082015261237d828c6118a7565b52896118a7565b50611a52565b996121c0565b96011694966122e2565b50965050925050509190565b506122b26123b9611e8f6118dd856117a5565b1590506122a9565b3d156123eb573d906123d282610176565b916123e06040519384610126565b82523d5f602084013e565b606090565b156123f757565b60405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f2061646420473120706f696e74730000000000000000006044820152606490fd5b906080825114806124c7575b15612482575f91611c3a61246b8493604051928391611c34602084018097611509565b5190600b5afa6101e261247c6123c1565b916123f0565b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420473120706f696e74206c656e6774680000000000000000006044820152606490fd5b506080815114612448565b156124d957565b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207369676e6174757265206c656e67746800000000000000006044820152606490fd5b6040519061252d60a083610126565b608082527f67816aef1db507c96655b9d5caac42364e6f38ba0ecb751bad54dcd6b939c2ca6080836f17f1d3a73197d7942695638c4fa9ac0f60208201527fc3688c4f9774b905a14e3a3f171bac586c55e83ff97a1aeffb3af00adb22c6bb60408201526f114d1d6855d545a8aa7d76c8cf2e21f260608201520152565b156125b257565b60405162461bcd60e51b815260206004820152601f60248201527f4661696c656420746f20706572666f726d2070616972696e6720636865636b006044820152606490fd5b156125fe57565b60405162461bcd60e51b815260206004820152602360248201527f496e76616c69642070616972696e6720636865636b206f7574707574206c656e6044820152620cee8d60eb1b6064820152608490fd5b602081519101519060208110612663575090565b5f199060200360031b1b1690565b9060068251106126c4576126856004612118565b9160025f5b6004811061269757505050565b80820190818311610cfa576126b16118dd600193866117b5565b5f1a6126bd82886117b5565b530161268a565b60405162461bcd60e51b815260206004820152601960248201527f42797465536c696365723a206f7574206f6620626f756e6473000000000000006044820152606490fd5b90600a8251106126c45761271d6004612118565b9160065f5b6004811061272f57505050565b80820190818311610cfa576127496118dd600193866117b5565b5f1a61275582886117b5565b5301612722565b9190825181600a019081600a11610cfa57106126c45761277b81612118565b925f5b82811061278a57505050565b806127a46118dd61279e600194600a612222565b856117b5565b5f1a6127b082886117b5565b530161277e565b919082516004820190818311610cfa57106126c4576127d66004612118565b925f5b600481106127e657505050565b806127f96118dd61279e60019487612222565b5f1a61280582886117b5565b53016127d9565b9060268251106126c4576128206020612118565b9160065f5b6020811061283257505050565b80820190818311610cfa5761284c6118dd600193866117b5565b5f1a61285882886117b5565b5301612825565b90602e8251106126c4576128736008612118565b9160265f5b6008811061288557505050565b80820190818311610cfa5761289f6118dd600193866117b5565b5f1a6128ab82886117b5565b5301612878565b9060368251106126c4576128c66008612118565b91602e5f5b600881106128d857505050565b80820190818311610cfa576128f26118dd600193866117b5565b5f1a6128fe82886117b5565b53016128cb565b9060568251106126c4576129196020612118565b9160365f5b6020811061292b57505050565b80820190818311610cfa576129456118dd600193866117b5565b5f1a61295182886117b5565b530161291e565b919082516060820190818311610cfa57106126c4576129776060612118565b925f5b6060811061298757505050565b8061299a6118dd61279e60019487612222565b5f1a6129a682886117b5565b530161297a565b919082516008820190818311610cfa57106126c4576129cc6008612118565b925f5b600881106129dc57505050565b806129ef6118dd61279e60019487612222565b5f1a6129fb82886117b5565b53016129cf565b92919092805182850190818611610cfa57106126c457612a2182612118565b935f5b838110612a315750505050565b80612a4a6118dd612a4460019486612222565b866117b5565b5f1a612a5682896117b5565b5301612a24565b805180158080612b3a575b612b3257612b2a5782518015612b115780821015612b2357505b5f5b818110612aad57505051905190818110612aa65711612aa1575f90565b600190565b50505f1990565b612aba6118dd82856117b5565b612aca611e8f6118dd84886117b5565b6001600160f81b031990911610612b1a57612ae86118dd82856117b5565b612af8611e8f6118dd84886117b5565b6001600160f81b031990911611612b1157600101612a84565b50505050600190565b505050505f1990565b9050612a82565b505050600190565b505050505f90565b50835115612a68565b906060825103612bc757612b556120c2565b5f5b60308110612ba457505f5b60308110612b6f57509150565b80612b876118dd612b816001946121dc565b876117b5565b612b9d612b93836121ea565b915f1a91856117b5565b5301612b62565b80612bb46118dd600193876117b5565b612bc0612b93836121ce565b5301612b57565b60405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420696e707574207075626c6963206b6579206c656e677468006044820152606490fd5b90612c15612f2a565b50612c94612c86612c46612c3f612c3a612c3061010061310e565b60051c6107ff1690565b613122565b61ffff1690565b92612c5460ff851115613136565b612c6260ff8251111561318c565b612c80612c70825160ff1690565b60f81b6001600160f81b03191690565b906131c7565b928390600160f81b906131fa565b9160205f612cb1612ca485611804565b9560405191828092611509565b039060025afa156112e0575f5160205f612cda612cce858561324d565b60405191828092611509565b039060025afa156112e0575f51612cf085611793565b5260025b8360ff82161115612da15750505050806101e29150612d9b612d94612d17612f2a565b612d34612d2385611793565b51612d2d86611836565b51906132cc565b815152612d4d612d4385611846565b51612d2d86611856565b602082510152612d88612d6c612d6286611866565b51612d2d87611876565b946020830195865152612d2d612d8182611886565b5191611896565b60208551015251612f8b565b9151612f8b565b90613076565b60205f612ddb83612cce612dc6612dc0612dba84613287565b60ff1690565b8b6118a7565b518718611c3a896040519485938985016132ac565b039060025afa156112e057612e01905f51612dfb611b39612dba8461329a565b52613276565b612cf4565b15612e0d57565b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420696e707574207369676e6174757265206c656e67746800006044820152606490fd5b90612e6060c0835114612e06565b612e686120e4565b5f5b60308110612f0557505f5b60308110612ee257505f5b60308110612ebd57505f5b60308110612e9857509150565b80612eaa6118dd612b816001946121b2565b612eb6612b9383612214565b5301612e8b565b80612ecf6118dd612b816001946121f8565b612edb612b9383612206565b5301612e80565b80612ef26118dd600193876117b5565b612efe612b93836121ea565b5301612e75565b80612f176118dd612b816001946121dc565b612f23612b93836121ce565b5301612e6a565b6040908151612f398382610126565b91604090835f5b838110612f4d5750505050565b6020908351612f5b816100f0565b8451612f678682610126565b8536823781528451612f798682610126565b85368237838201528184015201612f40565b5f80918051519060208082510151910160208151519151015190604051926020840194855260408401526060830152608082015260808152612fce60a082610126565b519060115afa612fdc6123c1565b9015612fe55790565b60405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f206d61702046703220746f2047320000000000000000006044820152606490fd5b1561303157565b60405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f2061646420473220706f696e74730000000000000000006044820152606490fd5b9061010082511480613102575b156130bd575f91611c3a6130a68493604051928391611c34602084018097611509565b5190600d5afa6101e26130b76123c1565b9161302a565b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420473220706f696e74206c656e6774680000000000000000006044820152606490fd5b50610100815114613083565b61ffff5f199116019061ffff8211610cfa57565b61ffff60019116019061ffff8211610cfa57565b1561313d57565b60405162461bcd60e51b815260206004820152602160248201527f6c656e5f696e5f627974657320746f6f206c6172676520666f722073686132356044820152601b60f91b6064820152608490fd5b1561319357565b60405162461bcd60e51b815260206004820152600c60248201526b64737420746f6f206c6f6e6760a01b6044820152606490fd5b6001610156916131e294936040519586926020840190611509565b9060ff60f81b16815203601e19810185520183610126565b61323f61322494936003610156946040519788955f60208801525f60408801526060870190611509565b6001600160f01b031990911681525f60028201520190611509565b03601f198101845283610126565b6101569092919261323f6040519485926020840152600160f81b60408401526041830190611509565b60ff1660ff8114610cfa5760010190565b60ff6001199116019060ff8211610cfa57565b60ff5f199116019060ff8211610cfa57565b6101e29392602192825260ff60f81b9060f81b1660208201520190611509565b9190916040928380516132df8282610126565b3690378351908482526020808301528482019285845260608301526080820152600160a08201526f1a0111ea397fe69a4b1ba7b6434bacd760c08201527f64774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab60e08201528381610100816005610545195a01fa1561335a579252565bfefea264697066735822122080f7c44873126be7fd1883daee21d34dc3ca7e870b4f9839e557e2f8470a6ccb64736f6c634300081e0033",
}

// AvalancheValidatorSetRegistryABI is the input ABI used to generate the binding from.
// Deprecated: Use AvalancheValidatorSetRegistryMetaData.ABI instead.
var AvalancheValidatorSetRegistryABI = AvalancheValidatorSetRegistryMetaData.ABI

// AvalancheValidatorSetRegistryBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use AvalancheValidatorSetRegistryMetaData.Bin instead.
var AvalancheValidatorSetRegistryBin = AvalancheValidatorSetRegistryMetaData.Bin

// DeployAvalancheValidatorSetRegistry deploys a new Ethereum contract, binding an instance of AvalancheValidatorSetRegistry to it.
func DeployAvalancheValidatorSetRegistry(auth *bind.TransactOpts, backend bind.ContractBackend, _avalancheNetworkID uint32) (common.Address, *types.Transaction, *AvalancheValidatorSetRegistry, error) {
	parsed, err := AvalancheValidatorSetRegistryMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(AvalancheValidatorSetRegistryBin), backend, _avalancheNetworkID)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &AvalancheValidatorSetRegistry{AvalancheValidatorSetRegistryCaller: AvalancheValidatorSetRegistryCaller{contract: contract}, AvalancheValidatorSetRegistryTransactor: AvalancheValidatorSetRegistryTransactor{contract: contract}, AvalancheValidatorSetRegistryFilterer: AvalancheValidatorSetRegistryFilterer{contract: contract}}, nil
}

// AvalancheValidatorSetRegistry is an auto generated Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistry struct {
	AvalancheValidatorSetRegistryCaller     // Read-only binding to the contract
	AvalancheValidatorSetRegistryTransactor // Write-only binding to the contract
	AvalancheValidatorSetRegistryFilterer   // Log filterer for contract events
}

// AvalancheValidatorSetRegistryCaller is an auto generated read-only Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AvalancheValidatorSetRegistryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AvalancheValidatorSetRegistryFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type AvalancheValidatorSetRegistryFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AvalancheValidatorSetRegistrySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type AvalancheValidatorSetRegistrySession struct {
	Contract     *AvalancheValidatorSetRegistry // Generic contract binding to set the session for
	CallOpts     bind.CallOpts                  // Call options to use throughout this session
	TransactOpts bind.TransactOpts              // Transaction auth options to use throughout this session
}

// AvalancheValidatorSetRegistryCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type AvalancheValidatorSetRegistryCallerSession struct {
	Contract *AvalancheValidatorSetRegistryCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                        // Call options to use throughout this session
}

// AvalancheValidatorSetRegistryTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type AvalancheValidatorSetRegistryTransactorSession struct {
	Contract     *AvalancheValidatorSetRegistryTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                        // Transaction auth options to use throughout this session
}

// AvalancheValidatorSetRegistryRaw is an auto generated low-level Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistryRaw struct {
	Contract *AvalancheValidatorSetRegistry // Generic contract binding to access the raw methods on
}

// AvalancheValidatorSetRegistryCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistryCallerRaw struct {
	Contract *AvalancheValidatorSetRegistryCaller // Generic read-only contract binding to access the raw methods on
}

// AvalancheValidatorSetRegistryTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistryTransactorRaw struct {
	Contract *AvalancheValidatorSetRegistryTransactor // Generic write-only contract binding to access the raw methods on
}

// NewAvalancheValidatorSetRegistry creates a new instance of AvalancheValidatorSetRegistry, bound to a specific deployed contract.
func NewAvalancheValidatorSetRegistry(address common.Address, backend bind.ContractBackend) (*AvalancheValidatorSetRegistry, error) {
	contract, err := bindAvalancheValidatorSetRegistry(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistry{AvalancheValidatorSetRegistryCaller: AvalancheValidatorSetRegistryCaller{contract: contract}, AvalancheValidatorSetRegistryTransactor: AvalancheValidatorSetRegistryTransactor{contract: contract}, AvalancheValidatorSetRegistryFilterer: AvalancheValidatorSetRegistryFilterer{contract: contract}}, nil
}

// NewAvalancheValidatorSetRegistryCaller creates a new read-only instance of AvalancheValidatorSetRegistry, bound to a specific deployed contract.
func NewAvalancheValidatorSetRegistryCaller(address common.Address, caller bind.ContractCaller) (*AvalancheValidatorSetRegistryCaller, error) {
	contract, err := bindAvalancheValidatorSetRegistry(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistryCaller{contract: contract}, nil
}

// NewAvalancheValidatorSetRegistryTransactor creates a new write-only instance of AvalancheValidatorSetRegistry, bound to a specific deployed contract.
func NewAvalancheValidatorSetRegistryTransactor(address common.Address, transactor bind.ContractTransactor) (*AvalancheValidatorSetRegistryTransactor, error) {
	contract, err := bindAvalancheValidatorSetRegistry(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistryTransactor{contract: contract}, nil
}

// NewAvalancheValidatorSetRegistryFilterer creates a new log filterer instance of AvalancheValidatorSetRegistry, bound to a specific deployed contract.
func NewAvalancheValidatorSetRegistryFilterer(address common.Address, filterer bind.ContractFilterer) (*AvalancheValidatorSetRegistryFilterer, error) {
	contract, err := bindAvalancheValidatorSetRegistry(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistryFilterer{contract: contract}, nil
}

// bindAvalancheValidatorSetRegistry binds a generic wrapper to an already deployed contract.
func bindAvalancheValidatorSetRegistry(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := AvalancheValidatorSetRegistryMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _AvalancheValidatorSetRegistry.Contract.AvalancheValidatorSetRegistryCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.AvalancheValidatorSetRegistryTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.AvalancheValidatorSetRegistryTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _AvalancheValidatorSetRegistry.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.contract.Transact(opts, method, params...)
}

// AvalancheNetworkID is a free data retrieval call binding the contract method 0x68531ed0.
//
// Solidity: function avalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCaller) AvalancheNetworkID(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _AvalancheValidatorSetRegistry.contract.Call(opts, &out, "avalancheNetworkID")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// AvalancheNetworkID is a free data retrieval call binding the contract method 0x68531ed0.
//
// Solidity: function avalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) AvalancheNetworkID() (uint32, error) {
	return _AvalancheValidatorSetRegistry.Contract.AvalancheNetworkID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// AvalancheNetworkID is a free data retrieval call binding the contract method 0x68531ed0.
//
// Solidity: function avalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerSession) AvalancheNetworkID() (uint32, error) {
	return _AvalancheValidatorSetRegistry.Contract.AvalancheNetworkID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// GetAvalancheNetworkID is a free data retrieval call binding the contract method 0x82366d05.
//
// Solidity: function getAvalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCaller) GetAvalancheNetworkID(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _AvalancheValidatorSetRegistry.contract.Call(opts, &out, "getAvalancheNetworkID")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GetAvalancheNetworkID is a free data retrieval call binding the contract method 0x82366d05.
//
// Solidity: function getAvalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) GetAvalancheNetworkID() (uint32, error) {
	return _AvalancheValidatorSetRegistry.Contract.GetAvalancheNetworkID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// GetAvalancheNetworkID is a free data retrieval call binding the contract method 0x82366d05.
//
// Solidity: function getAvalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerSession) GetAvalancheNetworkID() (uint32, error) {
	return _AvalancheValidatorSetRegistry.Contract.GetAvalancheNetworkID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// GetValidatorSet is a free data retrieval call binding the contract method 0xa04e8293.
//
// Solidity: function getValidatorSet(uint256 validatorSetID) view returns((bytes32,(bytes,uint64)[],uint64,uint64,uint64))
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCaller) GetValidatorSet(opts *bind.CallOpts, validatorSetID *big.Int) (ValidatorSet, error) {
	var out []interface{}
	err := _AvalancheValidatorSetRegistry.contract.Call(opts, &out, "getValidatorSet", validatorSetID)

	if err != nil {
		return *new(ValidatorSet), err
	}

	out0 := *abi.ConvertType(out[0], new(ValidatorSet)).(*ValidatorSet)

	return out0, err

}

// GetValidatorSet is a free data retrieval call binding the contract method 0xa04e8293.
//
// Solidity: function getValidatorSet(uint256 validatorSetID) view returns((bytes32,(bytes,uint64)[],uint64,uint64,uint64))
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) GetValidatorSet(validatorSetID *big.Int) (ValidatorSet, error) {
	return _AvalancheValidatorSetRegistry.Contract.GetValidatorSet(&_AvalancheValidatorSetRegistry.CallOpts, validatorSetID)
}

// GetValidatorSet is a free data retrieval call binding the contract method 0xa04e8293.
//
// Solidity: function getValidatorSet(uint256 validatorSetID) view returns((bytes32,(bytes,uint64)[],uint64,uint64,uint64))
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerSession) GetValidatorSet(validatorSetID *big.Int) (ValidatorSet, error) {
	return _AvalancheValidatorSetRegistry.Contract.GetValidatorSet(&_AvalancheValidatorSetRegistry.CallOpts, validatorSetID)
}

// NextValidatorSetID is a free data retrieval call binding the contract method 0x38153622.
//
// Solidity: function nextValidatorSetID() view returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCaller) NextValidatorSetID(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _AvalancheValidatorSetRegistry.contract.Call(opts, &out, "nextValidatorSetID")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// NextValidatorSetID is a free data retrieval call binding the contract method 0x38153622.
//
// Solidity: function nextValidatorSetID() view returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) NextValidatorSetID() (*big.Int, error) {
	return _AvalancheValidatorSetRegistry.Contract.NextValidatorSetID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// NextValidatorSetID is a free data retrieval call binding the contract method 0x38153622.
//
// Solidity: function nextValidatorSetID() view returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerSession) NextValidatorSetID() (*big.Int, error) {
	return _AvalancheValidatorSetRegistry.Contract.NextValidatorSetID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// VerifyICMMessage is a free data retrieval call binding the contract method 0xba8d4979.
//
// Solidity: function verifyICMMessage(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message) view returns(bool)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCaller) VerifyICMMessage(opts *bind.CallOpts, validatorSetID *big.Int, message ICMMessage) (bool, error) {
	var out []interface{}
	err := _AvalancheValidatorSetRegistry.contract.Call(opts, &out, "verifyICMMessage", validatorSetID, message)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// VerifyICMMessage is a free data retrieval call binding the contract method 0xba8d4979.
//
// Solidity: function verifyICMMessage(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message) view returns(bool)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) VerifyICMMessage(validatorSetID *big.Int, message ICMMessage) (bool, error) {
	return _AvalancheValidatorSetRegistry.Contract.VerifyICMMessage(&_AvalancheValidatorSetRegistry.CallOpts, validatorSetID, message)
}

// VerifyICMMessage is a free data retrieval call binding the contract method 0xba8d4979.
//
// Solidity: function verifyICMMessage(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message) view returns(bool)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerSession) VerifyICMMessage(validatorSetID *big.Int, message ICMMessage) (bool, error) {
	return _AvalancheValidatorSetRegistry.Contract.VerifyICMMessage(&_AvalancheValidatorSetRegistry.CallOpts, validatorSetID, message)
}

// VerifyWarpMessage is a free data retrieval call binding the contract method 0x4fae8311.
//
// Solidity: function verifyWarpMessage(bytes payload) view returns(((uint32,bytes32,bytes),bytes,(bytes,bytes)) message)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCaller) VerifyWarpMessage(opts *bind.CallOpts, payload []byte) (ICMMessage, error) {
	var out []interface{}
	err := _AvalancheValidatorSetRegistry.contract.Call(opts, &out, "verifyWarpMessage", payload)

	if err != nil {
		return *new(ICMMessage), err
	}

	out0 := *abi.ConvertType(out[0], new(ICMMessage)).(*ICMMessage)

	return out0, err

}

// VerifyWarpMessage is a free data retrieval call binding the contract method 0x4fae8311.
//
// Solidity: function verifyWarpMessage(bytes payload) view returns(((uint32,bytes32,bytes),bytes,(bytes,bytes)) message)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) VerifyWarpMessage(payload []byte) (ICMMessage, error) {
	return _AvalancheValidatorSetRegistry.Contract.VerifyWarpMessage(&_AvalancheValidatorSetRegistry.CallOpts, payload)
}

// VerifyWarpMessage is a free data retrieval call binding the contract method 0x4fae8311.
//
// Solidity: function verifyWarpMessage(bytes payload) view returns(((uint32,bytes32,bytes),bytes,(bytes,bytes)) message)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerSession) VerifyWarpMessage(payload []byte) (ICMMessage, error) {
	return _AvalancheValidatorSetRegistry.Contract.VerifyWarpMessage(&_AvalancheValidatorSetRegistry.CallOpts, payload)
}

// RegisterValidatorSet is a paid mutator transaction binding the contract method 0xfd94b8ea.
//
// Solidity: function registerValidatorSet(((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactor) RegisterValidatorSet(opts *bind.TransactOpts, message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.contract.Transact(opts, "registerValidatorSet", message, validatorBytes)
}

// RegisterValidatorSet is a paid mutator transaction binding the contract method 0xfd94b8ea.
//
// Solidity: function registerValidatorSet(((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) RegisterValidatorSet(message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.RegisterValidatorSet(&_AvalancheValidatorSetRegistry.TransactOpts, message, validatorBytes)
}

// RegisterValidatorSet is a paid mutator transaction binding the contract method 0xfd94b8ea.
//
// Solidity: function registerValidatorSet(((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactorSession) RegisterValidatorSet(message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.RegisterValidatorSet(&_AvalancheValidatorSetRegistry.TransactOpts, message, validatorBytes)
}

// UpdateValidatorSet is a paid mutator transaction binding the contract method 0x4095a588.
//
// Solidity: function updateValidatorSet(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns()
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactor) UpdateValidatorSet(opts *bind.TransactOpts, validatorSetID *big.Int, message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.contract.Transact(opts, "updateValidatorSet", validatorSetID, message, validatorBytes)
}

// UpdateValidatorSet is a paid mutator transaction binding the contract method 0x4095a588.
//
// Solidity: function updateValidatorSet(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns()
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) UpdateValidatorSet(validatorSetID *big.Int, message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.UpdateValidatorSet(&_AvalancheValidatorSetRegistry.TransactOpts, validatorSetID, message, validatorBytes)
}

// UpdateValidatorSet is a paid mutator transaction binding the contract method 0x4095a588.
//
// Solidity: function updateValidatorSet(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns()
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactorSession) UpdateValidatorSet(validatorSetID *big.Int, message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.UpdateValidatorSet(&_AvalancheValidatorSetRegistry.TransactOpts, validatorSetID, message, validatorBytes)
}

// AvalancheValidatorSetRegistryValidatorSetRegisteredIterator is returned from FilterValidatorSetRegistered and is used to iterate over the raw logs and unpacked data for ValidatorSetRegistered events raised by the AvalancheValidatorSetRegistry contract.
type AvalancheValidatorSetRegistryValidatorSetRegisteredIterator struct {
	Event *AvalancheValidatorSetRegistryValidatorSetRegistered // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AvalancheValidatorSetRegistryValidatorSetRegisteredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AvalancheValidatorSetRegistryValidatorSetRegistered)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AvalancheValidatorSetRegistryValidatorSetRegistered)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AvalancheValidatorSetRegistryValidatorSetRegisteredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AvalancheValidatorSetRegistryValidatorSetRegisteredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AvalancheValidatorSetRegistryValidatorSetRegistered represents a ValidatorSetRegistered event raised by the AvalancheValidatorSetRegistry contract.
type AvalancheValidatorSetRegistryValidatorSetRegistered struct {
	ValidatorSetID        *big.Int
	AvalancheBlockchainID [32]byte
	Raw                   types.Log // Blockchain specific contextual infos
}

// FilterValidatorSetRegistered is a free log retrieval operation binding the contract event 0xe93e9f47e7810153341664fc2050adcb29c88899748615c477d17b712d621583.
//
// Solidity: event ValidatorSetRegistered(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) FilterValidatorSetRegistered(opts *bind.FilterOpts, validatorSetID []*big.Int, avalancheBlockchainID [][32]byte) (*AvalancheValidatorSetRegistryValidatorSetRegisteredIterator, error) {

	var validatorSetIDRule []interface{}
	for _, validatorSetIDItem := range validatorSetID {
		validatorSetIDRule = append(validatorSetIDRule, validatorSetIDItem)
	}
	var avalancheBlockchainIDRule []interface{}
	for _, avalancheBlockchainIDItem := range avalancheBlockchainID {
		avalancheBlockchainIDRule = append(avalancheBlockchainIDRule, avalancheBlockchainIDItem)
	}

	logs, sub, err := _AvalancheValidatorSetRegistry.contract.FilterLogs(opts, "ValidatorSetRegistered", validatorSetIDRule, avalancheBlockchainIDRule)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistryValidatorSetRegisteredIterator{contract: _AvalancheValidatorSetRegistry.contract, event: "ValidatorSetRegistered", logs: logs, sub: sub}, nil
}

// WatchValidatorSetRegistered is a free log subscription operation binding the contract event 0xe93e9f47e7810153341664fc2050adcb29c88899748615c477d17b712d621583.
//
// Solidity: event ValidatorSetRegistered(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) WatchValidatorSetRegistered(opts *bind.WatchOpts, sink chan<- *AvalancheValidatorSetRegistryValidatorSetRegistered, validatorSetID []*big.Int, avalancheBlockchainID [][32]byte) (event.Subscription, error) {

	var validatorSetIDRule []interface{}
	for _, validatorSetIDItem := range validatorSetID {
		validatorSetIDRule = append(validatorSetIDRule, validatorSetIDItem)
	}
	var avalancheBlockchainIDRule []interface{}
	for _, avalancheBlockchainIDItem := range avalancheBlockchainID {
		avalancheBlockchainIDRule = append(avalancheBlockchainIDRule, avalancheBlockchainIDItem)
	}

	logs, sub, err := _AvalancheValidatorSetRegistry.contract.WatchLogs(opts, "ValidatorSetRegistered", validatorSetIDRule, avalancheBlockchainIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AvalancheValidatorSetRegistryValidatorSetRegistered)
				if err := _AvalancheValidatorSetRegistry.contract.UnpackLog(event, "ValidatorSetRegistered", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseValidatorSetRegistered is a log parse operation binding the contract event 0xe93e9f47e7810153341664fc2050adcb29c88899748615c477d17b712d621583.
//
// Solidity: event ValidatorSetRegistered(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) ParseValidatorSetRegistered(log types.Log) (*AvalancheValidatorSetRegistryValidatorSetRegistered, error) {
	event := new(AvalancheValidatorSetRegistryValidatorSetRegistered)
	if err := _AvalancheValidatorSetRegistry.contract.UnpackLog(event, "ValidatorSetRegistered", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// AvalancheValidatorSetRegistryValidatorSetUpdatedIterator is returned from FilterValidatorSetUpdated and is used to iterate over the raw logs and unpacked data for ValidatorSetUpdated events raised by the AvalancheValidatorSetRegistry contract.
type AvalancheValidatorSetRegistryValidatorSetUpdatedIterator struct {
	Event *AvalancheValidatorSetRegistryValidatorSetUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AvalancheValidatorSetRegistryValidatorSetUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AvalancheValidatorSetRegistryValidatorSetUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AvalancheValidatorSetRegistryValidatorSetUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AvalancheValidatorSetRegistryValidatorSetUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AvalancheValidatorSetRegistryValidatorSetUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AvalancheValidatorSetRegistryValidatorSetUpdated represents a ValidatorSetUpdated event raised by the AvalancheValidatorSetRegistry contract.
type AvalancheValidatorSetRegistryValidatorSetUpdated struct {
	ValidatorSetID        *big.Int
	AvalancheBlockchainID [32]byte
	Raw                   types.Log // Blockchain specific contextual infos
}

// FilterValidatorSetUpdated is a free log retrieval operation binding the contract event 0xd48741f16bef6492997e28d107c7a13b06376de704072bdb37a9b02e502ea1f9.
//
// Solidity: event ValidatorSetUpdated(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) FilterValidatorSetUpdated(opts *bind.FilterOpts, validatorSetID []*big.Int, avalancheBlockchainID [][32]byte) (*AvalancheValidatorSetRegistryValidatorSetUpdatedIterator, error) {

	var validatorSetIDRule []interface{}
	for _, validatorSetIDItem := range validatorSetID {
		validatorSetIDRule = append(validatorSetIDRule, validatorSetIDItem)
	}
	var avalancheBlockchainIDRule []interface{}
	for _, avalancheBlockchainIDItem := range avalancheBlockchainID {
		avalancheBlockchainIDRule = append(avalancheBlockchainIDRule, avalancheBlockchainIDItem)
	}

	logs, sub, err := _AvalancheValidatorSetRegistry.contract.FilterLogs(opts, "ValidatorSetUpdated", validatorSetIDRule, avalancheBlockchainIDRule)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistryValidatorSetUpdatedIterator{contract: _AvalancheValidatorSetRegistry.contract, event: "ValidatorSetUpdated", logs: logs, sub: sub}, nil
}

// WatchValidatorSetUpdated is a free log subscription operation binding the contract event 0xd48741f16bef6492997e28d107c7a13b06376de704072bdb37a9b02e502ea1f9.
//
// Solidity: event ValidatorSetUpdated(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) WatchValidatorSetUpdated(opts *bind.WatchOpts, sink chan<- *AvalancheValidatorSetRegistryValidatorSetUpdated, validatorSetID []*big.Int, avalancheBlockchainID [][32]byte) (event.Subscription, error) {

	var validatorSetIDRule []interface{}
	for _, validatorSetIDItem := range validatorSetID {
		validatorSetIDRule = append(validatorSetIDRule, validatorSetIDItem)
	}
	var avalancheBlockchainIDRule []interface{}
	for _, avalancheBlockchainIDItem := range avalancheBlockchainID {
		avalancheBlockchainIDRule = append(avalancheBlockchainIDRule, avalancheBlockchainIDItem)
	}

	logs, sub, err := _AvalancheValidatorSetRegistry.contract.WatchLogs(opts, "ValidatorSetUpdated", validatorSetIDRule, avalancheBlockchainIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AvalancheValidatorSetRegistryValidatorSetUpdated)
				if err := _AvalancheValidatorSetRegistry.contract.UnpackLog(event, "ValidatorSetUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseValidatorSetUpdated is a log parse operation binding the contract event 0xd48741f16bef6492997e28d107c7a13b06376de704072bdb37a9b02e502ea1f9.
//
// Solidity: event ValidatorSetUpdated(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) ParseValidatorSetUpdated(log types.Log) (*AvalancheValidatorSetRegistryValidatorSetUpdated, error) {
	event := new(AvalancheValidatorSetRegistryValidatorSetUpdated)
	if err := _AvalancheValidatorSetRegistry.contract.UnpackLog(event, "ValidatorSetUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
