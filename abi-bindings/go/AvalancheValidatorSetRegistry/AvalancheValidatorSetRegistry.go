// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package avalanchevalidatorsetregistry

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ava-labs/libevm"
	"github.com/ava-labs/libevm/common"
	"github.com/ava-labs/libevm/core/types"
	"github.com/ava-labs/libevm/event"
	"github.com/ava-labs/subnet-evm/accounts/abi"
	"github.com/ava-labs/subnet-evm/accounts/abi/bind"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ICMMessage is an auto generated low-level Go binding around an user-defined struct.
type ICMMessage struct {
	UnsignedMessage      ICMUnsignedMessage
	UnsignedMessageBytes []byte
	Signature            ICMSignature
}

// ICMSignature is an auto generated low-level Go binding around an user-defined struct.
type ICMSignature struct {
	Signers   []byte
	Signature []byte
}

// ICMUnsignedMessage is an auto generated low-level Go binding around an user-defined struct.
type ICMUnsignedMessage struct {
	AvalancheNetworkID          uint32
	AvalancheSourceBlockchainID [32]byte
	Payload                     []byte
}

// Validator is an auto generated low-level Go binding around an user-defined struct.
type Validator struct {
	BlsPublicKey []byte
	Weight       uint64
}

// ValidatorSet is an auto generated low-level Go binding around an user-defined struct.
type ValidatorSet struct {
	AvalancheBlockchainID [32]byte
	Validators            []Validator
	TotalWeight           uint64
	PChainHeight          uint64
	PChainTimestamp       uint64
}

// AvalancheValidatorSetRegistryMetaData contains all meta data concerning the AvalancheValidatorSetRegistry contract.
var AvalancheValidatorSetRegistryMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_avalancheNetworkID\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"validatorSetID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"avalancheBlockchainID\",\"type\":\"bytes32\"}],\"name\":\"ValidatorSetRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"validatorSetID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"avalancheBlockchainID\",\"type\":\"bytes32\"}],\"name\":\"ValidatorSetUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"avalancheNetworkID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvalancheNetworkID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorSetID\",\"type\":\"uint256\"}],\"name\":\"getValidatorSet\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"avalancheBlockchainID\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"blsPublicKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"internalType\":\"structValidator[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"totalWeight\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"pChainHeight\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"pChainTimestamp\",\"type\":\"uint64\"}],\"internalType\":\"structValidatorSet\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextValidatorSetID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"avalancheNetworkID\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"avalancheSourceBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"structICMUnsignedMessage\",\"name\":\"unsignedMessage\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"unsignedMessageBytes\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signers\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"structICMSignature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"structICMMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"validatorBytes\",\"type\":\"bytes\"}],\"name\":\"registerValidatorSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorSetID\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"avalancheNetworkID\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"avalancheSourceBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"structICMUnsignedMessage\",\"name\":\"unsignedMessage\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"unsignedMessageBytes\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signers\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"structICMSignature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"structICMMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"validatorBytes\",\"type\":\"bytes\"}],\"name\":\"updateValidatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validatorSetID\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"avalancheNetworkID\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"avalancheSourceBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"structICMUnsignedMessage\",\"name\":\"unsignedMessage\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"unsignedMessageBytes\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signers\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"structICMSignature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"structICMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"verifyICMMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60a03461007f57601f612f6938819003918201601f19168301916001600160401b038311848410176100835780849260209460405283398101031261007f575163ffffffff8116810361007f575f8055608052604051612ed19081610098823960805181818161026e015281816103f601528181610569015261066e0152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c8063381536221461007f5780634095a5881461007a57806368531ed01461007557806382366d0514610075578063a04e829314610070578063ba8d49791461006b5763fd94b8ea14610066575f80fd5b61059f565b610521565b61041a565b6103da565b6101d5565b3461009a575f36600319011261009a575f5460805260206080f35b5f80fd5b9081606091031261009a5790565b634e487b7160e01b5f52604160045260245ffd5b60a081019081106001600160401b038211176100db57604052565b6100ac565b604081019081106001600160401b038211176100db57604052565b606081019081106001600160401b038211176100db57604052565b90601f801991011681019081106001600160401b038211176100db57604052565b6040519061014660a083610116565b565b60405190610146604083610116565b60405190610146608083610116565b6001600160401b0381116100db57601f01601f191660200190565b92919261018d82610166565b9161019b6040519384610116565b82948184528183011161009a578281602093845f960137010152565b9080601f8301121561009a578160206101d293359101610181565b90565b3461009a57606036600319011261009a576004356024356001600160401b03811161009a5761020890369060040161009e565b6044356001600160401b03811161009a5761038b61039b61029d6102336103b29436906004016101b7565b61023f5f5488106106f1565b610251875f52600160205260405f2090565b95610298610293610262368461079c565b61026b8a6108b6565b907f000000000000000000000000000000000000000000000000000000000000000090610f4c565b610a45565b6111a0565b939091956102ae8751825414610a87565b61037b60208801956102f760026102cc89516001600160401b031690565b940154936001600160401b036102ef604087901c82165b6001600160401b031690565b911611610acc565b61033660408a01936001600160401b0361032e6102e361031e88516001600160401b031690565b9360801c6001600160401b031690565b911611610b3e565b61035a61034c8a5198516001600160401b031690565b93516001600160401b031690565b94610363610137565b97885260208801526001600160401b03166040870152565b6001600160401b03166060850152565b6001600160401b03166080830152565b6103ad845f52600160205260405f2090565b610d49565b51907fd48741f16bef6492997e28d107c7a13b06376de704072bdb37a9b02e502ea1f95f80a3005b3461009a575f36600319011261009a57602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461009a57602036600319011261009a5761043f600435610439610f13565b50611254565b6040516020815260c081018251602083015260208301519060a06040840152815180915260e0830190602060e08260051b8601019301915f905b8282106104c45760408701516001600160401b031660608701528580866104c060808b60608101516001600160401b03168583015201516001600160401b031660a0840152565b0390f35b90919293602080606060019360df198a8203018652826001600160401b03818b518051604086528051948591826040890152018787015e5f85850187015201511684830152601f01601f1916010196019493919091019101610479565b3461009a57604036600319011261009a576004356024356001600160401b03811161009a5760209161056361055d61059593369060040161009e565b91611254565b906105907f000000000000000000000000000000000000000000000000000000000000000091369061079c565b610f4c565b6040519015158152f35b3461009a57604036600319011261009a576004356001600160401b03811161009a576105cf90369060040161009e565b6024356001600160401b03811161009a576102936106696106006105fa6106959436906004016101b7565b856111a0565b610659839492979351946106496001600160401b0360408160208501511693015116936040519a8b986106328a6100c0565b895260208901526001600160401b03166040880152565b6001600160401b03166060860152565b6001600160401b03166080840152565b6105907f000000000000000000000000000000000000000000000000000000000000000091369061079c565b5f54906106a182610f3e565b5f556106b9816103ad845f52600160205260405f2090565b516104c0604051928392817fe93e9f47e7810153341664fc2050adcb29c88899748615c477d17b712d6215835f80a382526020820190565b156106f857565b60405162461bcd60e51b815260206004820152601c60248201527f56616c696461746f722073657420646f6573206e6f74206578697374000000006044820152606490fd5b919060408382031261009a5760405190610756826100e0565b819380356001600160401b03811161009a57826107749183016101b7565b83526020810135916001600160401b03831161009a5760209261079792016101b7565b910152565b919060608382031261009a57604051906107b5826100fb565b819380356001600160401b03811161009a57810160608184031261009a57604051906107e0826100fb565b803563ffffffff8116810361009a578252602081013560208301526040810135906001600160401b03821161009a5761081b918591016101b7565b6040820152835260208101356001600160401b03811161009a57826108419183016101b7565b60208401526040810135916001600160401b03831161009a57604092610797920161073d565b6001600160401b0381116100db5760051b60200190565b90600182811c921680156108ac575b602083101461089857565b634e487b7160e01b5f52602260045260245ffd5b91607f169161088d565b906040516108c3816100c0565b809280548252600181018054906108d982610867565b916108e76040519384610116565b80835260208301915f5260205f205f925b82841061096d575050505061095f600284936080936020610146970152015461093a61092a826001600160401b031690565b6001600160401b03166040860152565b610950604082901c6001600160401b0316610649565b60801c6001600160401b031690565b6001600160401b0316910152565b604051610979816100e0565b6040515f84546109888161087e565b8084529060018116908115610a2257506001146109eb575b5092600292826109b66020946001970382610116565b81526109dd6109ce868801546001600160401b031690565b6001600160401b031682850152565b8152019201930192906108f8565b5f868152602081209092505b818310610a0c575050810160200160026109a0565b60018160209254838688010152019201916109f7565b60ff191660208086019190915291151560051b84019091019150600290506109a0565b15610a4c57565b60405162461bcd60e51b8152602060048201526013602482015272496e76616c69642049434d206d65737361676560681b6044820152606490fd5b15610a8e57565b60405162461bcd60e51b8152602060048201526016602482015275084d8dec6d6c6d0c2d2dc40928840dad2e6dac2e8c6d60531b6044820152606490fd5b15610ad357565b60405162461bcd60e51b815260206004820152603d60248201527f502d436861696e20686569676874206d7573742062652067726561746572207460448201527f68616e207468652063757272656e742076616c696461746f72207365740000006064820152608490fd5b15610b4557565b608460405162461bcd60e51b815260206004820152604060248201527f502d436861696e2074696d657374616d70206d7573742062652067726561746560448201527f72207468616e207468652063757272656e742076616c696461746f72207365746064820152fd5b634e487b7160e01b5f52601160045260245ffd5b908160031b9180830460081490151715610bd957565b610baf565b818110610be9575050565b5f8155600101610bde565b9190601f8111610c0357505050565b610146925f5260205f20906020601f840160051c83019310610c2d575b601f0160051c0190610bde565b9091508190610c20565b91909182519283516001600160401b0381116100db57610c6181610c5b855461087e565b85610bf4565b6020601f8211600114610cd557600192610c9c83610cad94602094610146999a5f92610cca575b50508160011b915f199060031b1c19161790565b85555b01516001600160401b031690565b9101906001600160401b03166001600160401b0319825416179055565b015190505f80610c88565b601f19821695610ce8855f5260205f2090565b965f5b818110610d31575083610146979860209460019794610cad97899510610d19575b505050811b018555610c9f565b01515f1960f88460031b161c191690555f8080610d0c565b83830151895560019098019760209384019301610ceb565b81518155600181016020830151908151916801000000000000000083116100db578154838355808410610e68575b506020610d899101915f5260205f2090565b5f915b838310610e4a575050505090610e2260806002610146940192610dd9610dbc60408301516001600160401b031690565b855467ffffffffffffffff19166001600160401b03909116178555565b610c9f610df060608301516001600160401b031690565b85546fffffffffffffffff0000000000000000191660409190911b6fffffffffffffffff000000000000000016178555565b815467ffffffffffffffff60801b191660809190911b67ffffffffffffffff60801b16179055565b6002602082610e5c6001945186610c37565b01920192019190610d8c565b6001600160ff1b0381168103610bd9576001600160ff1b0384168403610bd957825f5260205f209060011b8101908460011b015b818110610ea95750610d77565b80610eb66002925461087e565b80610ec9575b505f600182015501610e9c565b601f8111600114610edf57505f81555b5f610ebc565b610f02906001601f610ef4855f5260205f2090565b920160051c82019101610bde565b5f8181526020812081835555610ed9565b60405190610f20826100c0565b5f608083828152606060208201528260408201528260608201520152565b5f198114610bd95760010190565b919082519063ffffffff80610f65845163ffffffff1690565b9216911603610fd45760200151815103610fdb576040820191610fbd610fb96040610fb3610fa2610f978851516113e1565b602088015190611598565b92909601516001600160401b031690565b9061167a565b1590565b610fd4576020806101d294510151910151916116b0565b5050505f90565b50505f90565b60405190608082018281106001600160401b038211176100db576040525f6060838281528260208201528260408201520152565b903590601e198136030182121561009a57018035906001600160401b03821161009a5760200191813603831361009a57565b1561104e57565b60405162461bcd60e51b815260206004820152601c60248201527f536f757263652061646472657373206d75737420626520656d707479000000006044820152606490fd5b805191908290602001825e015f815290565b6040513d5f823e3d90fd5b156110b757565b60405162461bcd60e51b815260206004820152601b60248201527f56616c696461746f72207365742068617368206d69736d6174636800000000006044820152606490fd5b1561110357565b60405162461bcd60e51b815260206004820152601d60248201527f56616c696461746f72207365742063616e6e6f7420626520656d7074790000006044820152606490fd5b1561114f57565b60405162461bcd60e51b815260206004820152602360248201527f546f74616c20776569676874206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608490fd5b9190916111ab610fe1565b508035605e198236030181121561009a576111e36111de6111d76020936111f695016040810190611015565b3691610181565b6118ef565b6111ef81515115611047565b0151611a8d565b9160608301519060205f6040518061120e8186611093565b039060025afa1561124f5761122861122d925f51146110b0565b611dca565b90916101466001600160401b0383611247865115156110fc565b161515611148565b6110a5565b61125c610f13565b506112695f5482106106f1565b5f5260016020526101d260405f206108b6565b634e487b7160e01b5f52603260045260245ffd5b80511561129d5760200190565b61127c565b80516001101561129d5760210190565b90815181101561129d570160200190565b156112ca57565b60405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a5908189a5d081cd95d608a1b6044820152606490fd5b6007039060078211610bd957565b5f19810191908211610bd957565b91908203918211610bd957565b9061133482610867565b6113416040519182610116565b8281528092611352601f1991610867565b0190602036910137565b80516001101561129d5760400190565b80516002101561129d5760600190565b80516003101561129d5760800190565b80516004101561129d5760a00190565b80516005101561129d5760c00190565b80516006101561129d5760e00190565b80516007101561129d576101000190565b805182101561129d5760209160051b010190565b80511515806114e3575b6113f4906112c3565b61141761141161140383611290565b516001600160f81b03191690565b60f81c90565b905f916080905b60ff82821616156114c15750506114466114418361143c8451610bc3565b61131d565b61132a565b5f905f5b83518110156114b957806114b357845b6008811061146b575060010161144a565b926114ac6001916114a760ff611487611411611403888c6112b2565b856114918a611301565b1b161615156114a083886113cd565b9015159052565b610f3e565b930161145a565b5f61145a565b509250505090565b90926114db6114d160ff92610f3e565b9460011c607f1690565b91905061141e565b506113f46001600160f81b03196114fc61140384611290565b16151590506113eb565b1561150d57565b60405162461bcd60e51b815260206004820152603e60248201527f5369676e657273206c656e677468206d757374206265206c657373207468616e60448201527f206f7220657175616c20746f2076616c696461746f7273206c656e67746800006064820152608490fd5b906001600160401b03809116911601906001600160401b038211610bd957565b91906115a8835182511015611506565b6060905f905f5b8151811015611672578551818181109182611645575b50506115d4575b6001016115af565b916115df83836113cd565b51936001600160401b0382161561162557600191611616602061160761161c94895190611f7b565b9701516001600160401b031690565b90611578565b925b90506115cc565b5050600161163f602085519501516001600160401b031690565b9261161e565b61166b925061165a6116659261165f9261131d565b61130f565b886113cd565b51151590565b815f6115c5565b505092509190565b906001600160401b03169081604302916043830403610bd9576001600160401b03169081606402916064830403610bd957111590565b91604051916116c0606084610116565b602b83527f424c535f5349475f424c53313233383147325f584d443a5348412d3235365f5360208401526a5357555f524f5f504f505f60a81b6040840152608084510361179b5760019361175a61176e83611760611730611797985f9861172b60c08b9a5114612011565b61274b565b9161175a61174561173f61205d565b92612991565b9160405196879561175a60208801809b611093565b90611093565b03601f198101835282610116565b5190600f5afa61178561177f611f00565b916120ea565b6117926020825114612136565b61218e565b1490565b60405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207075626c6963206b6579206c656e677468000000000000006044820152606490fd5b604051906117ed826100e0565b60606020838281520152565b1561180057565b60405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a590818dbd91958c8125160821b6044820152606490fd5b80516020909101516001600160e01b031981169291906004821061185a575050565b6001600160e01b031960049290920360031b82901b16169150565b1561187c57565b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207061796c6f616420747970652049440000000000000000006044820152606490fd5b63ffffffff16600a019063ffffffff8211610bd957565b63ffffffff16600e019063ffffffff8211610bd957565b6118f76117e0565b5061190181611290565b516001600160f81b03191615806119bb575b61191c906117f9565b611947600163ffffffff61194061193a611935866121b0565b611838565b60e01c90565b1614611875565b6119a861195961193a61193584612248565b9161196a63ffffffff84168261229b565b9263ffffffff6119a061198b61199a61193a61193561199461198b886118c1565b63ffffffff1690565b886122f6565b936118d8565b911691612541565b6119b0610148565b918252602082015290565b5061191c6119db6119ce611403846112a2565b6001600160f81b03191690565b159050611913565b156119ea57565b60405162461bcd60e51b815260206004820152602960248201527f496e76616c69642056616c696461746f725365745374617465207061796c6f6160448201526819081d1e5c1948125160ba1b6064820152608490fd5b9081602091031261009a575190565b80516020909101516001600160c01b0319811692919060088210611a72575050565b6001600160c01b031960089290920360031b82901b16169150565b611a95610fe1565b506001600160f81b0319611aab61140383611290565b161580611b68575b611abc906117f9565b611adc600463ffffffff611ad561193a611935866121b0565b16146119e3565b611af7611ae88261234b565b60208082518301019101611a41565b90611b60611b15611b0f611b0a8461239e565b611a50565b60c01c90565b91611b50611b34611ae8611b2e611b0f611b0a866123f1565b93612444565b93611b3d610157565b9586526001600160401b03166020860152565b6001600160401b03166040840152565b606082015290565b50611abc611b7b6119ce611403846112a2565b159050611ab3565b90611b8d82610867565b611b9a6040519182610116565b8281528092611bab601f1991610867565b01905f5b828110611bbb57505050565b602090604051611bca816100e0565b606081525f8382015282828501015201611baf565b60405160809190611bf08382610116565b6060815291601f1901366020840137565b60405160a09190611c128382610116565b6080815291601f1901366020840137565b6040516101009190610120611c388183610116565b8382526001600160401b038294116100db57601f190190369060200137565b90611c6182610166565b611c6e6040519182610116565b8281528092611352601f1991610166565b15611c8657565b60405162461bcd60e51b815260206004820152603960248201527f424c53207075626c6963206b6579206d7573742062652067726561746572207460448201527f68616e20746865206c6174657374207075626c6963206b6579000000000000006064820152608490fd5b9060608201809211610bd957565b9060688201809211610bd957565b6010019081601011610bd957565b9060308201809211610bd957565b6050019081605011610bd957565b9060908201809211610bd957565b6090019081609011610bd957565b60d001908160d011610bd957565b91908201809211610bd957565b15611d7557565b60405162461bcd60e51b815260206004820152602760248201527f56616c696461746f7220776569676874206d75737420626520677265617465726044820152660207468616e20360cc1b6064820152608490fd5b906001600160f81b0319611de061140384611290565b161580611ee5575b611df1906117f9565b63ffffffff611e0561193a611935856121b0565b16611e0f81611b83565b925f91600694611e1d611bdf565b925f945b63ffffffff861684811015611ed957611ecf611ec98763ffffffff94611ec3600195611e988f611b0f611b0a611e7883611e738f611e6d611e66611e7e985f93612497565b9c8d61259c565b13611c7f565b611cf1565b8d6124ec565b94611e936001600160401b0387161515611d6e565b612682565b611ea0610148565b9081526001600160401b0385166020820152611ebc828c6113cd565b52896113cd565b50611578565b99611cff565b9601169496611e21565b50965050925050509190565b50611df1611ef86119ce611403856112a2565b159050611de8565b3d15611f2a573d90611f1182610166565b91611f1f6040519384610116565b82523d5f602084013e565b606090565b15611f3657565b60405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f2061646420473120706f696e74730000000000000000006044820152606490fd5b90608082511480612006575b15611fc1575f91611760611faa849360405192839161175a602084018097611093565b5190600b5afa6101d2611fbb611f00565b91611f2f565b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420473120706f696e74206c656e6774680000000000000000006044820152606490fd5b506080815114611f87565b1561201857565b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207369676e6174757265206c656e67746800000000000000006044820152606490fd5b6040519061206c60a083610116565b608082527f67816aef1db507c96655b9d5caac42364e6f38ba0ecb751bad54dcd6b939c2ca6080836f17f1d3a73197d7942695638c4fa9ac0f60208201527fc3688c4f9774b905a14e3a3f171bac586c55e83ff97a1aeffb3af00adb22c6bb60408201526f114d1d6855d545a8aa7d76c8cf2e21f260608201520152565b156120f157565b60405162461bcd60e51b815260206004820152601f60248201527f4661696c656420746f20706572666f726d2070616972696e6720636865636b006044820152606490fd5b1561213d57565b60405162461bcd60e51b815260206004820152602360248201527f496e76616c69642070616972696e6720636865636b206f7574707574206c656e6044820152620cee8d60eb1b6064820152608490fd5b6020815191015190602081106121a2575090565b5f199060200360031b1b1690565b906006825110612203576121c46004611c57565b9160025f5b600481106121d657505050565b80820190818311610bd9576121f0611403600193866112b2565b5f1a6121fc82886112b2565b53016121c9565b60405162461bcd60e51b815260206004820152601960248201527f42797465536c696365723a206f7574206f6620626f756e6473000000000000006044820152606490fd5b90600a8251106122035761225c6004611c57565b9160065f5b6004811061226e57505050565b80820190818311610bd957612288611403600193866112b2565b5f1a61229482886112b2565b5301612261565b9190825181600a019081600a11610bd95710612203576122ba81611c57565b925f5b8281106122c957505050565b806122e36114036122dd600194600a611d61565b856112b2565b5f1a6122ef82886112b2565b53016122bd565b919082516004820190818311610bd95710612203576123156004611c57565b925f5b6004811061232557505050565b806123386114036122dd60019487611d61565b5f1a61234482886112b2565b5301612318565b9060268251106122035761235f6020611c57565b9160065f5b6020811061237157505050565b80820190818311610bd95761238b611403600193866112b2565b5f1a61239782886112b2565b5301612364565b90602e825110612203576123b26008611c57565b9160265f5b600881106123c457505050565b80820190818311610bd9576123de611403600193866112b2565b5f1a6123ea82886112b2565b53016123b7565b906036825110612203576124056008611c57565b91602e5f5b6008811061241757505050565b80820190818311610bd957612431611403600193866112b2565b5f1a61243d82886112b2565b530161240a565b906056825110612203576124586020611c57565b9160365f5b6020811061246a57505050565b80820190818311610bd957612484611403600193866112b2565b5f1a61249082886112b2565b530161245d565b919082516060820190818311610bd95710612203576124b66060611c57565b925f5b606081106124c657505050565b806124d96114036122dd60019487611d61565b5f1a6124e582886112b2565b53016124b9565b919082516008820190818311610bd957106122035761250b6008611c57565b925f5b6008811061251b57505050565b8061252e6114036122dd60019487611d61565b5f1a61253a82886112b2565b530161250e565b92919092805182850190818611610bd957106122035761256082611c57565b935f5b8381106125705750505050565b8061258961140361258360019486611d61565b866112b2565b5f1a61259582896112b2565b5301612563565b805180158080612679575b612671576126695782518015612650578082101561266257505b5f5b8181106125ec575050519051908181106125e557116125e0575f90565b600190565b50505f1990565b6125f961140382856112b2565b6126096119ce61140384886112b2565b6001600160f81b0319909116106126595761262761140382856112b2565b6126376119ce61140384886112b2565b6001600160f81b031990911611612650576001016125c3565b50505050600190565b505050505f1990565b90506125c1565b505050600190565b505050505f90565b508351156125a7565b90606082510361270657612694611c01565b5f5b603081106126e357505f5b603081106126ae57509150565b806126c66114036126c0600194611d1b565b876112b2565b6126dc6126d283611d29565b915f1a91856112b2565b53016126a1565b806126f3611403600193876112b2565b6126ff6126d283611d0d565b5301612696565b60405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420696e707574207075626c6963206b6579206c656e677468006044820152606490fd5b90612754612a69565b506127d36127c561278561277e61277961276f610100612c4d565b60051c6107ff1690565b612c61565b61ffff1690565b9261279360ff851115612c75565b6127a160ff82511115612ccb565b6127bf6127af825160ff1690565b60f81b6001600160f81b03191690565b90612d06565b928390600160f81b90612d39565b9160205f6127f06127e38561132a565b9560405191828092611093565b039060025afa1561124f575f5160205f61281961280d8585612d8c565b60405191828092611093565b039060025afa1561124f575f5161282f85611290565b5260025b8360ff821611156128e05750505050806101d291506128da6128d3612856612a69565b61287361286285611290565b5161286c8661135c565b5190612e0b565b81515261288c6128828561136c565b5161286c8661137c565b6020825101526128c76128ab6128a18661138c565b5161286c8761139c565b94602083019586515261286c6128c0826113ac565b51916113bc565b60208551015251612aca565b9151612aca565b90612bb5565b60205f61291a8361280d6129056128ff6128f984612dc6565b60ff1690565b8b6113cd565b51871861176089604051948593898501612deb565b039060025afa1561124f57612940905f5161293a61165f6128f984612dd9565b52612db5565b612833565b1561294c57565b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420696e707574207369676e6174757265206c656e67746800006044820152606490fd5b9061299f60c0835114612945565b6129a7611c23565b5f5b60308110612a4457505f5b60308110612a2157505f5b603081106129fc57505f5b603081106129d757509150565b806129e96114036126c0600194611cf1565b6129f56126d283611d53565b53016129ca565b80612a0e6114036126c0600194611d37565b612a1a6126d283611d45565b53016129bf565b80612a31611403600193876112b2565b612a3d6126d283611d29565b53016129b4565b80612a566114036126c0600194611d1b565b612a626126d283611d0d565b53016129a9565b6040908151612a788382610116565b91604090835f5b838110612a8c5750505050565b6020908351612a9a816100e0565b8451612aa68682610116565b8536823781528451612ab88682610116565b85368237838201528184015201612a7f565b5f80918051519060208082510151910160208151519151015190604051926020840194855260408401526060830152608082015260808152612b0d60a082610116565b519060115afa612b1b611f00565b9015612b245790565b60405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f206d61702046703220746f2047320000000000000000006044820152606490fd5b15612b7057565b60405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f2061646420473220706f696e74730000000000000000006044820152606490fd5b9061010082511480612c41575b15612bfc575f91611760612be5849360405192839161175a602084018097611093565b5190600d5afa6101d2612bf6611f00565b91612b69565b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420473220706f696e74206c656e6774680000000000000000006044820152606490fd5b50610100815114612bc2565b61ffff5f199116019061ffff8211610bd957565b61ffff60019116019061ffff8211610bd957565b15612c7c57565b60405162461bcd60e51b815260206004820152602160248201527f6c656e5f696e5f627974657320746f6f206c6172676520666f722073686132356044820152601b60f91b6064820152608490fd5b15612cd257565b60405162461bcd60e51b815260206004820152600c60248201526b64737420746f6f206c6f6e6760a01b6044820152606490fd5b600161014691612d2194936040519586926020840190611093565b9060ff60f81b16815203601e19810185520183610116565b612d7e612d6394936003610146946040519788955f60208801525f60408801526060870190611093565b6001600160f01b031990911681525f60028201520190611093565b03601f198101845283610116565b61014690929192612d7e6040519485926020840152600160f81b60408401526041830190611093565b60ff1660ff8114610bd95760010190565b60ff6001199116019060ff8211610bd957565b60ff5f199116019060ff8211610bd957565b6101d29392602192825260ff60f81b9060f81b1660208201520190611093565b919091604092838051612e1e8282610116565b3690378351908482526020808301528482019285845260608301526080820152600160a08201526f1a0111ea397fe69a4b1ba7b6434bacd760c08201527f64774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab60e08201528381610100816005610545195a01fa15612e99579252565bfefea2646970667358221220ef744c2bd9b4f4c4a6ac7ad5e280122ab590f11db62088b3e259d68be020adbc64736f6c634300081e0033",
}

// AvalancheValidatorSetRegistryABI is the input ABI used to generate the binding from.
// Deprecated: Use AvalancheValidatorSetRegistryMetaData.ABI instead.
var AvalancheValidatorSetRegistryABI = AvalancheValidatorSetRegistryMetaData.ABI

// AvalancheValidatorSetRegistryBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use AvalancheValidatorSetRegistryMetaData.Bin instead.
var AvalancheValidatorSetRegistryBin = AvalancheValidatorSetRegistryMetaData.Bin

// DeployAvalancheValidatorSetRegistry deploys a new Ethereum contract, binding an instance of AvalancheValidatorSetRegistry to it.
func DeployAvalancheValidatorSetRegistry(auth *bind.TransactOpts, backend bind.ContractBackend, _avalancheNetworkID uint32) (common.Address, *types.Transaction, *AvalancheValidatorSetRegistry, error) {
	parsed, err := AvalancheValidatorSetRegistryMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(AvalancheValidatorSetRegistryBin), backend, _avalancheNetworkID)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &AvalancheValidatorSetRegistry{AvalancheValidatorSetRegistryCaller: AvalancheValidatorSetRegistryCaller{contract: contract}, AvalancheValidatorSetRegistryTransactor: AvalancheValidatorSetRegistryTransactor{contract: contract}, AvalancheValidatorSetRegistryFilterer: AvalancheValidatorSetRegistryFilterer{contract: contract}}, nil
}

// AvalancheValidatorSetRegistry is an auto generated Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistry struct {
	AvalancheValidatorSetRegistryCaller     // Read-only binding to the contract
	AvalancheValidatorSetRegistryTransactor // Write-only binding to the contract
	AvalancheValidatorSetRegistryFilterer   // Log filterer for contract events
}

// AvalancheValidatorSetRegistryCaller is an auto generated read-only Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AvalancheValidatorSetRegistryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AvalancheValidatorSetRegistryFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type AvalancheValidatorSetRegistryFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AvalancheValidatorSetRegistrySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type AvalancheValidatorSetRegistrySession struct {
	Contract     *AvalancheValidatorSetRegistry // Generic contract binding to set the session for
	CallOpts     bind.CallOpts                  // Call options to use throughout this session
	TransactOpts bind.TransactOpts              // Transaction auth options to use throughout this session
}

// AvalancheValidatorSetRegistryCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type AvalancheValidatorSetRegistryCallerSession struct {
	Contract *AvalancheValidatorSetRegistryCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                        // Call options to use throughout this session
}

// AvalancheValidatorSetRegistryTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type AvalancheValidatorSetRegistryTransactorSession struct {
	Contract     *AvalancheValidatorSetRegistryTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                        // Transaction auth options to use throughout this session
}

// AvalancheValidatorSetRegistryRaw is an auto generated low-level Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistryRaw struct {
	Contract *AvalancheValidatorSetRegistry // Generic contract binding to access the raw methods on
}

// AvalancheValidatorSetRegistryCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistryCallerRaw struct {
	Contract *AvalancheValidatorSetRegistryCaller // Generic read-only contract binding to access the raw methods on
}

// AvalancheValidatorSetRegistryTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type AvalancheValidatorSetRegistryTransactorRaw struct {
	Contract *AvalancheValidatorSetRegistryTransactor // Generic write-only contract binding to access the raw methods on
}

// NewAvalancheValidatorSetRegistry creates a new instance of AvalancheValidatorSetRegistry, bound to a specific deployed contract.
func NewAvalancheValidatorSetRegistry(address common.Address, backend bind.ContractBackend) (*AvalancheValidatorSetRegistry, error) {
	contract, err := bindAvalancheValidatorSetRegistry(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistry{AvalancheValidatorSetRegistryCaller: AvalancheValidatorSetRegistryCaller{contract: contract}, AvalancheValidatorSetRegistryTransactor: AvalancheValidatorSetRegistryTransactor{contract: contract}, AvalancheValidatorSetRegistryFilterer: AvalancheValidatorSetRegistryFilterer{contract: contract}}, nil
}

// NewAvalancheValidatorSetRegistryCaller creates a new read-only instance of AvalancheValidatorSetRegistry, bound to a specific deployed contract.
func NewAvalancheValidatorSetRegistryCaller(address common.Address, caller bind.ContractCaller) (*AvalancheValidatorSetRegistryCaller, error) {
	contract, err := bindAvalancheValidatorSetRegistry(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistryCaller{contract: contract}, nil
}

// NewAvalancheValidatorSetRegistryTransactor creates a new write-only instance of AvalancheValidatorSetRegistry, bound to a specific deployed contract.
func NewAvalancheValidatorSetRegistryTransactor(address common.Address, transactor bind.ContractTransactor) (*AvalancheValidatorSetRegistryTransactor, error) {
	contract, err := bindAvalancheValidatorSetRegistry(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistryTransactor{contract: contract}, nil
}

// NewAvalancheValidatorSetRegistryFilterer creates a new log filterer instance of AvalancheValidatorSetRegistry, bound to a specific deployed contract.
func NewAvalancheValidatorSetRegistryFilterer(address common.Address, filterer bind.ContractFilterer) (*AvalancheValidatorSetRegistryFilterer, error) {
	contract, err := bindAvalancheValidatorSetRegistry(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistryFilterer{contract: contract}, nil
}

// bindAvalancheValidatorSetRegistry binds a generic wrapper to an already deployed contract.
func bindAvalancheValidatorSetRegistry(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := AvalancheValidatorSetRegistryMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _AvalancheValidatorSetRegistry.Contract.AvalancheValidatorSetRegistryCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.AvalancheValidatorSetRegistryTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.AvalancheValidatorSetRegistryTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _AvalancheValidatorSetRegistry.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.contract.Transact(opts, method, params...)
}

// AvalancheNetworkID is a free data retrieval call binding the contract method 0x68531ed0.
//
// Solidity: function avalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCaller) AvalancheNetworkID(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _AvalancheValidatorSetRegistry.contract.Call(opts, &out, "avalancheNetworkID")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// AvalancheNetworkID is a free data retrieval call binding the contract method 0x68531ed0.
//
// Solidity: function avalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) AvalancheNetworkID() (uint32, error) {
	return _AvalancheValidatorSetRegistry.Contract.AvalancheNetworkID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// AvalancheNetworkID is a free data retrieval call binding the contract method 0x68531ed0.
//
// Solidity: function avalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerSession) AvalancheNetworkID() (uint32, error) {
	return _AvalancheValidatorSetRegistry.Contract.AvalancheNetworkID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// GetAvalancheNetworkID is a free data retrieval call binding the contract method 0x82366d05.
//
// Solidity: function getAvalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCaller) GetAvalancheNetworkID(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _AvalancheValidatorSetRegistry.contract.Call(opts, &out, "getAvalancheNetworkID")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GetAvalancheNetworkID is a free data retrieval call binding the contract method 0x82366d05.
//
// Solidity: function getAvalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) GetAvalancheNetworkID() (uint32, error) {
	return _AvalancheValidatorSetRegistry.Contract.GetAvalancheNetworkID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// GetAvalancheNetworkID is a free data retrieval call binding the contract method 0x82366d05.
//
// Solidity: function getAvalancheNetworkID() view returns(uint32)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerSession) GetAvalancheNetworkID() (uint32, error) {
	return _AvalancheValidatorSetRegistry.Contract.GetAvalancheNetworkID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// GetValidatorSet is a free data retrieval call binding the contract method 0xa04e8293.
//
// Solidity: function getValidatorSet(uint256 validatorSetID) view returns((bytes32,(bytes,uint64)[],uint64,uint64,uint64))
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCaller) GetValidatorSet(opts *bind.CallOpts, validatorSetID *big.Int) (ValidatorSet, error) {
	var out []interface{}
	err := _AvalancheValidatorSetRegistry.contract.Call(opts, &out, "getValidatorSet", validatorSetID)

	if err != nil {
		return *new(ValidatorSet), err
	}

	out0 := *abi.ConvertType(out[0], new(ValidatorSet)).(*ValidatorSet)

	return out0, err

}

// GetValidatorSet is a free data retrieval call binding the contract method 0xa04e8293.
//
// Solidity: function getValidatorSet(uint256 validatorSetID) view returns((bytes32,(bytes,uint64)[],uint64,uint64,uint64))
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) GetValidatorSet(validatorSetID *big.Int) (ValidatorSet, error) {
	return _AvalancheValidatorSetRegistry.Contract.GetValidatorSet(&_AvalancheValidatorSetRegistry.CallOpts, validatorSetID)
}

// GetValidatorSet is a free data retrieval call binding the contract method 0xa04e8293.
//
// Solidity: function getValidatorSet(uint256 validatorSetID) view returns((bytes32,(bytes,uint64)[],uint64,uint64,uint64))
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerSession) GetValidatorSet(validatorSetID *big.Int) (ValidatorSet, error) {
	return _AvalancheValidatorSetRegistry.Contract.GetValidatorSet(&_AvalancheValidatorSetRegistry.CallOpts, validatorSetID)
}

// NextValidatorSetID is a free data retrieval call binding the contract method 0x38153622.
//
// Solidity: function nextValidatorSetID() view returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCaller) NextValidatorSetID(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _AvalancheValidatorSetRegistry.contract.Call(opts, &out, "nextValidatorSetID")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// NextValidatorSetID is a free data retrieval call binding the contract method 0x38153622.
//
// Solidity: function nextValidatorSetID() view returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) NextValidatorSetID() (*big.Int, error) {
	return _AvalancheValidatorSetRegistry.Contract.NextValidatorSetID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// NextValidatorSetID is a free data retrieval call binding the contract method 0x38153622.
//
// Solidity: function nextValidatorSetID() view returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerSession) NextValidatorSetID() (*big.Int, error) {
	return _AvalancheValidatorSetRegistry.Contract.NextValidatorSetID(&_AvalancheValidatorSetRegistry.CallOpts)
}

// VerifyICMMessage is a free data retrieval call binding the contract method 0xba8d4979.
//
// Solidity: function verifyICMMessage(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message) view returns(bool)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCaller) VerifyICMMessage(opts *bind.CallOpts, validatorSetID *big.Int, message ICMMessage) (bool, error) {
	var out []interface{}
	err := _AvalancheValidatorSetRegistry.contract.Call(opts, &out, "verifyICMMessage", validatorSetID, message)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// VerifyICMMessage is a free data retrieval call binding the contract method 0xba8d4979.
//
// Solidity: function verifyICMMessage(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message) view returns(bool)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) VerifyICMMessage(validatorSetID *big.Int, message ICMMessage) (bool, error) {
	return _AvalancheValidatorSetRegistry.Contract.VerifyICMMessage(&_AvalancheValidatorSetRegistry.CallOpts, validatorSetID, message)
}

// VerifyICMMessage is a free data retrieval call binding the contract method 0xba8d4979.
//
// Solidity: function verifyICMMessage(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message) view returns(bool)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryCallerSession) VerifyICMMessage(validatorSetID *big.Int, message ICMMessage) (bool, error) {
	return _AvalancheValidatorSetRegistry.Contract.VerifyICMMessage(&_AvalancheValidatorSetRegistry.CallOpts, validatorSetID, message)
}

// RegisterValidatorSet is a paid mutator transaction binding the contract method 0xfd94b8ea.
//
// Solidity: function registerValidatorSet(((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactor) RegisterValidatorSet(opts *bind.TransactOpts, message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.contract.Transact(opts, "registerValidatorSet", message, validatorBytes)
}

// RegisterValidatorSet is a paid mutator transaction binding the contract method 0xfd94b8ea.
//
// Solidity: function registerValidatorSet(((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) RegisterValidatorSet(message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.RegisterValidatorSet(&_AvalancheValidatorSetRegistry.TransactOpts, message, validatorBytes)
}

// RegisterValidatorSet is a paid mutator transaction binding the contract method 0xfd94b8ea.
//
// Solidity: function registerValidatorSet(((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns(uint256)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactorSession) RegisterValidatorSet(message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.RegisterValidatorSet(&_AvalancheValidatorSetRegistry.TransactOpts, message, validatorBytes)
}

// UpdateValidatorSet is a paid mutator transaction binding the contract method 0x4095a588.
//
// Solidity: function updateValidatorSet(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns()
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactor) UpdateValidatorSet(opts *bind.TransactOpts, validatorSetID *big.Int, message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.contract.Transact(opts, "updateValidatorSet", validatorSetID, message, validatorBytes)
}

// UpdateValidatorSet is a paid mutator transaction binding the contract method 0x4095a588.
//
// Solidity: function updateValidatorSet(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns()
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistrySession) UpdateValidatorSet(validatorSetID *big.Int, message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.UpdateValidatorSet(&_AvalancheValidatorSetRegistry.TransactOpts, validatorSetID, message, validatorBytes)
}

// UpdateValidatorSet is a paid mutator transaction binding the contract method 0x4095a588.
//
// Solidity: function updateValidatorSet(uint256 validatorSetID, ((uint32,bytes32,bytes),bytes,(bytes,bytes)) message, bytes validatorBytes) returns()
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryTransactorSession) UpdateValidatorSet(validatorSetID *big.Int, message ICMMessage, validatorBytes []byte) (*types.Transaction, error) {
	return _AvalancheValidatorSetRegistry.Contract.UpdateValidatorSet(&_AvalancheValidatorSetRegistry.TransactOpts, validatorSetID, message, validatorBytes)
}

// AvalancheValidatorSetRegistryValidatorSetRegisteredIterator is returned from FilterValidatorSetRegistered and is used to iterate over the raw logs and unpacked data for ValidatorSetRegistered events raised by the AvalancheValidatorSetRegistry contract.
type AvalancheValidatorSetRegistryValidatorSetRegisteredIterator struct {
	Event *AvalancheValidatorSetRegistryValidatorSetRegistered // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AvalancheValidatorSetRegistryValidatorSetRegisteredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AvalancheValidatorSetRegistryValidatorSetRegistered)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AvalancheValidatorSetRegistryValidatorSetRegistered)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AvalancheValidatorSetRegistryValidatorSetRegisteredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AvalancheValidatorSetRegistryValidatorSetRegisteredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AvalancheValidatorSetRegistryValidatorSetRegistered represents a ValidatorSetRegistered event raised by the AvalancheValidatorSetRegistry contract.
type AvalancheValidatorSetRegistryValidatorSetRegistered struct {
	ValidatorSetID        *big.Int
	AvalancheBlockchainID [32]byte
	Raw                   types.Log // Blockchain specific contextual infos
}

// FilterValidatorSetRegistered is a free log retrieval operation binding the contract event 0xe93e9f47e7810153341664fc2050adcb29c88899748615c477d17b712d621583.
//
// Solidity: event ValidatorSetRegistered(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) FilterValidatorSetRegistered(opts *bind.FilterOpts, validatorSetID []*big.Int, avalancheBlockchainID [][32]byte) (*AvalancheValidatorSetRegistryValidatorSetRegisteredIterator, error) {

	var validatorSetIDRule []interface{}
	for _, validatorSetIDItem := range validatorSetID {
		validatorSetIDRule = append(validatorSetIDRule, validatorSetIDItem)
	}
	var avalancheBlockchainIDRule []interface{}
	for _, avalancheBlockchainIDItem := range avalancheBlockchainID {
		avalancheBlockchainIDRule = append(avalancheBlockchainIDRule, avalancheBlockchainIDItem)
	}

	logs, sub, err := _AvalancheValidatorSetRegistry.contract.FilterLogs(opts, "ValidatorSetRegistered", validatorSetIDRule, avalancheBlockchainIDRule)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistryValidatorSetRegisteredIterator{contract: _AvalancheValidatorSetRegistry.contract, event: "ValidatorSetRegistered", logs: logs, sub: sub}, nil
}

// WatchValidatorSetRegistered is a free log subscription operation binding the contract event 0xe93e9f47e7810153341664fc2050adcb29c88899748615c477d17b712d621583.
//
// Solidity: event ValidatorSetRegistered(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) WatchValidatorSetRegistered(opts *bind.WatchOpts, sink chan<- *AvalancheValidatorSetRegistryValidatorSetRegistered, validatorSetID []*big.Int, avalancheBlockchainID [][32]byte) (event.Subscription, error) {

	var validatorSetIDRule []interface{}
	for _, validatorSetIDItem := range validatorSetID {
		validatorSetIDRule = append(validatorSetIDRule, validatorSetIDItem)
	}
	var avalancheBlockchainIDRule []interface{}
	for _, avalancheBlockchainIDItem := range avalancheBlockchainID {
		avalancheBlockchainIDRule = append(avalancheBlockchainIDRule, avalancheBlockchainIDItem)
	}

	logs, sub, err := _AvalancheValidatorSetRegistry.contract.WatchLogs(opts, "ValidatorSetRegistered", validatorSetIDRule, avalancheBlockchainIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AvalancheValidatorSetRegistryValidatorSetRegistered)
				if err := _AvalancheValidatorSetRegistry.contract.UnpackLog(event, "ValidatorSetRegistered", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseValidatorSetRegistered is a log parse operation binding the contract event 0xe93e9f47e7810153341664fc2050adcb29c88899748615c477d17b712d621583.
//
// Solidity: event ValidatorSetRegistered(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) ParseValidatorSetRegistered(log types.Log) (*AvalancheValidatorSetRegistryValidatorSetRegistered, error) {
	event := new(AvalancheValidatorSetRegistryValidatorSetRegistered)
	if err := _AvalancheValidatorSetRegistry.contract.UnpackLog(event, "ValidatorSetRegistered", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// AvalancheValidatorSetRegistryValidatorSetUpdatedIterator is returned from FilterValidatorSetUpdated and is used to iterate over the raw logs and unpacked data for ValidatorSetUpdated events raised by the AvalancheValidatorSetRegistry contract.
type AvalancheValidatorSetRegistryValidatorSetUpdatedIterator struct {
	Event *AvalancheValidatorSetRegistryValidatorSetUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AvalancheValidatorSetRegistryValidatorSetUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AvalancheValidatorSetRegistryValidatorSetUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AvalancheValidatorSetRegistryValidatorSetUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AvalancheValidatorSetRegistryValidatorSetUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AvalancheValidatorSetRegistryValidatorSetUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AvalancheValidatorSetRegistryValidatorSetUpdated represents a ValidatorSetUpdated event raised by the AvalancheValidatorSetRegistry contract.
type AvalancheValidatorSetRegistryValidatorSetUpdated struct {
	ValidatorSetID        *big.Int
	AvalancheBlockchainID [32]byte
	Raw                   types.Log // Blockchain specific contextual infos
}

// FilterValidatorSetUpdated is a free log retrieval operation binding the contract event 0xd48741f16bef6492997e28d107c7a13b06376de704072bdb37a9b02e502ea1f9.
//
// Solidity: event ValidatorSetUpdated(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) FilterValidatorSetUpdated(opts *bind.FilterOpts, validatorSetID []*big.Int, avalancheBlockchainID [][32]byte) (*AvalancheValidatorSetRegistryValidatorSetUpdatedIterator, error) {

	var validatorSetIDRule []interface{}
	for _, validatorSetIDItem := range validatorSetID {
		validatorSetIDRule = append(validatorSetIDRule, validatorSetIDItem)
	}
	var avalancheBlockchainIDRule []interface{}
	for _, avalancheBlockchainIDItem := range avalancheBlockchainID {
		avalancheBlockchainIDRule = append(avalancheBlockchainIDRule, avalancheBlockchainIDItem)
	}

	logs, sub, err := _AvalancheValidatorSetRegistry.contract.FilterLogs(opts, "ValidatorSetUpdated", validatorSetIDRule, avalancheBlockchainIDRule)
	if err != nil {
		return nil, err
	}
	return &AvalancheValidatorSetRegistryValidatorSetUpdatedIterator{contract: _AvalancheValidatorSetRegistry.contract, event: "ValidatorSetUpdated", logs: logs, sub: sub}, nil
}

// WatchValidatorSetUpdated is a free log subscription operation binding the contract event 0xd48741f16bef6492997e28d107c7a13b06376de704072bdb37a9b02e502ea1f9.
//
// Solidity: event ValidatorSetUpdated(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) WatchValidatorSetUpdated(opts *bind.WatchOpts, sink chan<- *AvalancheValidatorSetRegistryValidatorSetUpdated, validatorSetID []*big.Int, avalancheBlockchainID [][32]byte) (event.Subscription, error) {

	var validatorSetIDRule []interface{}
	for _, validatorSetIDItem := range validatorSetID {
		validatorSetIDRule = append(validatorSetIDRule, validatorSetIDItem)
	}
	var avalancheBlockchainIDRule []interface{}
	for _, avalancheBlockchainIDItem := range avalancheBlockchainID {
		avalancheBlockchainIDRule = append(avalancheBlockchainIDRule, avalancheBlockchainIDItem)
	}

	logs, sub, err := _AvalancheValidatorSetRegistry.contract.WatchLogs(opts, "ValidatorSetUpdated", validatorSetIDRule, avalancheBlockchainIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AvalancheValidatorSetRegistryValidatorSetUpdated)
				if err := _AvalancheValidatorSetRegistry.contract.UnpackLog(event, "ValidatorSetUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseValidatorSetUpdated is a log parse operation binding the contract event 0xd48741f16bef6492997e28d107c7a13b06376de704072bdb37a9b02e502ea1f9.
//
// Solidity: event ValidatorSetUpdated(uint256 indexed validatorSetID, bytes32 indexed avalancheBlockchainID)
func (_AvalancheValidatorSetRegistry *AvalancheValidatorSetRegistryFilterer) ParseValidatorSetUpdated(log types.Log) (*AvalancheValidatorSetRegistryValidatorSetUpdated, error) {
	event := new(AvalancheValidatorSetRegistryValidatorSetUpdated)
	if err := _AvalancheValidatorSetRegistry.contract.UnpackLog(event, "ValidatorSetUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
