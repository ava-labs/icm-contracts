// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package nativetokenslotauctionmanager

import (
	"errors"
	"math/big"
	"strings"

	"github.com/ava-labs/subnet-evm/accounts/abi"
	"github.com/ava-labs/subnet-evm/accounts/abi/bind"
	"github.com/ava-labs/subnet-evm/core/types"
	"github.com/ava-labs/subnet-evm/interfaces"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = interfaces.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// AuctionSettings is an auto generated low-level Go binding around an user-defined struct.
type AuctionSettings struct {
	TotalValidatorSlots  uint16
	Weight               uint64
	MinValidatorDuration *big.Int
	MinAuctionDuration   *big.Int
	MinimumBid           *big.Int
}

// PChainOwner is an auto generated low-level Go binding around an user-defined struct.
type PChainOwner struct {
	Threshold uint32
	Addresses []common.Address
}

// SlotAuctionManagerSettings is an auto generated low-level Go binding around an user-defined struct.
type SlotAuctionManagerSettings struct {
	Admin           common.Address
	Manager         common.Address
	AuctionSettings AuctionSettings
}

// NativeTokenSlotAuctionManagerMetaData contains all meta data concerning the NativeTokenSlotAuctionManager contract.
var NativeTokenSlotAuctionManagerMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"enumICMInitializable\",\"name\":\"init\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionEndTime\",\"type\":\"uint256\"}],\"name\":\"AuctionEndTimeNotReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AuctionFinalizing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionCooldownEndtime\",\"type\":\"uint256\"}],\"name\":\"AuctionInCooldown\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AuctionInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AuctionNotInProgress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minumumBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBid\",\"type\":\"uint256\"}],\"name\":\"BidSmallerThanMinimum\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"}],\"name\":\"DuplicateBidInContention\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"}],\"name\":\"DuplicateNodeIDInContention\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"smallestAcceptableBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBid\",\"type\":\"uint256\"}],\"name\":\"InsufficientBidToWinAuction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumValidationDuration\",\"type\":\"uint256\"}],\"name\":\"InvalidMinValidatorDuration\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"name\":\"InvalidWeight\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"totalValidatorSlots\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"activeValidators\",\"type\":\"uint16\"}],\"name\":\"MoreActiveValidatorsThanTotalSlots\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"validatorSlots\",\"type\":\"uint16\"}],\"name\":\"NoOpenValidatorSlots\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"}],\"name\":\"NodeIsValidator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validationTimeLimit\",\"type\":\"uint256\"}],\"name\":\"ValidatorTimeLimitNotPassed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"validatorWeight\",\"type\":\"uint64\"}],\"name\":\"ValidatorWeightTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroMinBid\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"}],\"name\":\"BidEvicted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validatorEndTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"name\":\"InitiatedAuctionValidatorRegistration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"validatorSlots\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"validatorWeight\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minValidatorDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionEndTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumBid\",\"type\":\"uint256\"}],\"name\":\"NewValidatorAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"}],\"name\":\"SuccessfulBidPlaced\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MinBidRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SLOT_AUCTION_MANAGER_STORAGE_LOCATION\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"messageIndex\",\"type\":\"uint32\"}],\"name\":\"completeRemoveInitialValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"messageIndex\",\"type\":\"uint32\"}],\"name\":\"completeValidatorRegistration\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"messageIndex\",\"type\":\"uint32\"}],\"name\":\"completeValidatorRemoval\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinAuctionDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinValidatorDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOpenValidatorSlots\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalValidatorSlots\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValidatorWeight\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"contractIValidatorManager\",\"name\":\"manager\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"totalValidatorSlots\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"Weight\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"MinValidatorDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"MinAuctionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"MinimumBid\",\"type\":\"uint256\"}],\"internalType\":\"structAuctionSettings\",\"name\":\"auctionSettings\",\"type\":\"tuple\"}],\"internalType\":\"structSlotAuctionManagerSettings\",\"name\":\"settings\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"}],\"name\":\"initiateRemoveInitialValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"}],\"name\":\"initiateValidatorRemoval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPublicKey\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"structPChainOwner\",\"name\":\"remainingBalanceOwner\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"structPChainOwner\",\"name\":\"disableOwner\",\"type\":\"tuple\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"totalValidatorSlots\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"Weight\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"MinValidatorDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"MinAuctionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"MinimumBid\",\"type\":\"uint256\"}],\"internalType\":\"structAuctionSettings\",\"name\":\"auctionSettings\",\"type\":\"tuple\"}],\"name\":\"setSlotAuctionSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561000f575f80fd5b50604051612e73380380612e7383398101604081905261002e91610107565b60018160018111156100425761004261012c565b0361004f5761004f610055565b50610140565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100a55760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146101045780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b5f60208284031215610117575f80fd5b815160028110610125575f80fd5b9392505050565b634e487b7160e01b5f52602160045260245ffd5b612d268061014d5f395ff3fe608060405260043610610126575f3560e01c80639681d940116100a8578063b6e6a2ca1161006d578063b6e6a2ca1461031e578063c5b636001461033d578063c7d546f214610351578063e4c822ca14610364578063f2fde38b14610383578063fe67a54b146103a2575f80fd5b80639681d9401461027a5780639940d4c614610299578063a3a65e48146102ad578063a476f675146102cc578063aaab8516146102eb575f80fd5b8063715018a6116100ee578063715018a6146101cc57806372684dd3146101e057806378eb9c101461020c5780638da5cb5b14610220578063913ed0b114610266575f80fd5b806301f6cec81461012a57806305af8256146101515780631867b9da1461017257806331b6822e146101915780635561f9df146101b8575b5f80fd5b348015610135575f80fd5b5061013e6103b6565b6040519081526020015b60405180910390f35b34801561015c575f80fd5b5061017061016b36600461252e565b6103ca565b005b34801561017d575f80fd5b5061017061018c366004612547565b610449565b34801561019c575f80fd5b506101a5610555565b60405161ffff9091168152602001610148565b3480156101c3575f80fd5b5061017061056d565b3480156101d7575f80fd5b506101706108db565b3480156101eb575f80fd5b506101f46108ee565b6040516001600160401b039091168152602001610148565b348015610217575f80fd5b506101a5610912565b34801561022b575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610148565b348015610271575f80fd5b5061013e610931565b348015610285575f80fd5b5061013e61029436600461252e565b6109c8565b3480156102a4575f80fd5b5061013e610a4b565b3480156102b8575f80fd5b5061013e6102c736600461252e565b610a5f565b3480156102d7575f80fd5b506101706102e636600461255d565b610add565b3480156102f6575f80fd5b5061013e7f6494e1e6ac2d5f44a06b929c1549cec0c499347f244a852c37aef6b6707be60081565b348015610329575f80fd5b5061017061033836600461255d565b610b3c565b348015610348575f80fd5b5061013e610cdc565b61017061035f366004612728565b610cf0565b34801561036f575f80fd5b5061017061037e3660046127cd565b610d21565b34801561038e575f80fd5b5061017061039d3660046127dd565b610fc6565b3480156103ad575f80fd5b50610170611003565b5f806103c0611794565b6003015492915050565b5f6103d3611794565b805460405163025a076560e61b815263ffffffff851660048201529192506001600160a01b031690639681d940906024016020604051808303815f875af1158015610420573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061044491906127f8565b505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f8115801561048d5750825b90505f826001600160401b031660011480156104a85750303b155b9050811580156104b6575080155b156104d45760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156104fe57845460ff60401b1916600160401b1785555b610507866117b8565b831561054d57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b5f8061055f611794565b6002015461ffff1692915050565b5f610576611794565b905060018154600160a01b900460ff1660028111156105975761059761280f565b036105b557604051639bbb1f3b60e01b815260040160405180910390fd5b60028154600160a01b900460ff1660028111156105d4576105d461280f565b036105f257604051631f86de2560e21b815260040160405180910390fd5b5f6105fb611794565b90508060060154421015610633578060060154604051638fc300c160e01b815260040161062a91815260200190565b60405180910390fd5b5f61063c611794565b805460ff60a01b1916600160a01b178155600481015490915061065f9042612837565b60018201555f600b82018190556002820154600160201b900461ffff1690036106ad5760028101546040516379c2afbd60e11b8152600160201b90910461ffff16600482015260240161062a565b6002810154815460408051631761632760e31b815290515f93600160301b90046001600160401b0316926001600160a01b03169163bb0b19389160048083019260209291908290030181865afa158015610709573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061072d919061285e565b835460408051633002a2bb60e21b815290516001600160a01b039092169163c00a8aec916004808201926020929091908290030181865afa158015610774573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107989190612879565b60ff166107a59190612899565b6107af91906128c4565b6107ba906064612899565b9050806001600160401b03165f036107fc576002820154604051632bfe056160e01b8152600160301b9091046001600160401b0316600482015260240161062a565b6002820154600160201b900461ffff166001600160401b0382161115610843576002820180546201000061ffff600160201b8304160263ffff00001990911617905561085e565b60028201805463ffff000019166201000061ffff8416021790555b60028201546003830154600184015460058501546040805162010000860461ffff168152600160301b9095046001600160401b03166020860152840192909252606083015260808201527f50e40b07b3cd91a269f83830c35b4c090f74ebd0cc06dce4db251ccc23627b549060a00160405180910390a150505050565b6108e36117c9565b6108ec5f611824565b565b5f806108f8611794565b60020154600160301b90046001600160401b031692915050565b5f8061091c611794565b60020154600160201b900461ffff1692915050565b5f8061093b611794565b905060018154600160a01b900460ff16600281111561095c5761095c61280f565b14610979576040516232f00d60e71b815260040160405180910390fd5b5f610982611794565b600281015490915061ffff16610999600c83015490565b10156109a9576005015491505090565b6109b581600c01611894565b6109c0906001612837565b9250505b5090565b5f806109d2611794565b805460405163025a076560e61b815263ffffffff861660048201529192506001600160a01b031690639681d940906024015b6020604051808303815f875af1158015610a20573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a4491906127f8565b9392505050565b5f80610a55611794565b6004015492915050565b5f80610a69611794565b600281018054919250600160201b90910461ffff16906004610a8a836128f5565b825461ffff9182166101009390930a9283029190920219909116179055508054604051631474cbc960e31b815263ffffffff851660048201526001600160a01b039091169063a3a65e4890602401610a04565b5f610ae6611794565b8054604051635b73516560e11b8152600481018590529192506001600160a01b03169063b6e6a2ca906024015b5f604051808303815f87803b158015610b2a575f80fd5b505af115801561054d573d5f803e3d5ffd5b5f610b45611794565b5f838152600982016020526040902060010154909150421015610b93575f82815260098201602052604090819020600101549051631a936b7b60e11b8152600481019190915260240161062a565b80600801816009015f8481526020019081526020015f20600201604051610bba9190612943565b90815260405190819003602001902080546001600160a01b03191681555f60018201819055610bec6002830182612455565b610bf9600383015f612455565b505f600482018190556005909101805467ffffffffffffffff19169055828152600982016020526040812080546001600160a01b03191681556001810182905590610c476002830182612455565b610c54600383015f612455565b505f6004828101919091556005909101805467ffffffffffffffff19169055600282018054600160201b900461ffff1691610c8e836129b5565b825461ffff9182166101009390930a9283029190920219909116179055508054604051635b73516560e11b8152600481018490526001600160a01b039091169063b6e6a2ca90602401610b13565b5f80610ce6611794565b6005015492915050565b610cf86118b9565b610d0534858585856118f0565b610d1b60015f80516020612cd183398151915255565b50505050565b5f610d2a611794565b905060018154600160a01b900460ff166002811115610d4b57610d4b61280f565b03610d6957604051639bbb1f3b60e01b815260040160405180910390fd5b60028154600160a01b900460ff166002811115610d8857610d8861280f565b03610da657604051631f86de2560e21b815260040160405180910390fd5b610dae6117c9565b5f610db7611794565b600281015490915061ffff16610dd060208501856129d5565b61ffff161115610e6257600281015461ffff16610df060208501856129d5565b610dfa91906129f6565b600282018054600490610e19908490600160201b900461ffff16612a18565b92506101000a81548161ffff021916908361ffff160217905550825f016020810190610e4591906129d5565b60028201805461ffff191661ffff92909216919091179055610f6d565b610e6f60208401846129d5565b600282015461ffff91821691610e8f91600160201b8104821691166129f6565b61ffff161115610ee957610ea660208401846129d5565b6002820154610ec29061ffff600160201b8204811691166129f6565b60405163942cc62360e01b815261ffff92831660048201529116602482015260440161062a565b610ef660208401846129d5565b6002820154610f09919061ffff166129f6565b600282018054600490610f28908490600160201b900461ffff166129f6565b92506101000a81548161ffff021916908361ffff160217905550825f016020810190610f5491906129d5565b60028201805461ffff191661ffff929092169190911790555b60608301356004820155604083018035600383015560808401356005830155610f999060208501612a33565b8160020160066101000a8154816001600160401b0302191690836001600160401b03160217905550505050565b610fce6117c9565b6001600160a01b038116610ff757604051631e4fbdf760e01b81525f600482015260240161062a565b61100081611824565b50565b61100b6118b9565b5f611014611794565b905060018154600160a01b900460ff1660028111156110355761103561280f565b14611052576040516232f00d60e71b815260040160405180910390fd5b5f61105b611794565b905061106a4262015180612837565b6006820155805460ff60a01b1916600160a11b17815560018101544210156110ad578060010154604051638230260760e01b815260040161062a91815260200190565b600b8101541580156110c25750600c81015415155b156110d9576110d381600c01611894565b600b8201555b5f6110e582600c015490565b111561175d575f6110f882600c01611df8565b5f818152600a840160209081526040808320815160c08101835281546001600160a01b031681526001820154938101939093526002810180549596509394929390929184019161114790612911565b80601f016020809104026020016040519081016040528092919081815260200182805461117390612911565b80156111be5780601f10611195576101008083540402835291602001916111be565b820191905f5260205f20905b8154815290600101906020018083116111a157829003601f168201915b505050505081526020016003820180546111d790612911565b80601f016020809104026020016040519081016040528092919081815260200182805461120390612911565b801561124e5780601f106112255761010080835404028352916020019161124e565b820191905f5260205f20905b81548152906001019060200180831161123157829003601f168201915b505050918352505060408051808201825260048401805463ffffffff1682526005850180548451602082810282018101909652818152958501959394929385840193909291908301828280156112cb57602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116112ad575b50505091909252505050815260408051808201825260068401805463ffffffff16825260078501805484516020828102820181019096528181529585019593949293858401939092919083018282801561134c57602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831161132e575b505050919092525050509052505f838152600a85016020526040812080546001600160a01b03191681556001810182905591925061138d6002830182612455565b61139a600383015f612455565b60048201805463ffffffff191681555f6113b7600585018261248c565b505060068201805463ffffffff191681555f6113d6600785018261248c565b505050508260070181604001516040516113f09190612a70565b908152604051908190036020019020805460ff19169055600b8301546114169083612a8b565b15611436578051600b84015461143691906114319085612a8b565b611e0b565b82546040828101516060840151608085015160a086015160028901549451634e5bb12760e11b81525f966001600160a01b031695639cb7624e95611495959094909390929091600160301b90046001600160401b031690600401612b2f565b6020604051808303815f875af11580156114b1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114d591906127f8565b9050815f01516001600160a01b0316817f032100a60b84cf31291641706872970585d53fa5be412562041fbf66a99ce2858660010154876003015461151a9190612837565b600288015460408051928352600160301b9091046001600160401b031660208301520160405180910390a36040518060c00160405280835f01516001600160a01b03168152602001856001015486600301546115769190612837565b81526040848101805160208401526060808701518385015283018590526002880154600160301b90046001600160401b03166080909301929092529051905160088701916115c391612a70565b9081526040805160209281900383019020835181546001600160a01b0319166001600160a01b03909116178155918301516001830155820151600282019061160b9082612bdb565b50606082015160038201906116209082612bdb565b506080820151600482015560a0909101516005909101805467ffffffffffffffff19166001600160401b039092169190911790556040805160c0810190915282516001600160a01b0316815260018501546003860154602083019161168491612837565b8152604084810151602080840191909152606080870151838501528301859052600288810154600160301b90046001600160401b03166080909401939093525f858152600989018252829020845181546001600160a01b0319166001600160a01b039091161781559084015160018201559083015190918201906117089082612bdb565b506060820151600382019061171d9082612bdb565b506080820151600482015560a0909101516005909101805467ffffffffffffffff19166001600160401b039092169190911790555050600b8201556110d9565b5f600182015560028101805463ffff000019169055805460ff60a01b19169055506108ec60015f80516020612cd183398151915255565b7f6494e1e6ac2d5f44a06b929c1549cec0c499347f244a852c37aef6b6707be60090565b6117c0611e22565b61100081611e6b565b336117fb7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146108ec5760405163118cdaa760e01b815233600482015260240161062a565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f815f015f815481106118a9576118a9612c96565b905f5260205f2001549050919050565b5f80516020612cd18339815191528054600119016118ea57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b5f6118f9611794565b905060018154600160a01b900460ff16600281111561191a5761191a61280f565b14611937576040516232f00d60e71b815260040160405180910390fd5b5f611940611794565b805460405163d47a948b60e01b81529192506001600160a01b03169063d47a948b90611970908990600401612caa565b602060405180830381865afa15801561198b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119af91906127f8565b156119cf578560405163f3c815f760e01b815260040161062a9190612caa565b80600701866040516119e19190612a70565b9081526040519081900360200190205460ff1615611a14578560405163da1fb87960e01b815260040161062a9190612caa565b5f878152600a820160205260409020546001600160a01b031615611a4e57604051630517e2e760e21b81526004810188905260240161062a565b8681600501541115611a835760058101546040516301a0013b60e61b815260048101919091526024810188905260440161062a565b600281015461ffff6201000090910416611a9e600c83015490565b1015611ab657611ab181600c0188611eac565b611c62565b86611ac382600c01611894565b1015611c2757611ad681600c0188611eb9565b600b82018190555f908152600a82016020526040908190209051611afd9160020190612943565b604051908190038120600b83015490917fdbb7ff16cd6e3cc5c7aca1a615bf0d56f746d9f5708e12d52ebe243518b536cc905f90a3600b8101545f818152600a83016020526040902054611b5c916001600160a01b0390911690611e0b565b8060070181600a015f83600b015481526020019081526020015f20600201604051611b879190612943565b9081526040805160209281900383019020805460ff19169055600b8301545f908152600a8401909252812080546001600160a01b03191681556001810182905590611bd56002830182612455565b611be2600383015f612455565b60048201805463ffffffff191681555f611bff600585018261248c565b505060068201805463ffffffff191681555f611c1e600785018261248c565b50505050611c62565b611c3381600c01611894565b611c3e906001612837565b604051631a79674760e11b815260048101919091526024810188905260440161062a565b6040805160c08101825233815260208082018a81528284018a8152606084018a90526080840189905260a084018890525f8c8152600a870190935293909120825181546001600160a01b0319166001600160a01b039091161781559051600182015591519091906002820190611cd89082612bdb565b5060608201516003820190611ced9082612bdb565b506080820151805160048301805463ffffffff191663ffffffff9092169190911781556020808301518051611d2892600587019201906124a7565b50505060a0820151805160068301805463ffffffff191663ffffffff9092169190911781556020808301518051611d6592600787019201906124a7565b50505090505060018160070187604051611d7f9190612a70565b908152604051908190036020018120805492151560ff1990931692909217909155611dab908790612a70565b6040519081900381209088907f864a2110bb41c315e04bd6122b668384bca4b0d8509e55850db8347e86a95029905f90a350505050505050565b60015f80516020612cd183398151915255565b5f611e0582611ec7611ecb565b92915050565b611e1e6001600160a01b03831682611f5c565b5050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166108ec57604051631afcd79f60e31b815260040160405180910390fd5b611e73611e22565b611e7b611ff6565b611e90611e8b60208301836127dd565b612006565b611000611ea360408301602084016127dd565b82604001612017565b611e1e8282611ec761222f565b5f610a448383611ec761225a565b1190565b5f80611ed5845490565b9050805f03611ee857611ee860316122a7565b5f611ef385826122b8565b5490505f611f04865f1985016122b8565b548654909150869080611f1957611f19612cbc565b600190038181905f5260205f20015f9055905580611f425f885f016122b890919063ffffffff16565b55611f53865f1985015f84896122df565b50949350505050565b80471015611f865760405163cf47918160e01b81524760048201526024810182905260440161062a565b5f826001600160a01b0316826040515f6040518083038185875af1925050503d805f8114611fcf576040519150601f19603f3d011682016040523d82523d5f602084013e611fd4565b606091505b50509050806104445760405163d6bda27560e01b815260040160405180910390fd5b611ffe611e22565b6108ec6123d5565b61200e611e22565b611000816123dd565b61201f611e22565b5f612028611794565b90506001600160a01b0383166120515760405163d92e233d60e01b815260040160405180910390fd5b826001600160a01b03166309c1df666040518163ffffffff1660e01b8152600401602060405180830381865afa15801561208d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120b1919061285e565b6001600160401b0316826040013510156120e4576040805163598c075960e01b815290830135600482015260240161062a565b6120f46040830160208401612a33565b6001600160401b03165f03612138576121136040830160208401612a33565b604051631bf6ffa560e21b81526001600160401b03909116600482015260240161062a565b81608001355f0361215c576040516309a501d360e21b815260040160405180910390fd5b80546001600160a01b0319166001600160a01b03841617815561218260208301836129d5565b60028201805461ffff191661ffff929092169190911790556121a760208301836129d5565b60028201805461ffff92909216600160201b0265ffff00000000199092169190911790556121db6040830160208401612a33565b6002820180546001600160401b0392909216600160301b026dffffffffffffffff00000000000019909216919091179055604082013560038201556060820135600482015560809091013560059091015550565b5f612238845490565b84546001810186555f86815260209020018490559050610d1b848285856123e5565b5f80612264855490565b9050805f036122775761227760316122a7565b5f61228286826122b8565b54905084612290875f6122b8565b5561229e86835f88886122df565b95945050505050565b634e487b715f52806020526024601cfd5b5f826122d76122d4846122d0845f9081526020902090565b0190565b90565b949350505050565b6001600160ff1b038310156123ce57600283810260018101910185811015612388575f61230c88846122b8565b5490505f61231a89846122b8565b54905061232b828763ffffffff8816565b8061233f575061233f81878763ffffffff16565b15612381575f612365858561235886868b63ffffffff16565b1515918118919091021890565b90506123728a898361242d565b61237f8a8a838a8a6122df565b505b50506123cb565b858210156123cb575f61239b88846122b8565b5490506123ac818663ffffffff8716565b156123c9576123bc88878561242d565b6123c988888588886122df565b505b50505b5050505050565b611de5611e22565b610fce611e22565b8215610d1b5760025f198401045f6123fd86836122b8565b54905061240e818563ffffffff8616565b1561241a575050610d1b565b61242586868461242d565b5092506123e5565b5f61243884846122b8565b90505f61244585846122b8565b8054835490915590915550505050565b50805461246190612911565b5f825580601f10612470575050565b601f0160209004905f5260205f20908101906110009190612502565b5080545f8255905f5260205f20908101906110009190612502565b828054828255905f5260205f209081019282156124fa579160200282015b828111156124fa57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906124c5565b506109c49291505b5b808211156109c4575f8155600101612503565b803563ffffffff81168114612529575f80fd5b919050565b5f6020828403121561253e575f80fd5b610a4482612516565b5f60e08284031215612557575f80fd5b50919050565b5f6020828403121561256d575f80fd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b03811182821017156125aa576125aa612574565b60405290565b604051601f8201601f191681016001600160401b03811182821017156125d8576125d8612574565b604052919050565b5f82601f8301126125ef575f80fd5b81356001600160401b0381111561260857612608612574565b61261b601f8201601f19166020016125b0565b81815284602083860101111561262f575f80fd5b816020850160208301375f918101602001919091529392505050565b6001600160a01b0381168114611000575f80fd5b5f6040828403121561266f575f80fd5b612677612588565b905061268282612516565b81526020808301356001600160401b038082111561269e575f80fd5b818501915085601f8301126126b1575f80fd5b8135818111156126c3576126c3612574565b8060051b91506126d48483016125b0565b81815291830184019184810190888411156126ed575f80fd5b938501935b8385101561271757843592506127078361264b565b82825293850193908501906126f2565b808688015250505050505092915050565b5f805f806080858703121561273b575f80fd5b84356001600160401b0380821115612751575f80fd5b61275d888389016125e0565b95506020870135915080821115612772575f80fd5b61277e888389016125e0565b94506040870135915080821115612793575f80fd5b61279f8883890161265f565b935060608701359150808211156127b4575f80fd5b506127c18782880161265f565b91505092959194509250565b5f60a08284031215612557575f80fd5b5f602082840312156127ed575f80fd5b8135610a448161264b565b5f60208284031215612808575f80fd5b5051919050565b634e487b7160e01b5f52602160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b80820180821115611e0557611e05612823565b6001600160401b0381168114611000575f80fd5b5f6020828403121561286e575f80fd5b8151610a448161284a565b5f60208284031215612889575f80fd5b815160ff81168114610a44575f80fd5b6001600160401b038181168382160280821691908281146128bc576128bc612823565b505092915050565b5f6001600160401b03808416806128e957634e487b7160e01b5f52601260045260245ffd5b92169190910492915050565b5f61ffff82168061290857612908612823565b5f190192915050565b600181811c9082168061292557607f821691505b60208210810361255757634e487b7160e01b5f52602260045260245ffd5b5f80835461295081612911565b60018281168015612968576001811461297d576129a9565b60ff19841687528215158302870194506129a9565b875f526020805f205f5b858110156129a05781548a820152908401908201612987565b50505082870194505b50929695505050505050565b5f61ffff8083168181036129cb576129cb612823565b6001019392505050565b5f602082840312156129e5575f80fd5b813561ffff81168114610a44575f80fd5b61ffff828116828216039080821115612a1157612a11612823565b5092915050565b61ffff818116838216019080821115612a1157612a11612823565b5f60208284031215612a43575f80fd5b8135610a448161284a565b5f5b83811015612a68578181015183820152602001612a50565b50505f910152565b5f8251612a81818460208701612a4e565b9190910192915050565b81810381811115611e0557611e05612823565b5f8151808452612ab5816020860160208601612a4e565b601f01601f19169290920160200192915050565b5f6040830163ffffffff8351168452602080840151604060208701528281518085526060880191506020830194505f92505b80831015612b245784516001600160a01b03168252938301936001929092019190830190612afb565b509695505050505050565b60a081525f612b4160a0830188612a9e565b8281036020840152612b538188612a9e565b90508281036040840152612b678187612ac9565b90508281036060840152612b7b8186612ac9565b9150506001600160401b03831660808301529695505050505050565b601f82111561044457805f5260205f20601f840160051c81016020851015612bbc5750805b601f840160051c820191505b818110156123ce575f8155600101612bc8565b81516001600160401b03811115612bf457612bf4612574565b612c0881612c028454612911565b84612b97565b602080601f831160018114612c3b575f8415612c245750858301515b5f19600386901b1c1916600185901b17855561054d565b5f85815260208120601f198616915b82811015612c6957888601518255948401946001909101908401612c4a565b5085821015612c8657878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b5f52603260045260245ffd5b602081525f610a446020830184612a9e565b634e487b7160e01b5f52603160045260245ffdfe9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a2646970667358221220e05e352389d1ba9e007ec411b89921575e1bd43793b6547e6da8cfab2f3df65a64736f6c63430008190033",
}

// NativeTokenSlotAuctionManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use NativeTokenSlotAuctionManagerMetaData.ABI instead.
var NativeTokenSlotAuctionManagerABI = NativeTokenSlotAuctionManagerMetaData.ABI

// NativeTokenSlotAuctionManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use NativeTokenSlotAuctionManagerMetaData.Bin instead.
var NativeTokenSlotAuctionManagerBin = NativeTokenSlotAuctionManagerMetaData.Bin

// DeployNativeTokenSlotAuctionManager deploys a new Ethereum contract, binding an instance of NativeTokenSlotAuctionManager to it.
func DeployNativeTokenSlotAuctionManager(auth *bind.TransactOpts, backend bind.ContractBackend, init uint8) (common.Address, *types.Transaction, *NativeTokenSlotAuctionManager, error) {
	parsed, err := NativeTokenSlotAuctionManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(NativeTokenSlotAuctionManagerBin), backend, init)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &NativeTokenSlotAuctionManager{NativeTokenSlotAuctionManagerCaller: NativeTokenSlotAuctionManagerCaller{contract: contract}, NativeTokenSlotAuctionManagerTransactor: NativeTokenSlotAuctionManagerTransactor{contract: contract}, NativeTokenSlotAuctionManagerFilterer: NativeTokenSlotAuctionManagerFilterer{contract: contract}}, nil
}

// NativeTokenSlotAuctionManager is an auto generated Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManager struct {
	NativeTokenSlotAuctionManagerCaller     // Read-only binding to the contract
	NativeTokenSlotAuctionManagerTransactor // Write-only binding to the contract
	NativeTokenSlotAuctionManagerFilterer   // Log filterer for contract events
}

// NativeTokenSlotAuctionManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NativeTokenSlotAuctionManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NativeTokenSlotAuctionManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type NativeTokenSlotAuctionManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NativeTokenSlotAuctionManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type NativeTokenSlotAuctionManagerSession struct {
	Contract     *NativeTokenSlotAuctionManager // Generic contract binding to set the session for
	CallOpts     bind.CallOpts                  // Call options to use throughout this session
	TransactOpts bind.TransactOpts              // Transaction auth options to use throughout this session
}

// NativeTokenSlotAuctionManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type NativeTokenSlotAuctionManagerCallerSession struct {
	Contract *NativeTokenSlotAuctionManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                        // Call options to use throughout this session
}

// NativeTokenSlotAuctionManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type NativeTokenSlotAuctionManagerTransactorSession struct {
	Contract     *NativeTokenSlotAuctionManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                        // Transaction auth options to use throughout this session
}

// NativeTokenSlotAuctionManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManagerRaw struct {
	Contract *NativeTokenSlotAuctionManager // Generic contract binding to access the raw methods on
}

// NativeTokenSlotAuctionManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManagerCallerRaw struct {
	Contract *NativeTokenSlotAuctionManagerCaller // Generic read-only contract binding to access the raw methods on
}

// NativeTokenSlotAuctionManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManagerTransactorRaw struct {
	Contract *NativeTokenSlotAuctionManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewNativeTokenSlotAuctionManager creates a new instance of NativeTokenSlotAuctionManager, bound to a specific deployed contract.
func NewNativeTokenSlotAuctionManager(address common.Address, backend bind.ContractBackend) (*NativeTokenSlotAuctionManager, error) {
	contract, err := bindNativeTokenSlotAuctionManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManager{NativeTokenSlotAuctionManagerCaller: NativeTokenSlotAuctionManagerCaller{contract: contract}, NativeTokenSlotAuctionManagerTransactor: NativeTokenSlotAuctionManagerTransactor{contract: contract}, NativeTokenSlotAuctionManagerFilterer: NativeTokenSlotAuctionManagerFilterer{contract: contract}}, nil
}

// NewNativeTokenSlotAuctionManagerCaller creates a new read-only instance of NativeTokenSlotAuctionManager, bound to a specific deployed contract.
func NewNativeTokenSlotAuctionManagerCaller(address common.Address, caller bind.ContractCaller) (*NativeTokenSlotAuctionManagerCaller, error) {
	contract, err := bindNativeTokenSlotAuctionManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerCaller{contract: contract}, nil
}

// NewNativeTokenSlotAuctionManagerTransactor creates a new write-only instance of NativeTokenSlotAuctionManager, bound to a specific deployed contract.
func NewNativeTokenSlotAuctionManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*NativeTokenSlotAuctionManagerTransactor, error) {
	contract, err := bindNativeTokenSlotAuctionManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerTransactor{contract: contract}, nil
}

// NewNativeTokenSlotAuctionManagerFilterer creates a new log filterer instance of NativeTokenSlotAuctionManager, bound to a specific deployed contract.
func NewNativeTokenSlotAuctionManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*NativeTokenSlotAuctionManagerFilterer, error) {
	contract, err := bindNativeTokenSlotAuctionManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerFilterer{contract: contract}, nil
}

// bindNativeTokenSlotAuctionManager binds a generic wrapper to an already deployed contract.
func bindNativeTokenSlotAuctionManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := NativeTokenSlotAuctionManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _NativeTokenSlotAuctionManager.Contract.NativeTokenSlotAuctionManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.NativeTokenSlotAuctionManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.NativeTokenSlotAuctionManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _NativeTokenSlotAuctionManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.contract.Transact(opts, method, params...)
}

// MinBidRequired is a free data retrieval call binding the contract method 0x913ed0b1.
//
// Solidity: function MinBidRequired() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) MinBidRequired(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "MinBidRequired")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MinBidRequired is a free data retrieval call binding the contract method 0x913ed0b1.
//
// Solidity: function MinBidRequired() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) MinBidRequired() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinBidRequired(&_NativeTokenSlotAuctionManager.CallOpts)
}

// MinBidRequired is a free data retrieval call binding the contract method 0x913ed0b1.
//
// Solidity: function MinBidRequired() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) MinBidRequired() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinBidRequired(&_NativeTokenSlotAuctionManager.CallOpts)
}

// SLOTAUCTIONMANAGERSTORAGELOCATION is a free data retrieval call binding the contract method 0xaaab8516.
//
// Solidity: function SLOT_AUCTION_MANAGER_STORAGE_LOCATION() view returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) SLOTAUCTIONMANAGERSTORAGELOCATION(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "SLOT_AUCTION_MANAGER_STORAGE_LOCATION")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// SLOTAUCTIONMANAGERSTORAGELOCATION is a free data retrieval call binding the contract method 0xaaab8516.
//
// Solidity: function SLOT_AUCTION_MANAGER_STORAGE_LOCATION() view returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) SLOTAUCTIONMANAGERSTORAGELOCATION() ([32]byte, error) {
	return _NativeTokenSlotAuctionManager.Contract.SLOTAUCTIONMANAGERSTORAGELOCATION(&_NativeTokenSlotAuctionManager.CallOpts)
}

// SLOTAUCTIONMANAGERSTORAGELOCATION is a free data retrieval call binding the contract method 0xaaab8516.
//
// Solidity: function SLOT_AUCTION_MANAGER_STORAGE_LOCATION() view returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) SLOTAUCTIONMANAGERSTORAGELOCATION() ([32]byte, error) {
	return _NativeTokenSlotAuctionManager.Contract.SLOTAUCTIONMANAGERSTORAGELOCATION(&_NativeTokenSlotAuctionManager.CallOpts)
}

// GetMinAuctionDuration is a free data retrieval call binding the contract method 0x9940d4c6.
//
// Solidity: function getMinAuctionDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) GetMinAuctionDuration(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "getMinAuctionDuration")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetMinAuctionDuration is a free data retrieval call binding the contract method 0x9940d4c6.
//
// Solidity: function getMinAuctionDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) GetMinAuctionDuration() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.GetMinAuctionDuration(&_NativeTokenSlotAuctionManager.CallOpts)
}

// GetMinAuctionDuration is a free data retrieval call binding the contract method 0x9940d4c6.
//
// Solidity: function getMinAuctionDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) GetMinAuctionDuration() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.GetMinAuctionDuration(&_NativeTokenSlotAuctionManager.CallOpts)
}

// GetMinValidatorDuration is a free data retrieval call binding the contract method 0x01f6cec8.
//
// Solidity: function getMinValidatorDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) GetMinValidatorDuration(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "getMinValidatorDuration")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetMinValidatorDuration is a free data retrieval call binding the contract method 0x01f6cec8.
//
// Solidity: function getMinValidatorDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) GetMinValidatorDuration() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.GetMinValidatorDuration(&_NativeTokenSlotAuctionManager.CallOpts)
}

// GetMinValidatorDuration is a free data retrieval call binding the contract method 0x01f6cec8.
//
// Solidity: function getMinValidatorDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) GetMinValidatorDuration() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.GetMinValidatorDuration(&_NativeTokenSlotAuctionManager.CallOpts)
}

// GetMinimumBid is a free data retrieval call binding the contract method 0xc5b63600.
//
// Solidity: function getMinimumBid() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) GetMinimumBid(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "getMinimumBid")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetMinimumBid is a free data retrieval call binding the contract method 0xc5b63600.
//
// Solidity: function getMinimumBid() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) GetMinimumBid() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.GetMinimumBid(&_NativeTokenSlotAuctionManager.CallOpts)
}

// GetMinimumBid is a free data retrieval call binding the contract method 0xc5b63600.
//
// Solidity: function getMinimumBid() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) GetMinimumBid() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.GetMinimumBid(&_NativeTokenSlotAuctionManager.CallOpts)
}

// GetOpenValidatorSlots is a free data retrieval call binding the contract method 0x78eb9c10.
//
// Solidity: function getOpenValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) GetOpenValidatorSlots(opts *bind.CallOpts) (uint16, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "getOpenValidatorSlots")

	if err != nil {
		return *new(uint16), err
	}

	out0 := *abi.ConvertType(out[0], new(uint16)).(*uint16)

	return out0, err

}

// GetOpenValidatorSlots is a free data retrieval call binding the contract method 0x78eb9c10.
//
// Solidity: function getOpenValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) GetOpenValidatorSlots() (uint16, error) {
	return _NativeTokenSlotAuctionManager.Contract.GetOpenValidatorSlots(&_NativeTokenSlotAuctionManager.CallOpts)
}

// GetOpenValidatorSlots is a free data retrieval call binding the contract method 0x78eb9c10.
//
// Solidity: function getOpenValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) GetOpenValidatorSlots() (uint16, error) {
	return _NativeTokenSlotAuctionManager.Contract.GetOpenValidatorSlots(&_NativeTokenSlotAuctionManager.CallOpts)
}

// GetTotalValidatorSlots is a free data retrieval call binding the contract method 0x31b6822e.
//
// Solidity: function getTotalValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) GetTotalValidatorSlots(opts *bind.CallOpts) (uint16, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "getTotalValidatorSlots")

	if err != nil {
		return *new(uint16), err
	}

	out0 := *abi.ConvertType(out[0], new(uint16)).(*uint16)

	return out0, err

}

// GetTotalValidatorSlots is a free data retrieval call binding the contract method 0x31b6822e.
//
// Solidity: function getTotalValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) GetTotalValidatorSlots() (uint16, error) {
	return _NativeTokenSlotAuctionManager.Contract.GetTotalValidatorSlots(&_NativeTokenSlotAuctionManager.CallOpts)
}

// GetTotalValidatorSlots is a free data retrieval call binding the contract method 0x31b6822e.
//
// Solidity: function getTotalValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) GetTotalValidatorSlots() (uint16, error) {
	return _NativeTokenSlotAuctionManager.Contract.GetTotalValidatorSlots(&_NativeTokenSlotAuctionManager.CallOpts)
}

// GetValidatorWeight is a free data retrieval call binding the contract method 0x72684dd3.
//
// Solidity: function getValidatorWeight() view returns(uint64)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) GetValidatorWeight(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "getValidatorWeight")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetValidatorWeight is a free data retrieval call binding the contract method 0x72684dd3.
//
// Solidity: function getValidatorWeight() view returns(uint64)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) GetValidatorWeight() (uint64, error) {
	return _NativeTokenSlotAuctionManager.Contract.GetValidatorWeight(&_NativeTokenSlotAuctionManager.CallOpts)
}

// GetValidatorWeight is a free data retrieval call binding the contract method 0x72684dd3.
//
// Solidity: function getValidatorWeight() view returns(uint64)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) GetValidatorWeight() (uint64, error) {
	return _NativeTokenSlotAuctionManager.Contract.GetValidatorWeight(&_NativeTokenSlotAuctionManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) Owner() (common.Address, error) {
	return _NativeTokenSlotAuctionManager.Contract.Owner(&_NativeTokenSlotAuctionManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) Owner() (common.Address, error) {
	return _NativeTokenSlotAuctionManager.Contract.Owner(&_NativeTokenSlotAuctionManager.CallOpts)
}

// CompleteRemoveInitialValidator is a paid mutator transaction binding the contract method 0x05af8256.
//
// Solidity: function completeRemoveInitialValidator(uint32 messageIndex) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) CompleteRemoveInitialValidator(opts *bind.TransactOpts, messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "completeRemoveInitialValidator", messageIndex)
}

// CompleteRemoveInitialValidator is a paid mutator transaction binding the contract method 0x05af8256.
//
// Solidity: function completeRemoveInitialValidator(uint32 messageIndex) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) CompleteRemoveInitialValidator(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteRemoveInitialValidator(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// CompleteRemoveInitialValidator is a paid mutator transaction binding the contract method 0x05af8256.
//
// Solidity: function completeRemoveInitialValidator(uint32 messageIndex) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) CompleteRemoveInitialValidator(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteRemoveInitialValidator(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// CompleteValidatorRegistration is a paid mutator transaction binding the contract method 0xa3a65e48.
//
// Solidity: function completeValidatorRegistration(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) CompleteValidatorRegistration(opts *bind.TransactOpts, messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "completeValidatorRegistration", messageIndex)
}

// CompleteValidatorRegistration is a paid mutator transaction binding the contract method 0xa3a65e48.
//
// Solidity: function completeValidatorRegistration(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) CompleteValidatorRegistration(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteValidatorRegistration(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// CompleteValidatorRegistration is a paid mutator transaction binding the contract method 0xa3a65e48.
//
// Solidity: function completeValidatorRegistration(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) CompleteValidatorRegistration(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteValidatorRegistration(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// CompleteValidatorRemoval is a paid mutator transaction binding the contract method 0x9681d940.
//
// Solidity: function completeValidatorRemoval(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) CompleteValidatorRemoval(opts *bind.TransactOpts, messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "completeValidatorRemoval", messageIndex)
}

// CompleteValidatorRemoval is a paid mutator transaction binding the contract method 0x9681d940.
//
// Solidity: function completeValidatorRemoval(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) CompleteValidatorRemoval(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteValidatorRemoval(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// CompleteValidatorRemoval is a paid mutator transaction binding the contract method 0x9681d940.
//
// Solidity: function completeValidatorRemoval(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) CompleteValidatorRemoval(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteValidatorRemoval(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// EndAuction is a paid mutator transaction binding the contract method 0xfe67a54b.
//
// Solidity: function endAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) EndAuction(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "endAuction")
}

// EndAuction is a paid mutator transaction binding the contract method 0xfe67a54b.
//
// Solidity: function endAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) EndAuction() (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.EndAuction(&_NativeTokenSlotAuctionManager.TransactOpts)
}

// EndAuction is a paid mutator transaction binding the contract method 0xfe67a54b.
//
// Solidity: function endAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) EndAuction() (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.EndAuction(&_NativeTokenSlotAuctionManager.TransactOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x1867b9da.
//
// Solidity: function initialize((address,address,(uint16,uint64,uint256,uint256,uint256)) settings) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) Initialize(opts *bind.TransactOpts, settings SlotAuctionManagerSettings) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "initialize", settings)
}

// Initialize is a paid mutator transaction binding the contract method 0x1867b9da.
//
// Solidity: function initialize((address,address,(uint16,uint64,uint256,uint256,uint256)) settings) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) Initialize(settings SlotAuctionManagerSettings) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.Initialize(&_NativeTokenSlotAuctionManager.TransactOpts, settings)
}

// Initialize is a paid mutator transaction binding the contract method 0x1867b9da.
//
// Solidity: function initialize((address,address,(uint16,uint64,uint256,uint256,uint256)) settings) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) Initialize(settings SlotAuctionManagerSettings) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.Initialize(&_NativeTokenSlotAuctionManager.TransactOpts, settings)
}

// InitiateAuction is a paid mutator transaction binding the contract method 0x5561f9df.
//
// Solidity: function initiateAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) InitiateAuction(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "initiateAuction")
}

// InitiateAuction is a paid mutator transaction binding the contract method 0x5561f9df.
//
// Solidity: function initiateAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) InitiateAuction() (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateAuction(&_NativeTokenSlotAuctionManager.TransactOpts)
}

// InitiateAuction is a paid mutator transaction binding the contract method 0x5561f9df.
//
// Solidity: function initiateAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) InitiateAuction() (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateAuction(&_NativeTokenSlotAuctionManager.TransactOpts)
}

// InitiateRemoveInitialValidator is a paid mutator transaction binding the contract method 0xa476f675.
//
// Solidity: function initiateRemoveInitialValidator(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) InitiateRemoveInitialValidator(opts *bind.TransactOpts, validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "initiateRemoveInitialValidator", validationID)
}

// InitiateRemoveInitialValidator is a paid mutator transaction binding the contract method 0xa476f675.
//
// Solidity: function initiateRemoveInitialValidator(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) InitiateRemoveInitialValidator(validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateRemoveInitialValidator(&_NativeTokenSlotAuctionManager.TransactOpts, validationID)
}

// InitiateRemoveInitialValidator is a paid mutator transaction binding the contract method 0xa476f675.
//
// Solidity: function initiateRemoveInitialValidator(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) InitiateRemoveInitialValidator(validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateRemoveInitialValidator(&_NativeTokenSlotAuctionManager.TransactOpts, validationID)
}

// InitiateValidatorRemoval is a paid mutator transaction binding the contract method 0xb6e6a2ca.
//
// Solidity: function initiateValidatorRemoval(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) InitiateValidatorRemoval(opts *bind.TransactOpts, validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "initiateValidatorRemoval", validationID)
}

// InitiateValidatorRemoval is a paid mutator transaction binding the contract method 0xb6e6a2ca.
//
// Solidity: function initiateValidatorRemoval(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) InitiateValidatorRemoval(validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateValidatorRemoval(&_NativeTokenSlotAuctionManager.TransactOpts, validationID)
}

// InitiateValidatorRemoval is a paid mutator transaction binding the contract method 0xb6e6a2ca.
//
// Solidity: function initiateValidatorRemoval(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) InitiateValidatorRemoval(validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateValidatorRemoval(&_NativeTokenSlotAuctionManager.TransactOpts, validationID)
}

// PlaceBid is a paid mutator transaction binding the contract method 0xc7d546f2.
//
// Solidity: function placeBid(bytes nodeID, bytes blsPublicKey, (uint32,address[]) remainingBalanceOwner, (uint32,address[]) disableOwner) payable returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) PlaceBid(opts *bind.TransactOpts, nodeID []byte, blsPublicKey []byte, remainingBalanceOwner PChainOwner, disableOwner PChainOwner) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "placeBid", nodeID, blsPublicKey, remainingBalanceOwner, disableOwner)
}

// PlaceBid is a paid mutator transaction binding the contract method 0xc7d546f2.
//
// Solidity: function placeBid(bytes nodeID, bytes blsPublicKey, (uint32,address[]) remainingBalanceOwner, (uint32,address[]) disableOwner) payable returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) PlaceBid(nodeID []byte, blsPublicKey []byte, remainingBalanceOwner PChainOwner, disableOwner PChainOwner) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.PlaceBid(&_NativeTokenSlotAuctionManager.TransactOpts, nodeID, blsPublicKey, remainingBalanceOwner, disableOwner)
}

// PlaceBid is a paid mutator transaction binding the contract method 0xc7d546f2.
//
// Solidity: function placeBid(bytes nodeID, bytes blsPublicKey, (uint32,address[]) remainingBalanceOwner, (uint32,address[]) disableOwner) payable returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) PlaceBid(nodeID []byte, blsPublicKey []byte, remainingBalanceOwner PChainOwner, disableOwner PChainOwner) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.PlaceBid(&_NativeTokenSlotAuctionManager.TransactOpts, nodeID, blsPublicKey, remainingBalanceOwner, disableOwner)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) RenounceOwnership() (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.RenounceOwnership(&_NativeTokenSlotAuctionManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.RenounceOwnership(&_NativeTokenSlotAuctionManager.TransactOpts)
}

// SetSlotAuctionSettings is a paid mutator transaction binding the contract method 0xe4c822ca.
//
// Solidity: function setSlotAuctionSettings((uint16,uint64,uint256,uint256,uint256) auctionSettings) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) SetSlotAuctionSettings(opts *bind.TransactOpts, auctionSettings AuctionSettings) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "setSlotAuctionSettings", auctionSettings)
}

// SetSlotAuctionSettings is a paid mutator transaction binding the contract method 0xe4c822ca.
//
// Solidity: function setSlotAuctionSettings((uint16,uint64,uint256,uint256,uint256) auctionSettings) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) SetSlotAuctionSettings(auctionSettings AuctionSettings) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.SetSlotAuctionSettings(&_NativeTokenSlotAuctionManager.TransactOpts, auctionSettings)
}

// SetSlotAuctionSettings is a paid mutator transaction binding the contract method 0xe4c822ca.
//
// Solidity: function setSlotAuctionSettings((uint16,uint64,uint256,uint256,uint256) auctionSettings) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) SetSlotAuctionSettings(auctionSettings AuctionSettings) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.SetSlotAuctionSettings(&_NativeTokenSlotAuctionManager.TransactOpts, auctionSettings)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.TransferOwnership(&_NativeTokenSlotAuctionManager.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.TransferOwnership(&_NativeTokenSlotAuctionManager.TransactOpts, newOwner)
}

// NativeTokenSlotAuctionManagerBidEvictedIterator is returned from FilterBidEvicted and is used to iterate over the raw logs and unpacked data for BidEvicted events raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerBidEvictedIterator struct {
	Event *NativeTokenSlotAuctionManagerBidEvicted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NativeTokenSlotAuctionManagerBidEvictedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NativeTokenSlotAuctionManagerBidEvicted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NativeTokenSlotAuctionManagerBidEvicted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NativeTokenSlotAuctionManagerBidEvictedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NativeTokenSlotAuctionManagerBidEvictedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NativeTokenSlotAuctionManagerBidEvicted represents a BidEvicted event raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerBidEvicted struct {
	Bid    *big.Int
	NodeID common.Hash
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterBidEvicted is a free log retrieval operation binding the contract event 0xdbb7ff16cd6e3cc5c7aca1a615bf0d56f746d9f5708e12d52ebe243518b536cc.
//
// Solidity: event BidEvicted(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) FilterBidEvicted(opts *bind.FilterOpts, bid []*big.Int, nodeID [][]byte) (*NativeTokenSlotAuctionManagerBidEvictedIterator, error) {

	var bidRule []interface{}
	for _, bidItem := range bid {
		bidRule = append(bidRule, bidItem)
	}
	var nodeIDRule []interface{}
	for _, nodeIDItem := range nodeID {
		nodeIDRule = append(nodeIDRule, nodeIDItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.FilterLogs(opts, "BidEvicted", bidRule, nodeIDRule)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerBidEvictedIterator{contract: _NativeTokenSlotAuctionManager.contract, event: "BidEvicted", logs: logs, sub: sub}, nil
}

// WatchBidEvicted is a free log subscription operation binding the contract event 0xdbb7ff16cd6e3cc5c7aca1a615bf0d56f746d9f5708e12d52ebe243518b536cc.
//
// Solidity: event BidEvicted(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) WatchBidEvicted(opts *bind.WatchOpts, sink chan<- *NativeTokenSlotAuctionManagerBidEvicted, bid []*big.Int, nodeID [][]byte) (event.Subscription, error) {

	var bidRule []interface{}
	for _, bidItem := range bid {
		bidRule = append(bidRule, bidItem)
	}
	var nodeIDRule []interface{}
	for _, nodeIDItem := range nodeID {
		nodeIDRule = append(nodeIDRule, nodeIDItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.WatchLogs(opts, "BidEvicted", bidRule, nodeIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NativeTokenSlotAuctionManagerBidEvicted)
				if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "BidEvicted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBidEvicted is a log parse operation binding the contract event 0xdbb7ff16cd6e3cc5c7aca1a615bf0d56f746d9f5708e12d52ebe243518b536cc.
//
// Solidity: event BidEvicted(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) ParseBidEvicted(log types.Log) (*NativeTokenSlotAuctionManagerBidEvicted, error) {
	event := new(NativeTokenSlotAuctionManagerBidEvicted)
	if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "BidEvicted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// NativeTokenSlotAuctionManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerInitializedIterator struct {
	Event *NativeTokenSlotAuctionManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NativeTokenSlotAuctionManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NativeTokenSlotAuctionManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NativeTokenSlotAuctionManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NativeTokenSlotAuctionManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NativeTokenSlotAuctionManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NativeTokenSlotAuctionManagerInitialized represents a Initialized event raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerInitialized struct {
	Version uint64
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*NativeTokenSlotAuctionManagerInitializedIterator, error) {

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerInitializedIterator{contract: _NativeTokenSlotAuctionManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *NativeTokenSlotAuctionManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NativeTokenSlotAuctionManagerInitialized)
				if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) ParseInitialized(log types.Log) (*NativeTokenSlotAuctionManagerInitialized, error) {
	event := new(NativeTokenSlotAuctionManagerInitialized)
	if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator is returned from FilterInitiatedAuctionValidatorRegistration and is used to iterate over the raw logs and unpacked data for InitiatedAuctionValidatorRegistration events raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator struct {
	Event *NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration represents a InitiatedAuctionValidatorRegistration event raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration struct {
	ValidationID     [32]byte
	OwnerAddress     common.Address
	ValidatorEndTime *big.Int
	Weight           uint64
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterInitiatedAuctionValidatorRegistration is a free log retrieval operation binding the contract event 0x032100a60b84cf31291641706872970585d53fa5be412562041fbf66a99ce285.
//
// Solidity: event InitiatedAuctionValidatorRegistration(bytes32 indexed validationID, address indexed ownerAddress, uint256 validatorEndTime, uint64 weight)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) FilterInitiatedAuctionValidatorRegistration(opts *bind.FilterOpts, validationID [][32]byte, ownerAddress []common.Address) (*NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}
	var ownerAddressRule []interface{}
	for _, ownerAddressItem := range ownerAddress {
		ownerAddressRule = append(ownerAddressRule, ownerAddressItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.FilterLogs(opts, "InitiatedAuctionValidatorRegistration", validationIDRule, ownerAddressRule)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator{contract: _NativeTokenSlotAuctionManager.contract, event: "InitiatedAuctionValidatorRegistration", logs: logs, sub: sub}, nil
}

// WatchInitiatedAuctionValidatorRegistration is a free log subscription operation binding the contract event 0x032100a60b84cf31291641706872970585d53fa5be412562041fbf66a99ce285.
//
// Solidity: event InitiatedAuctionValidatorRegistration(bytes32 indexed validationID, address indexed ownerAddress, uint256 validatorEndTime, uint64 weight)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) WatchInitiatedAuctionValidatorRegistration(opts *bind.WatchOpts, sink chan<- *NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration, validationID [][32]byte, ownerAddress []common.Address) (event.Subscription, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}
	var ownerAddressRule []interface{}
	for _, ownerAddressItem := range ownerAddress {
		ownerAddressRule = append(ownerAddressRule, ownerAddressItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.WatchLogs(opts, "InitiatedAuctionValidatorRegistration", validationIDRule, ownerAddressRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration)
				if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "InitiatedAuctionValidatorRegistration", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitiatedAuctionValidatorRegistration is a log parse operation binding the contract event 0x032100a60b84cf31291641706872970585d53fa5be412562041fbf66a99ce285.
//
// Solidity: event InitiatedAuctionValidatorRegistration(bytes32 indexed validationID, address indexed ownerAddress, uint256 validatorEndTime, uint64 weight)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) ParseInitiatedAuctionValidatorRegistration(log types.Log) (*NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration, error) {
	event := new(NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration)
	if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "InitiatedAuctionValidatorRegistration", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// NativeTokenSlotAuctionManagerNewValidatorAuctionIterator is returned from FilterNewValidatorAuction and is used to iterate over the raw logs and unpacked data for NewValidatorAuction events raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerNewValidatorAuctionIterator struct {
	Event *NativeTokenSlotAuctionManagerNewValidatorAuction // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NativeTokenSlotAuctionManagerNewValidatorAuctionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NativeTokenSlotAuctionManagerNewValidatorAuction)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NativeTokenSlotAuctionManagerNewValidatorAuction)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NativeTokenSlotAuctionManagerNewValidatorAuctionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NativeTokenSlotAuctionManagerNewValidatorAuctionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NativeTokenSlotAuctionManagerNewValidatorAuction represents a NewValidatorAuction event raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerNewValidatorAuction struct {
	ValidatorSlots       uint16
	ValidatorWeight      uint64
	MinValidatorDuration *big.Int
	AuctionEndTime       *big.Int
	MinimumBid           *big.Int
	Raw                  types.Log // Blockchain specific contextual infos
}

// FilterNewValidatorAuction is a free log retrieval operation binding the contract event 0x50e40b07b3cd91a269f83830c35b4c090f74ebd0cc06dce4db251ccc23627b54.
//
// Solidity: event NewValidatorAuction(uint16 validatorSlots, uint64 validatorWeight, uint256 minValidatorDuration, uint256 auctionEndTime, uint256 minimumBid)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) FilterNewValidatorAuction(opts *bind.FilterOpts) (*NativeTokenSlotAuctionManagerNewValidatorAuctionIterator, error) {

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.FilterLogs(opts, "NewValidatorAuction")
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerNewValidatorAuctionIterator{contract: _NativeTokenSlotAuctionManager.contract, event: "NewValidatorAuction", logs: logs, sub: sub}, nil
}

// WatchNewValidatorAuction is a free log subscription operation binding the contract event 0x50e40b07b3cd91a269f83830c35b4c090f74ebd0cc06dce4db251ccc23627b54.
//
// Solidity: event NewValidatorAuction(uint16 validatorSlots, uint64 validatorWeight, uint256 minValidatorDuration, uint256 auctionEndTime, uint256 minimumBid)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) WatchNewValidatorAuction(opts *bind.WatchOpts, sink chan<- *NativeTokenSlotAuctionManagerNewValidatorAuction) (event.Subscription, error) {

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.WatchLogs(opts, "NewValidatorAuction")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NativeTokenSlotAuctionManagerNewValidatorAuction)
				if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "NewValidatorAuction", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseNewValidatorAuction is a log parse operation binding the contract event 0x50e40b07b3cd91a269f83830c35b4c090f74ebd0cc06dce4db251ccc23627b54.
//
// Solidity: event NewValidatorAuction(uint16 validatorSlots, uint64 validatorWeight, uint256 minValidatorDuration, uint256 auctionEndTime, uint256 minimumBid)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) ParseNewValidatorAuction(log types.Log) (*NativeTokenSlotAuctionManagerNewValidatorAuction, error) {
	event := new(NativeTokenSlotAuctionManagerNewValidatorAuction)
	if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "NewValidatorAuction", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// NativeTokenSlotAuctionManagerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerOwnershipTransferredIterator struct {
	Event *NativeTokenSlotAuctionManagerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NativeTokenSlotAuctionManagerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NativeTokenSlotAuctionManagerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NativeTokenSlotAuctionManagerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NativeTokenSlotAuctionManagerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NativeTokenSlotAuctionManagerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NativeTokenSlotAuctionManagerOwnershipTransferred represents a OwnershipTransferred event raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*NativeTokenSlotAuctionManagerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerOwnershipTransferredIterator{contract: _NativeTokenSlotAuctionManager.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *NativeTokenSlotAuctionManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NativeTokenSlotAuctionManagerOwnershipTransferred)
				if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) ParseOwnershipTransferred(log types.Log) (*NativeTokenSlotAuctionManagerOwnershipTransferred, error) {
	event := new(NativeTokenSlotAuctionManagerOwnershipTransferred)
	if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator is returned from FilterSuccessfulBidPlaced and is used to iterate over the raw logs and unpacked data for SuccessfulBidPlaced events raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator struct {
	Event *NativeTokenSlotAuctionManagerSuccessfulBidPlaced // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NativeTokenSlotAuctionManagerSuccessfulBidPlaced)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NativeTokenSlotAuctionManagerSuccessfulBidPlaced)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NativeTokenSlotAuctionManagerSuccessfulBidPlaced represents a SuccessfulBidPlaced event raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerSuccessfulBidPlaced struct {
	Bid    *big.Int
	NodeID common.Hash
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterSuccessfulBidPlaced is a free log retrieval operation binding the contract event 0x864a2110bb41c315e04bd6122b668384bca4b0d8509e55850db8347e86a95029.
//
// Solidity: event SuccessfulBidPlaced(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) FilterSuccessfulBidPlaced(opts *bind.FilterOpts, bid []*big.Int, nodeID [][]byte) (*NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator, error) {

	var bidRule []interface{}
	for _, bidItem := range bid {
		bidRule = append(bidRule, bidItem)
	}
	var nodeIDRule []interface{}
	for _, nodeIDItem := range nodeID {
		nodeIDRule = append(nodeIDRule, nodeIDItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.FilterLogs(opts, "SuccessfulBidPlaced", bidRule, nodeIDRule)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator{contract: _NativeTokenSlotAuctionManager.contract, event: "SuccessfulBidPlaced", logs: logs, sub: sub}, nil
}

// WatchSuccessfulBidPlaced is a free log subscription operation binding the contract event 0x864a2110bb41c315e04bd6122b668384bca4b0d8509e55850db8347e86a95029.
//
// Solidity: event SuccessfulBidPlaced(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) WatchSuccessfulBidPlaced(opts *bind.WatchOpts, sink chan<- *NativeTokenSlotAuctionManagerSuccessfulBidPlaced, bid []*big.Int, nodeID [][]byte) (event.Subscription, error) {

	var bidRule []interface{}
	for _, bidItem := range bid {
		bidRule = append(bidRule, bidItem)
	}
	var nodeIDRule []interface{}
	for _, nodeIDItem := range nodeID {
		nodeIDRule = append(nodeIDRule, nodeIDItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.WatchLogs(opts, "SuccessfulBidPlaced", bidRule, nodeIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NativeTokenSlotAuctionManagerSuccessfulBidPlaced)
				if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "SuccessfulBidPlaced", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSuccessfulBidPlaced is a log parse operation binding the contract event 0x864a2110bb41c315e04bd6122b668384bca4b0d8509e55850db8347e86a95029.
//
// Solidity: event SuccessfulBidPlaced(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) ParseSuccessfulBidPlaced(log types.Log) (*NativeTokenSlotAuctionManagerSuccessfulBidPlaced, error) {
	event := new(NativeTokenSlotAuctionManagerSuccessfulBidPlaced)
	if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "SuccessfulBidPlaced", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
