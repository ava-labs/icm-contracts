// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package nativetokenslotauctionmanager

import (
	"errors"
	"math/big"
	"strings"

	"github.com/ava-labs/subnet-evm/accounts/abi"
	"github.com/ava-labs/subnet-evm/accounts/abi/bind"
	"github.com/ava-labs/subnet-evm/core/types"
	"github.com/ava-labs/subnet-evm/interfaces"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = interfaces.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// PChainOwner is an auto generated low-level Go binding around an user-defined struct.
type PChainOwner struct {
	Threshold uint32
	Addresses []common.Address
}

// NativeTokenSlotAuctionManagerMetaData contains all meta data concerning the NativeTokenSlotAuctionManager contract.
var NativeTokenSlotAuctionManagerMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vmAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"validatorslots\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"minAuctionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minValidatorDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumBid\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionEndTime\",\"type\":\"uint256\"}],\"name\":\"AuctionEndTimeNotReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AuctionFinalizing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionCooldownEndtime\",\"type\":\"uint256\"}],\"name\":\"AuctionInCooldown\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AuctionInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AuctionNotInProgress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minumumBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBid\",\"type\":\"uint256\"}],\"name\":\"BidSmallerThanMinimum\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"}],\"name\":\"DuplicateBidInContention\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"}],\"name\":\"DuplicateNodeIDInContention\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"smallestAcceptableBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBid\",\"type\":\"uint256\"}],\"name\":\"InsufficientBidToWinAuction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"totalValidatorSlots\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"activeValidators\",\"type\":\"uint16\"}],\"name\":\"MoreActiveValidatorsThanTotalSlots\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"validatorSlots\",\"type\":\"uint16\"}],\"name\":\"NoOpenValidatorSlots\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"}],\"name\":\"NodeIsValidator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validationTimeLimit\",\"type\":\"uint256\"}],\"name\":\"ValidatorTimeLimitNotPassed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"validatorWeight\",\"type\":\"uint64\"}],\"name\":\"ValidatorWeightTooHigh\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"}],\"name\":\"BidEvicted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validatorEndTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"name\":\"InitiatedAuctionValidatorRegistration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"validatorSlots\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"validatorWeight\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minValidatorDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionEndTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumBid\",\"type\":\"uint256\"}],\"name\":\"NewValidatorAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"}],\"name\":\"SuccessfulBidPlaced\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MinAuctionDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MinBidRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MinValidatorDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MinimumBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_MANAGER\",\"outputs\":[{\"internalType\":\"contractIValidatorManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionCooldownEndtime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionState\",\"outputs\":[{\"internalType\":\"enumAuctionState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctioningValidatorSlots\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"}],\"name\":\"bidderInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPublicKey\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"structPChainOwner\",\"name\":\"remainingBalanceOwner\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"structPChainOwner\",\"name\":\"disableOwner\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"messageIndex\",\"type\":\"uint32\"}],\"name\":\"completeRemoveInitialValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"messageIndex\",\"type\":\"uint32\"}],\"name\":\"completeValidatorRegistration\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"messageIndex\",\"type\":\"uint32\"}],\"name\":\"completeValidatorRemoval\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"}],\"name\":\"initiateRemoveInitialValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"}],\"name\":\"initiateValidatorRemoval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openValidatorSlots\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPublicKey\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"structPChainOwner\",\"name\":\"remainingBalanceOwner\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"structPChainOwner\",\"name\":\"disableOwner\",\"type\":\"tuple\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newValidatorSlots\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"newWeight\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"newMinAuctionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMinValidatorDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMinimumBid\",\"type\":\"uint256\"}],\"name\":\"setSlotAuctionSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValidatorSlots\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatorWeight\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561000f575f80fd5b5060405161290e38038061290e83398101604081905261002e916100a5565b5f80546001600160a81b0319166001600160a01b0388161790556002805465ffff0000ffff191661ffff87169081176401000000009190910217600160301b600160701b03191666010000000000006001600160401b03871602179055600483905560038290556005819055505050505050610126565b5f805f805f8060c087890312156100ba575f80fd5b86516001600160a01b03811681146100d0575f80fd5b602088015190965061ffff811681146100e7575f80fd5b60408801519095506001600160401b0381168114610103575f80fd5b80945050606087015192506080870151915060a087015190509295509295509295565b6127db806101335f395ff3fe608060405260043610610130575f3560e01c80639d507e77116100a8578063bbfd4a9b1161006d578063bbfd4a9b1461036a578063c7d546f21461037f578063ef72fb8814610392578063f556f60a146103b2578063fb1c905d146103c7578063fe67a54b146103e6575f80fd5b80639d507e77146102c2578063a3a65e48146102d7578063a476f675146102f6578063ae9483e014610315578063b6e6a2ca1461034b575f80fd5b80634b449cba116100f95780634b449cba146102175780635561f9df1461023a5780636fe4d1e11461024e5780637fb4509914610263578063913ed0b11461028f5780639681d940146102a3575f80fd5b8062d841f81461013457806305af825614610177578063090d7db6146101985780630d5daf3b146101cc578063182dd381146101fd575b5f80fd5b34801561013f575f80fd5b5060025461015a90600160301b90046001600160401b031681565b6040516001600160401b0390911681526020015b60405180910390f35b348015610182575f80fd5b50610196610191366004611f99565b6103fa565b005b3480156101a3575f80fd5b506002546101b990600160201b900461ffff1681565b60405161ffff909116815260200161016e565b3480156101d7575f80fd5b506101eb6101e6366004611fb2565b61046e565b60405161016e9695949392919061207c565b348015610208575f80fd5b506002546101b99061ffff1681565b348015610222575f80fd5b5061022c60015481565b60405190815260200161016e565b348015610245575f80fd5b506101966106a3565b348015610259575f80fd5b5061022c60035481565b34801561026e575f80fd5b505f5461028290600160a01b900460ff1681565b60405161016e91906120fd565b34801561029a575f80fd5b5061022c6109ea565b3480156102ae575f80fd5b5061022c6102bd366004611f99565b610a5e565b3480156102cd575f80fd5b5061022c60045481565b3480156102e2575f80fd5b5061022c6102f1366004611f99565b610ad6565b348015610301575f80fd5b50610196610310366004611fb2565b610b47565b348015610320575f80fd5b505f54610333906001600160a01b031681565b6040516001600160a01b03909116815260200161016e565b348015610356575f80fd5b50610196610365366004611fb2565b610ba3565b348015610375575f80fd5b5061022c60065481565b61019661038d3660046122ce565b610d2b565b34801561039d575f80fd5b506002546101b99062010000900461ffff1681565b3480156103bd575f80fd5b5061022c60055481565b3480156103d2575f80fd5b506101966103e1366004612387565b610d6f565b3480156103f1575f80fd5b50610196610f72565b5f5460405163025a076560e61b815263ffffffff831660048201526001600160a01b0390911690639681d940906024016020604051808303815f875af1158015610446573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061046a91906123da565b5050565b600a6020525f90815260409020805460018201546002830180546001600160a01b0390931693919261049f906123f1565b80601f01602080910402602001604051908101604052809291908181526020018280546104cb906123f1565b80156105165780601f106104ed57610100808354040283529160200191610516565b820191905f5260205f20905b8154815290600101906020018083116104f957829003601f168201915b50505050509080600301805461052b906123f1565b80601f0160208091040260200160405190810160405280929190818152602001828054610557906123f1565b80156105a25780601f10610579576101008083540402835291602001916105a2565b820191905f5260205f20905b81548152906001019060200180831161058557829003601f168201915b505060408051808201825260048701805463ffffffff16825260058801805484516020828102820181019096528181529899989397509195508387019450919283018282801561061957602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116105fb575b50505091909252505060408051808201825260068501805463ffffffff1682526007860180548451602082810282018101909652818152969796939550919380860193929083018282801561069557602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610677575b505050505081525050905086565b60015f54600160a01b900460ff1660028111156106c2576106c26120e9565b036106e057604051639bbb1f3b60e01b815260040160405180910390fd5b60025f54600160a01b900460ff1660028111156106ff576106ff6120e9565b0361071d57604051631f86de2560e21b815260040160405180910390fd5b60065442101561074f57600654604051638fc300c160e01b815260040161074691815260200190565b60405180910390fd5b5f805460ff60a01b1916600160a01b17905560045461076e904261243d565b6001555f600b819055600254600160201b900461ffff1690036107b4576002546040516379c2afbd60e11b8152600160201b90910461ffff166004820152602401610746565b5f600260069054906101000a90046001600160401b03165f8054906101000a90046001600160a01b03166001600160a01b031663bb0b19386040518163ffffffff1660e01b8152600401602060405180830381865afa158015610819573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061083d9190612450565b5f8054906101000a90046001600160a01b03166001600160a01b031663c00a8aec6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561088b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108af919061246b565b60ff166108bc919061248b565b6108c691906124b6565b6108d190606461248b565b9050806001600160401b03165f0361091157600254604051632bfe056160e01b8152600160301b9091046001600160401b03166004820152602401610746565b600254600160201b900461ffff166001600160401b038216111561095457600280546201000061ffff600160201b8304160263ffff00001990911617905561096d565b6002805463ffff000019166201000061ffff8416021790555b610978600c5f611eb5565b6002546003546001546005546040805162010000860461ffff168152600160301b9095046001600160401b03166020860152840192909252606083015260808201527f50e40b07b3cd91a269f83830c35b4c090f74ebd0cc06dce4db251ccc23627b549060a00160405180910390a150565b5f60015f54600160a01b900460ff166002811115610a0a57610a0a6120e9565b14610a27576040516232f00d60e71b815260040160405180910390fd5b60025461ffff16610a37600c5490565b1015610a44575060055490565b610a4e600c61160e565b610a5990600161243d565b905090565b5f805460405163025a076560e61b815263ffffffff841660048201526001600160a01b0390911690639681d940906024015b6020604051808303815f875af1158015610aac573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ad091906123da565b92915050565b600280545f91600160201b90910461ffff16906004610af4836124e7565b825461ffff9182166101009390930a9283029190920219909116179055505f54604051631474cbc960e31b815263ffffffff841660048201526001600160a01b039091169063a3a65e4890602401610a90565b5f54604051635b73516560e11b8152600481018390526001600160a01b039091169063b6e6a2ca906024015b5f604051808303815f87803b158015610b8a575f80fd5b505af1158015610b9c573d5f803e3d5ffd5b5050505050565b5f81815260096020526040902060010154421015610bea575f8181526009602052604090819020600101549051631a936b7b60e11b81526004810191909152602401610746565b600860095f8381526020019081526020015f20600201604051610c0d9190612503565b90815260405190819003602001902080546001600160a01b03191681555f60018201819055610c3f6002830182611ed3565b610c4c600383015f611ed3565b505f600482018190556005909101805467ffffffffffffffff1916905581815260096020526040812080546001600160a01b03191681556001810182905590610c986002830182611ed3565b610ca5600383015f611ed3565b505f6004828101919091556005909101805467ffffffffffffffff1916905560028054600160201b900461ffff1691610cdd83612575565b825461ffff9182166101009390930a9283029190920219909116179055505f54604051635b73516560e11b8152600481018390526001600160a01b039091169063b6e6a2ca90602401610b73565b610d33611633565b610d40348585858561167d565b610d6960017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b50505050565b60015f54600160a01b900460ff166002811115610d8e57610d8e6120e9565b03610dac57604051639bbb1f3b60e01b815260040160405180910390fd5b60025f54600160a01b900460ff166002811115610dcb57610dcb6120e9565b03610de957604051631f86de2560e21b815260040160405180910390fd5b60025461ffff9081169086161115610e6457600254610e0c9061ffff1686612595565b60028054600490610e29908490600160201b900461ffff166125b7565b92506101000a81548161ffff021916908361ffff1602179055508460025f6101000a81548161ffff021916908361ffff160217905550610f35565b60025461ffff80871691610e8291600160201b820481169116612595565b61ffff161115610ecf576002548590610ea89061ffff600160201b820481169116612595565b60405163942cc62360e01b815261ffff928316600482015291166024820152604401610746565b600254610ee190869061ffff16612595565b60028054600490610efe908490600160201b900461ffff16612595565b92506101000a81548161ffff021916908361ffff1602179055508460025f6101000a81548161ffff021916908361ffff1602179055505b600492909255600355600555600280546001600160401b03909216600160301b026dffffffffffffffff0000000000001990921691909117905550565b610f7a611633565b60015f54600160a01b900460ff166002811115610f9957610f996120e9565b14610fb6576040516232f00d60e71b815260040160405180910390fd5b610fc3426201518061243d565b6006555f805460ff60a01b1916600160a11b17905560015442101561100157600154604051638230260760e01b815260040161074691815260200190565b600b541580156110125750600c5415155b1561102557611021600c61160e565b600b555b5f61102f600c5490565b11156115c5575f611040600c611b2a565b5f818152600a60209081526040808320815160c08101835281546001600160a01b031681526001820154938101939093526002810180549596509394929390929184019161108d906123f1565b80601f01602080910402602001604051908101604052809291908181526020018280546110b9906123f1565b80156111045780601f106110db57610100808354040283529160200191611104565b820191905f5260205f20905b8154815290600101906020018083116110e757829003601f168201915b5050505050815260200160038201805461111d906123f1565b80601f0160208091040260200160405190810160405280929190818152602001828054611149906123f1565b80156111945780601f1061116b57610100808354040283529160200191611194565b820191905f5260205f20905b81548152906001019060200180831161117757829003601f168201915b505050918352505060408051808201825260048401805463ffffffff16825260058501805484516020828102820181019096528181529585019593949293858401939092919083018282801561121157602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116111f3575b50505091909252505050815260408051808201825260068401805463ffffffff16825260078501805484516020828102820181019096528181529585019593949293858401939092919083018282801561129257602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311611274575b505050919092525050509052508051600b549192506112ba916112b590856125d2565b611b37565b5f80546040838101516060850151608086015160a08701516002549451634e5bb12760e11b81526001600160a01b0390961695639cb7624e956113159594939291600160301b9091046001600160401b0316906004016125e5565b6020604051808303815f875af1158015611331573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061135591906123da565b9050815f01516001600160a01b0316817f032100a60b84cf31291641706872970585d53fa5be412562041fbf66a99ce285600154600354611396919061243d565b60025460408051928352600160301b9091046001600160401b031660208301520160405180910390a36040518060c00160405280835f01516001600160a01b031681526020016001546003546113ec919061243d565b8152604084810180516020840152606080870151838501528301859052600254600160301b90046001600160401b0316608090930192909252905190516008916114359161264d565b9081526040805160209281900383019020835181546001600160a01b0319166001600160a01b03909116178155918301516001830155820151600282019061147d90826126ac565b506060820151600382019061149290826126ac565b506080820151600482015560a0909101516005909101805467ffffffffffffffff19166001600160401b039092169190911790556040805160c0810190915282516001600160a01b0316815260015460035460208301916114f29161243d565b815260408481015160208084019190915260608087015183850152830185905260028054600160301b90046001600160401b03166080909401939093525f85815260098252829020845181546001600160a01b0319166001600160a01b0390911617815590840151600182015590830151909182019061157290826126ac565b506060820151600382019061158790826126ac565b506080820151600482015560a0909101516005909101805467ffffffffffffffff19166001600160401b039092169190911790555050600b55611025565b5f60018190556002805463ffff000019169055805460ff60a01b1916905561160c60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b565b5f815f015f815481106116235761162361276b565b905f5260205f2001549050919050565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0080546001190161167757604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b60015f54600160a01b900460ff16600281111561169c5761169c6120e9565b146116b9576040516232f00d60e71b815260040160405180910390fd5b5f5460405163d47a948b60e01b81526001600160a01b039091169063d47a948b906116e890879060040161277f565b602060405180830381865afa158015611703573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061172791906123da565b15611747578360405163f3c815f760e01b8152600401610746919061277f565b600784604051611757919061264d565b9081526040519081900360200190205460ff161561178a578360405163da1fb87960e01b8152600401610746919061277f565b5f858152600a60205260409020546001600160a01b0316156117c257604051630517e2e760e21b815260048101869052602401610746565b8460055411156117f3576005546040516301a0013b60e61b8152600481019190915260248101869052604401610746565b60025461ffff620100009091041661180a600c5490565b10156118205761181b600c86611b4a565b6119ad565b8461182b600c61160e565b1015611974575f61183d600c87611b57565b600b8190555f818152600a602052604090819020905191925061186591600290910190612503565b6040519081900381209082907fdbb7ff16cd6e3cc5c7aca1a615bf0d56f746d9f5708e12d52ebe243518b536cc905f90a35f818152600a60205260409020546118b7906001600160a01b031682611b37565b6007600a5f8381526020019081526020015f206002016040516118da9190612503565b9081526040805160209281900383019020805460ff191690555f838152600a909252812080546001600160a01b031916815560018101829055906119216002830182611ed3565b61192e600383015f611ed3565b60048201805463ffffffff191681555f61194b6005850182611eb5565b505060068201805463ffffffff191681555f61196a6007850182611eb5565b50505050506119ad565b61197e600c61160e565b61198990600161243d565b604051631a79674760e11b8152600481019190915260248101869052604401610746565b6040805160c0810182523381526020808201888152828401888152606084018890526080840187905260a084018690525f8a8152600a90935293909120825181546001600160a01b0319166001600160a01b039091161781559051600182015591519091906002820190611a2190826126ac565b5060608201516003820190611a3690826126ac565b506080820151805160048301805463ffffffff191663ffffffff9092169190911781556020808301518051611a719260058701920190611f0a565b50505060a0820151805160068301805463ffffffff191663ffffffff9092169190911781556020808301518051611aae9260078701920190611f0a565b5050509050506001600785604051611ac6919061264d565b908152604051908190036020018120805492151560ff1990931692909217909155611af290859061264d565b6040519081900381209086907f864a2110bb41c315e04bd6122b668384bca4b0d8509e55850db8347e86a95029905f90a35050505050565b5f610ad082611b6c611b70565b61046a6001600160a01b03831682611c01565b61046a8282611b6c611ca0565b5f611b658383611b6c611ccb565b9392505050565b1190565b5f80611b7a845490565b9050805f03611b8d57611b8d6031611d18565b5f611b988582611d29565b5490505f611ba9865f198501611d29565b548654909150869080611bbe57611bbe612791565b600190038181905f5260205f20015f9055905580611be75f885f01611d2990919063ffffffff16565b55611bf8865f1985015f8489611d50565b50949350505050565b80471015611c2b5760405163cf47918160e01b815247600482015260248101829052604401610746565b5f826001600160a01b0316826040515f6040518083038185875af1925050503d805f8114611c74576040519150601f19603f3d011682016040523d82523d5f602084013e611c79565b606091505b5050905080611c9b5760405163d6bda27560e01b815260040160405180910390fd5b505050565b5f611ca9845490565b84546001810186555f86815260209020018490559050610d6984828585611e45565b5f80611cd5855490565b9050805f03611ce857611ce86031611d18565b5f611cf38682611d29565b54905084611d01875f611d29565b55611d0f86835f8888611d50565b95945050505050565b634e487b715f52806020526024601cfd5b5f82611d48611d4584611d41845f9081526020902090565b0190565b90565b949350505050565b6001600160ff1b03831015610b9c57600283810260018101910185811015611df9575f611d7d8884611d29565b5490505f611d8b8984611d29565b549050611d9c828763ffffffff8816565b80611db05750611db081878763ffffffff16565b15611df2575f611dd68585611dc986868b63ffffffff16565b1515918118919091021890565b9050611de38a8983611e8d565b611df08a8a838a8a611d50565b505b5050611e3c565b85821015611e3c575f611e0c8884611d29565b549050611e1d818663ffffffff8716565b15611e3a57611e2d888785611e8d565b611e3a8888858888611d50565b505b50505050505050565b8215610d695760025f198401045f611e5d8683611d29565b549050611e6e818563ffffffff8616565b15611e7a575050610d69565b611e85868684611e8d565b509250611e45565b5f611e988484611d29565b90505f611ea58584611d29565b8054835490915590915550505050565b5080545f8255905f5260205f2090810190611ed09190611f6d565b50565b508054611edf906123f1565b5f825580601f10611eee575050565b601f0160209004905f5260205f2090810190611ed09190611f6d565b828054828255905f5260205f20908101928215611f5d579160200282015b82811115611f5d57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611f28565b50611f69929150611f6d565b5090565b5b80821115611f69575f8155600101611f6e565b803563ffffffff81168114611f94575f80fd5b919050565b5f60208284031215611fa9575f80fd5b611b6582611f81565b5f60208284031215611fc2575f80fd5b5035919050565b5f5b83811015611fe3578181015183820152602001611fcb565b50505f910152565b5f8151808452612002816020860160208601611fc9565b601f01601f19169290920160200192915050565b5f6040830163ffffffff8351168452602080840151604060208701528281518085526060880191506020830194505f92505b808310156120715784516001600160a01b03168252938301936001929092019190830190612048565b509695505050505050565b60018060a01b038716815285602082015260c060408201525f6120a260c0830187611feb565b82810360608401526120b48187611feb565b905082810360808401526120c88186612016565b905082810360a08401526120dc8185612016565b9998505050505050505050565b634e487b7160e01b5f52602160045260245ffd5b602081016003831061211d57634e487b7160e01b5f52602160045260245ffd5b91905290565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b038111828210171561215957612159612123565b60405290565b604051601f8201601f191681016001600160401b038111828210171561218757612187612123565b604052919050565b5f82601f83011261219e575f80fd5b81356001600160401b038111156121b7576121b7612123565b6121ca601f8201601f191660200161215f565b8181528460208386010111156121de575f80fd5b816020850160208301375f918101602001919091529392505050565b5f6040828403121561220a575f80fd5b612212612137565b905061221d82611f81565b81526020808301356001600160401b0380821115612239575f80fd5b818501915085601f83011261224c575f80fd5b81358181111561225e5761225e612123565b8060051b915061226f84830161215f565b8181529183018401918481019088841115612288575f80fd5b938501935b838510156122bd57843592506001600160a01b03831683146122ad575f80fd5b828252938501939085019061228d565b808688015250505050505092915050565b5f805f80608085870312156122e1575f80fd5b84356001600160401b03808211156122f7575f80fd5b6123038883890161218f565b95506020870135915080821115612318575f80fd5b6123248883890161218f565b94506040870135915080821115612339575f80fd5b612345888389016121fa565b9350606087013591508082111561235a575f80fd5b50612367878288016121fa565b91505092959194509250565b6001600160401b0381168114611ed0575f80fd5b5f805f805f60a0868803121561239b575f80fd5b853561ffff811681146123ac575f80fd5b945060208601356123bc81612373565b94979496505050506040830135926060810135926080909101359150565b5f602082840312156123ea575f80fd5b5051919050565b600181811c9082168061240557607f821691505b60208210810361242357634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610ad057610ad0612429565b5f60208284031215612460575f80fd5b8151611b6581612373565b5f6020828403121561247b575f80fd5b815160ff81168114611b65575f80fd5b6001600160401b038181168382160280821691908281146124ae576124ae612429565b505092915050565b5f6001600160401b03808416806124db57634e487b7160e01b5f52601260045260245ffd5b92169190910492915050565b5f61ffff8216806124fa576124fa612429565b5f190192915050565b5f808354612510816123f1565b60018281168015612528576001811461253d57612569565b60ff1984168752821515830287019450612569565b875f526020805f205f5b858110156125605781548a820152908401908201612547565b50505082870194505b50929695505050505050565b5f61ffff80831681810361258b5761258b612429565b6001019392505050565b61ffff8281168282160390808211156125b0576125b0612429565b5092915050565b61ffff8181168382160190808211156125b0576125b0612429565b81810381811115610ad057610ad0612429565b60a081525f6125f760a0830188611feb565b82810360208401526126098188611feb565b9050828103604084015261261d8187612016565b905082810360608401526126318186612016565b9150506001600160401b03831660808301529695505050505050565b5f825161265e818460208701611fc9565b9190910192915050565b601f821115611c9b57805f5260205f20601f840160051c8101602085101561268d5750805b601f840160051c820191505b81811015610b9c575f8155600101612699565b81516001600160401b038111156126c5576126c5612123565b6126d9816126d384546123f1565b84612668565b602080601f83116001811461270c575f84156126f55750858301515b5f19600386901b1c1916600185901b178555612763565b5f85815260208120601f198616915b8281101561273a5788860151825594840194600190910190840161271b565b508582101561275757878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52603260045260245ffd5b602081525f611b656020830184611feb565b634e487b7160e01b5f52603160045260245ffdfea26469706673582212201ff62ca0cbde6553f82819fdb751f869bdd569957acbd484bdfdd969492e01f764736f6c63430008190033",
}

// NativeTokenSlotAuctionManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use NativeTokenSlotAuctionManagerMetaData.ABI instead.
var NativeTokenSlotAuctionManagerABI = NativeTokenSlotAuctionManagerMetaData.ABI

// NativeTokenSlotAuctionManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use NativeTokenSlotAuctionManagerMetaData.Bin instead.
var NativeTokenSlotAuctionManagerBin = NativeTokenSlotAuctionManagerMetaData.Bin

// DeployNativeTokenSlotAuctionManager deploys a new Ethereum contract, binding an instance of NativeTokenSlotAuctionManager to it.
func DeployNativeTokenSlotAuctionManager(auth *bind.TransactOpts, backend bind.ContractBackend, vmAddress common.Address, validatorslots uint16, weight uint64, minAuctionDuration *big.Int, minValidatorDuration *big.Int, minimumBid *big.Int) (common.Address, *types.Transaction, *NativeTokenSlotAuctionManager, error) {
	parsed, err := NativeTokenSlotAuctionManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(NativeTokenSlotAuctionManagerBin), backend, vmAddress, validatorslots, weight, minAuctionDuration, minValidatorDuration, minimumBid)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &NativeTokenSlotAuctionManager{NativeTokenSlotAuctionManagerCaller: NativeTokenSlotAuctionManagerCaller{contract: contract}, NativeTokenSlotAuctionManagerTransactor: NativeTokenSlotAuctionManagerTransactor{contract: contract}, NativeTokenSlotAuctionManagerFilterer: NativeTokenSlotAuctionManagerFilterer{contract: contract}}, nil
}

// NativeTokenSlotAuctionManager is an auto generated Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManager struct {
	NativeTokenSlotAuctionManagerCaller     // Read-only binding to the contract
	NativeTokenSlotAuctionManagerTransactor // Write-only binding to the contract
	NativeTokenSlotAuctionManagerFilterer   // Log filterer for contract events
}

// NativeTokenSlotAuctionManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NativeTokenSlotAuctionManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NativeTokenSlotAuctionManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type NativeTokenSlotAuctionManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NativeTokenSlotAuctionManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type NativeTokenSlotAuctionManagerSession struct {
	Contract     *NativeTokenSlotAuctionManager // Generic contract binding to set the session for
	CallOpts     bind.CallOpts                  // Call options to use throughout this session
	TransactOpts bind.TransactOpts              // Transaction auth options to use throughout this session
}

// NativeTokenSlotAuctionManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type NativeTokenSlotAuctionManagerCallerSession struct {
	Contract *NativeTokenSlotAuctionManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                        // Call options to use throughout this session
}

// NativeTokenSlotAuctionManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type NativeTokenSlotAuctionManagerTransactorSession struct {
	Contract     *NativeTokenSlotAuctionManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                        // Transaction auth options to use throughout this session
}

// NativeTokenSlotAuctionManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManagerRaw struct {
	Contract *NativeTokenSlotAuctionManager // Generic contract binding to access the raw methods on
}

// NativeTokenSlotAuctionManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManagerCallerRaw struct {
	Contract *NativeTokenSlotAuctionManagerCaller // Generic read-only contract binding to access the raw methods on
}

// NativeTokenSlotAuctionManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManagerTransactorRaw struct {
	Contract *NativeTokenSlotAuctionManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewNativeTokenSlotAuctionManager creates a new instance of NativeTokenSlotAuctionManager, bound to a specific deployed contract.
func NewNativeTokenSlotAuctionManager(address common.Address, backend bind.ContractBackend) (*NativeTokenSlotAuctionManager, error) {
	contract, err := bindNativeTokenSlotAuctionManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManager{NativeTokenSlotAuctionManagerCaller: NativeTokenSlotAuctionManagerCaller{contract: contract}, NativeTokenSlotAuctionManagerTransactor: NativeTokenSlotAuctionManagerTransactor{contract: contract}, NativeTokenSlotAuctionManagerFilterer: NativeTokenSlotAuctionManagerFilterer{contract: contract}}, nil
}

// NewNativeTokenSlotAuctionManagerCaller creates a new read-only instance of NativeTokenSlotAuctionManager, bound to a specific deployed contract.
func NewNativeTokenSlotAuctionManagerCaller(address common.Address, caller bind.ContractCaller) (*NativeTokenSlotAuctionManagerCaller, error) {
	contract, err := bindNativeTokenSlotAuctionManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerCaller{contract: contract}, nil
}

// NewNativeTokenSlotAuctionManagerTransactor creates a new write-only instance of NativeTokenSlotAuctionManager, bound to a specific deployed contract.
func NewNativeTokenSlotAuctionManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*NativeTokenSlotAuctionManagerTransactor, error) {
	contract, err := bindNativeTokenSlotAuctionManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerTransactor{contract: contract}, nil
}

// NewNativeTokenSlotAuctionManagerFilterer creates a new log filterer instance of NativeTokenSlotAuctionManager, bound to a specific deployed contract.
func NewNativeTokenSlotAuctionManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*NativeTokenSlotAuctionManagerFilterer, error) {
	contract, err := bindNativeTokenSlotAuctionManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerFilterer{contract: contract}, nil
}

// bindNativeTokenSlotAuctionManager binds a generic wrapper to an already deployed contract.
func bindNativeTokenSlotAuctionManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := NativeTokenSlotAuctionManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _NativeTokenSlotAuctionManager.Contract.NativeTokenSlotAuctionManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.NativeTokenSlotAuctionManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.NativeTokenSlotAuctionManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _NativeTokenSlotAuctionManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.contract.Transact(opts, method, params...)
}

// MinAuctionDuration is a free data retrieval call binding the contract method 0x9d507e77.
//
// Solidity: function MinAuctionDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) MinAuctionDuration(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "MinAuctionDuration")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MinAuctionDuration is a free data retrieval call binding the contract method 0x9d507e77.
//
// Solidity: function MinAuctionDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) MinAuctionDuration() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinAuctionDuration(&_NativeTokenSlotAuctionManager.CallOpts)
}

// MinAuctionDuration is a free data retrieval call binding the contract method 0x9d507e77.
//
// Solidity: function MinAuctionDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) MinAuctionDuration() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinAuctionDuration(&_NativeTokenSlotAuctionManager.CallOpts)
}

// MinBidRequired is a free data retrieval call binding the contract method 0x913ed0b1.
//
// Solidity: function MinBidRequired() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) MinBidRequired(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "MinBidRequired")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MinBidRequired is a free data retrieval call binding the contract method 0x913ed0b1.
//
// Solidity: function MinBidRequired() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) MinBidRequired() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinBidRequired(&_NativeTokenSlotAuctionManager.CallOpts)
}

// MinBidRequired is a free data retrieval call binding the contract method 0x913ed0b1.
//
// Solidity: function MinBidRequired() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) MinBidRequired() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinBidRequired(&_NativeTokenSlotAuctionManager.CallOpts)
}

// MinValidatorDuration is a free data retrieval call binding the contract method 0x6fe4d1e1.
//
// Solidity: function MinValidatorDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) MinValidatorDuration(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "MinValidatorDuration")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MinValidatorDuration is a free data retrieval call binding the contract method 0x6fe4d1e1.
//
// Solidity: function MinValidatorDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) MinValidatorDuration() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinValidatorDuration(&_NativeTokenSlotAuctionManager.CallOpts)
}

// MinValidatorDuration is a free data retrieval call binding the contract method 0x6fe4d1e1.
//
// Solidity: function MinValidatorDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) MinValidatorDuration() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinValidatorDuration(&_NativeTokenSlotAuctionManager.CallOpts)
}

// MinimumBid is a free data retrieval call binding the contract method 0xf556f60a.
//
// Solidity: function MinimumBid() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) MinimumBid(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "MinimumBid")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MinimumBid is a free data retrieval call binding the contract method 0xf556f60a.
//
// Solidity: function MinimumBid() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) MinimumBid() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinimumBid(&_NativeTokenSlotAuctionManager.CallOpts)
}

// MinimumBid is a free data retrieval call binding the contract method 0xf556f60a.
//
// Solidity: function MinimumBid() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) MinimumBid() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinimumBid(&_NativeTokenSlotAuctionManager.CallOpts)
}

// VALIDATORMANAGER is a free data retrieval call binding the contract method 0xae9483e0.
//
// Solidity: function VALIDATOR_MANAGER() view returns(address)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) VALIDATORMANAGER(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "VALIDATOR_MANAGER")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// VALIDATORMANAGER is a free data retrieval call binding the contract method 0xae9483e0.
//
// Solidity: function VALIDATOR_MANAGER() view returns(address)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) VALIDATORMANAGER() (common.Address, error) {
	return _NativeTokenSlotAuctionManager.Contract.VALIDATORMANAGER(&_NativeTokenSlotAuctionManager.CallOpts)
}

// VALIDATORMANAGER is a free data retrieval call binding the contract method 0xae9483e0.
//
// Solidity: function VALIDATOR_MANAGER() view returns(address)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) VALIDATORMANAGER() (common.Address, error) {
	return _NativeTokenSlotAuctionManager.Contract.VALIDATORMANAGER(&_NativeTokenSlotAuctionManager.CallOpts)
}

// AuctionCooldownEndtime is a free data retrieval call binding the contract method 0xbbfd4a9b.
//
// Solidity: function auctionCooldownEndtime() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) AuctionCooldownEndtime(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "auctionCooldownEndtime")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// AuctionCooldownEndtime is a free data retrieval call binding the contract method 0xbbfd4a9b.
//
// Solidity: function auctionCooldownEndtime() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) AuctionCooldownEndtime() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.AuctionCooldownEndtime(&_NativeTokenSlotAuctionManager.CallOpts)
}

// AuctionCooldownEndtime is a free data retrieval call binding the contract method 0xbbfd4a9b.
//
// Solidity: function auctionCooldownEndtime() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) AuctionCooldownEndtime() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.AuctionCooldownEndtime(&_NativeTokenSlotAuctionManager.CallOpts)
}

// AuctionEndTime is a free data retrieval call binding the contract method 0x4b449cba.
//
// Solidity: function auctionEndTime() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) AuctionEndTime(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "auctionEndTime")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// AuctionEndTime is a free data retrieval call binding the contract method 0x4b449cba.
//
// Solidity: function auctionEndTime() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) AuctionEndTime() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.AuctionEndTime(&_NativeTokenSlotAuctionManager.CallOpts)
}

// AuctionEndTime is a free data retrieval call binding the contract method 0x4b449cba.
//
// Solidity: function auctionEndTime() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) AuctionEndTime() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.AuctionEndTime(&_NativeTokenSlotAuctionManager.CallOpts)
}

// AuctionState is a free data retrieval call binding the contract method 0x7fb45099.
//
// Solidity: function auctionState() view returns(uint8)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) AuctionState(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "auctionState")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// AuctionState is a free data retrieval call binding the contract method 0x7fb45099.
//
// Solidity: function auctionState() view returns(uint8)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) AuctionState() (uint8, error) {
	return _NativeTokenSlotAuctionManager.Contract.AuctionState(&_NativeTokenSlotAuctionManager.CallOpts)
}

// AuctionState is a free data retrieval call binding the contract method 0x7fb45099.
//
// Solidity: function auctionState() view returns(uint8)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) AuctionState() (uint8, error) {
	return _NativeTokenSlotAuctionManager.Contract.AuctionState(&_NativeTokenSlotAuctionManager.CallOpts)
}

// AuctioningValidatorSlots is a free data retrieval call binding the contract method 0xef72fb88.
//
// Solidity: function auctioningValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) AuctioningValidatorSlots(opts *bind.CallOpts) (uint16, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "auctioningValidatorSlots")

	if err != nil {
		return *new(uint16), err
	}

	out0 := *abi.ConvertType(out[0], new(uint16)).(*uint16)

	return out0, err

}

// AuctioningValidatorSlots is a free data retrieval call binding the contract method 0xef72fb88.
//
// Solidity: function auctioningValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) AuctioningValidatorSlots() (uint16, error) {
	return _NativeTokenSlotAuctionManager.Contract.AuctioningValidatorSlots(&_NativeTokenSlotAuctionManager.CallOpts)
}

// AuctioningValidatorSlots is a free data retrieval call binding the contract method 0xef72fb88.
//
// Solidity: function auctioningValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) AuctioningValidatorSlots() (uint16, error) {
	return _NativeTokenSlotAuctionManager.Contract.AuctioningValidatorSlots(&_NativeTokenSlotAuctionManager.CallOpts)
}

// BidderInfo is a free data retrieval call binding the contract method 0x0d5daf3b.
//
// Solidity: function bidderInfo(uint256 bid) view returns(address addr, uint256 bid, bytes nodeID, bytes blsPublicKey, (uint32,address[]) remainingBalanceOwner, (uint32,address[]) disableOwner)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) BidderInfo(opts *bind.CallOpts, bid *big.Int) (struct {
	Addr                  common.Address
	Bid                   *big.Int
	NodeID                []byte
	BlsPublicKey          []byte
	RemainingBalanceOwner PChainOwner
	DisableOwner          PChainOwner
}, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "bidderInfo", bid)

	outstruct := new(struct {
		Addr                  common.Address
		Bid                   *big.Int
		NodeID                []byte
		BlsPublicKey          []byte
		RemainingBalanceOwner PChainOwner
		DisableOwner          PChainOwner
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Addr = *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	outstruct.Bid = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.NodeID = *abi.ConvertType(out[2], new([]byte)).(*[]byte)
	outstruct.BlsPublicKey = *abi.ConvertType(out[3], new([]byte)).(*[]byte)
	outstruct.RemainingBalanceOwner = *abi.ConvertType(out[4], new(PChainOwner)).(*PChainOwner)
	outstruct.DisableOwner = *abi.ConvertType(out[5], new(PChainOwner)).(*PChainOwner)

	return *outstruct, err

}

// BidderInfo is a free data retrieval call binding the contract method 0x0d5daf3b.
//
// Solidity: function bidderInfo(uint256 bid) view returns(address addr, uint256 bid, bytes nodeID, bytes blsPublicKey, (uint32,address[]) remainingBalanceOwner, (uint32,address[]) disableOwner)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) BidderInfo(bid *big.Int) (struct {
	Addr                  common.Address
	Bid                   *big.Int
	NodeID                []byte
	BlsPublicKey          []byte
	RemainingBalanceOwner PChainOwner
	DisableOwner          PChainOwner
}, error) {
	return _NativeTokenSlotAuctionManager.Contract.BidderInfo(&_NativeTokenSlotAuctionManager.CallOpts, bid)
}

// BidderInfo is a free data retrieval call binding the contract method 0x0d5daf3b.
//
// Solidity: function bidderInfo(uint256 bid) view returns(address addr, uint256 bid, bytes nodeID, bytes blsPublicKey, (uint32,address[]) remainingBalanceOwner, (uint32,address[]) disableOwner)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) BidderInfo(bid *big.Int) (struct {
	Addr                  common.Address
	Bid                   *big.Int
	NodeID                []byte
	BlsPublicKey          []byte
	RemainingBalanceOwner PChainOwner
	DisableOwner          PChainOwner
}, error) {
	return _NativeTokenSlotAuctionManager.Contract.BidderInfo(&_NativeTokenSlotAuctionManager.CallOpts, bid)
}

// OpenValidatorSlots is a free data retrieval call binding the contract method 0x090d7db6.
//
// Solidity: function openValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) OpenValidatorSlots(opts *bind.CallOpts) (uint16, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "openValidatorSlots")

	if err != nil {
		return *new(uint16), err
	}

	out0 := *abi.ConvertType(out[0], new(uint16)).(*uint16)

	return out0, err

}

// OpenValidatorSlots is a free data retrieval call binding the contract method 0x090d7db6.
//
// Solidity: function openValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) OpenValidatorSlots() (uint16, error) {
	return _NativeTokenSlotAuctionManager.Contract.OpenValidatorSlots(&_NativeTokenSlotAuctionManager.CallOpts)
}

// OpenValidatorSlots is a free data retrieval call binding the contract method 0x090d7db6.
//
// Solidity: function openValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) OpenValidatorSlots() (uint16, error) {
	return _NativeTokenSlotAuctionManager.Contract.OpenValidatorSlots(&_NativeTokenSlotAuctionManager.CallOpts)
}

// TotalValidatorSlots is a free data retrieval call binding the contract method 0x182dd381.
//
// Solidity: function totalValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) TotalValidatorSlots(opts *bind.CallOpts) (uint16, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "totalValidatorSlots")

	if err != nil {
		return *new(uint16), err
	}

	out0 := *abi.ConvertType(out[0], new(uint16)).(*uint16)

	return out0, err

}

// TotalValidatorSlots is a free data retrieval call binding the contract method 0x182dd381.
//
// Solidity: function totalValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) TotalValidatorSlots() (uint16, error) {
	return _NativeTokenSlotAuctionManager.Contract.TotalValidatorSlots(&_NativeTokenSlotAuctionManager.CallOpts)
}

// TotalValidatorSlots is a free data retrieval call binding the contract method 0x182dd381.
//
// Solidity: function totalValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) TotalValidatorSlots() (uint16, error) {
	return _NativeTokenSlotAuctionManager.Contract.TotalValidatorSlots(&_NativeTokenSlotAuctionManager.CallOpts)
}

// ValidatorWeight is a free data retrieval call binding the contract method 0x00d841f8.
//
// Solidity: function validatorWeight() view returns(uint64)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) ValidatorWeight(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "validatorWeight")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// ValidatorWeight is a free data retrieval call binding the contract method 0x00d841f8.
//
// Solidity: function validatorWeight() view returns(uint64)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) ValidatorWeight() (uint64, error) {
	return _NativeTokenSlotAuctionManager.Contract.ValidatorWeight(&_NativeTokenSlotAuctionManager.CallOpts)
}

// ValidatorWeight is a free data retrieval call binding the contract method 0x00d841f8.
//
// Solidity: function validatorWeight() view returns(uint64)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) ValidatorWeight() (uint64, error) {
	return _NativeTokenSlotAuctionManager.Contract.ValidatorWeight(&_NativeTokenSlotAuctionManager.CallOpts)
}

// CompleteRemoveInitialValidator is a paid mutator transaction binding the contract method 0x05af8256.
//
// Solidity: function completeRemoveInitialValidator(uint32 messageIndex) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) CompleteRemoveInitialValidator(opts *bind.TransactOpts, messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "completeRemoveInitialValidator", messageIndex)
}

// CompleteRemoveInitialValidator is a paid mutator transaction binding the contract method 0x05af8256.
//
// Solidity: function completeRemoveInitialValidator(uint32 messageIndex) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) CompleteRemoveInitialValidator(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteRemoveInitialValidator(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// CompleteRemoveInitialValidator is a paid mutator transaction binding the contract method 0x05af8256.
//
// Solidity: function completeRemoveInitialValidator(uint32 messageIndex) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) CompleteRemoveInitialValidator(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteRemoveInitialValidator(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// CompleteValidatorRegistration is a paid mutator transaction binding the contract method 0xa3a65e48.
//
// Solidity: function completeValidatorRegistration(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) CompleteValidatorRegistration(opts *bind.TransactOpts, messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "completeValidatorRegistration", messageIndex)
}

// CompleteValidatorRegistration is a paid mutator transaction binding the contract method 0xa3a65e48.
//
// Solidity: function completeValidatorRegistration(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) CompleteValidatorRegistration(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteValidatorRegistration(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// CompleteValidatorRegistration is a paid mutator transaction binding the contract method 0xa3a65e48.
//
// Solidity: function completeValidatorRegistration(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) CompleteValidatorRegistration(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteValidatorRegistration(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// CompleteValidatorRemoval is a paid mutator transaction binding the contract method 0x9681d940.
//
// Solidity: function completeValidatorRemoval(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) CompleteValidatorRemoval(opts *bind.TransactOpts, messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "completeValidatorRemoval", messageIndex)
}

// CompleteValidatorRemoval is a paid mutator transaction binding the contract method 0x9681d940.
//
// Solidity: function completeValidatorRemoval(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) CompleteValidatorRemoval(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteValidatorRemoval(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// CompleteValidatorRemoval is a paid mutator transaction binding the contract method 0x9681d940.
//
// Solidity: function completeValidatorRemoval(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) CompleteValidatorRemoval(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteValidatorRemoval(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// EndAuction is a paid mutator transaction binding the contract method 0xfe67a54b.
//
// Solidity: function endAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) EndAuction(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "endAuction")
}

// EndAuction is a paid mutator transaction binding the contract method 0xfe67a54b.
//
// Solidity: function endAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) EndAuction() (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.EndAuction(&_NativeTokenSlotAuctionManager.TransactOpts)
}

// EndAuction is a paid mutator transaction binding the contract method 0xfe67a54b.
//
// Solidity: function endAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) EndAuction() (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.EndAuction(&_NativeTokenSlotAuctionManager.TransactOpts)
}

// InitiateAuction is a paid mutator transaction binding the contract method 0x5561f9df.
//
// Solidity: function initiateAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) InitiateAuction(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "initiateAuction")
}

// InitiateAuction is a paid mutator transaction binding the contract method 0x5561f9df.
//
// Solidity: function initiateAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) InitiateAuction() (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateAuction(&_NativeTokenSlotAuctionManager.TransactOpts)
}

// InitiateAuction is a paid mutator transaction binding the contract method 0x5561f9df.
//
// Solidity: function initiateAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) InitiateAuction() (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateAuction(&_NativeTokenSlotAuctionManager.TransactOpts)
}

// InitiateRemoveInitialValidator is a paid mutator transaction binding the contract method 0xa476f675.
//
// Solidity: function initiateRemoveInitialValidator(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) InitiateRemoveInitialValidator(opts *bind.TransactOpts, validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "initiateRemoveInitialValidator", validationID)
}

// InitiateRemoveInitialValidator is a paid mutator transaction binding the contract method 0xa476f675.
//
// Solidity: function initiateRemoveInitialValidator(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) InitiateRemoveInitialValidator(validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateRemoveInitialValidator(&_NativeTokenSlotAuctionManager.TransactOpts, validationID)
}

// InitiateRemoveInitialValidator is a paid mutator transaction binding the contract method 0xa476f675.
//
// Solidity: function initiateRemoveInitialValidator(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) InitiateRemoveInitialValidator(validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateRemoveInitialValidator(&_NativeTokenSlotAuctionManager.TransactOpts, validationID)
}

// InitiateValidatorRemoval is a paid mutator transaction binding the contract method 0xb6e6a2ca.
//
// Solidity: function initiateValidatorRemoval(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) InitiateValidatorRemoval(opts *bind.TransactOpts, validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "initiateValidatorRemoval", validationID)
}

// InitiateValidatorRemoval is a paid mutator transaction binding the contract method 0xb6e6a2ca.
//
// Solidity: function initiateValidatorRemoval(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) InitiateValidatorRemoval(validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateValidatorRemoval(&_NativeTokenSlotAuctionManager.TransactOpts, validationID)
}

// InitiateValidatorRemoval is a paid mutator transaction binding the contract method 0xb6e6a2ca.
//
// Solidity: function initiateValidatorRemoval(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) InitiateValidatorRemoval(validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateValidatorRemoval(&_NativeTokenSlotAuctionManager.TransactOpts, validationID)
}

// PlaceBid is a paid mutator transaction binding the contract method 0xc7d546f2.
//
// Solidity: function placeBid(bytes nodeID, bytes blsPublicKey, (uint32,address[]) remainingBalanceOwner, (uint32,address[]) disableOwner) payable returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) PlaceBid(opts *bind.TransactOpts, nodeID []byte, blsPublicKey []byte, remainingBalanceOwner PChainOwner, disableOwner PChainOwner) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "placeBid", nodeID, blsPublicKey, remainingBalanceOwner, disableOwner)
}

// PlaceBid is a paid mutator transaction binding the contract method 0xc7d546f2.
//
// Solidity: function placeBid(bytes nodeID, bytes blsPublicKey, (uint32,address[]) remainingBalanceOwner, (uint32,address[]) disableOwner) payable returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) PlaceBid(nodeID []byte, blsPublicKey []byte, remainingBalanceOwner PChainOwner, disableOwner PChainOwner) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.PlaceBid(&_NativeTokenSlotAuctionManager.TransactOpts, nodeID, blsPublicKey, remainingBalanceOwner, disableOwner)
}

// PlaceBid is a paid mutator transaction binding the contract method 0xc7d546f2.
//
// Solidity: function placeBid(bytes nodeID, bytes blsPublicKey, (uint32,address[]) remainingBalanceOwner, (uint32,address[]) disableOwner) payable returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) PlaceBid(nodeID []byte, blsPublicKey []byte, remainingBalanceOwner PChainOwner, disableOwner PChainOwner) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.PlaceBid(&_NativeTokenSlotAuctionManager.TransactOpts, nodeID, blsPublicKey, remainingBalanceOwner, disableOwner)
}

// SetSlotAuctionSettings is a paid mutator transaction binding the contract method 0xfb1c905d.
//
// Solidity: function setSlotAuctionSettings(uint16 newValidatorSlots, uint64 newWeight, uint256 newMinAuctionDuration, uint256 newMinValidatorDuration, uint256 newMinimumBid) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) SetSlotAuctionSettings(opts *bind.TransactOpts, newValidatorSlots uint16, newWeight uint64, newMinAuctionDuration *big.Int, newMinValidatorDuration *big.Int, newMinimumBid *big.Int) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "setSlotAuctionSettings", newValidatorSlots, newWeight, newMinAuctionDuration, newMinValidatorDuration, newMinimumBid)
}

// SetSlotAuctionSettings is a paid mutator transaction binding the contract method 0xfb1c905d.
//
// Solidity: function setSlotAuctionSettings(uint16 newValidatorSlots, uint64 newWeight, uint256 newMinAuctionDuration, uint256 newMinValidatorDuration, uint256 newMinimumBid) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) SetSlotAuctionSettings(newValidatorSlots uint16, newWeight uint64, newMinAuctionDuration *big.Int, newMinValidatorDuration *big.Int, newMinimumBid *big.Int) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.SetSlotAuctionSettings(&_NativeTokenSlotAuctionManager.TransactOpts, newValidatorSlots, newWeight, newMinAuctionDuration, newMinValidatorDuration, newMinimumBid)
}

// SetSlotAuctionSettings is a paid mutator transaction binding the contract method 0xfb1c905d.
//
// Solidity: function setSlotAuctionSettings(uint16 newValidatorSlots, uint64 newWeight, uint256 newMinAuctionDuration, uint256 newMinValidatorDuration, uint256 newMinimumBid) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) SetSlotAuctionSettings(newValidatorSlots uint16, newWeight uint64, newMinAuctionDuration *big.Int, newMinValidatorDuration *big.Int, newMinimumBid *big.Int) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.SetSlotAuctionSettings(&_NativeTokenSlotAuctionManager.TransactOpts, newValidatorSlots, newWeight, newMinAuctionDuration, newMinValidatorDuration, newMinimumBid)
}

// NativeTokenSlotAuctionManagerBidEvictedIterator is returned from FilterBidEvicted and is used to iterate over the raw logs and unpacked data for BidEvicted events raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerBidEvictedIterator struct {
	Event *NativeTokenSlotAuctionManagerBidEvicted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NativeTokenSlotAuctionManagerBidEvictedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NativeTokenSlotAuctionManagerBidEvicted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NativeTokenSlotAuctionManagerBidEvicted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NativeTokenSlotAuctionManagerBidEvictedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NativeTokenSlotAuctionManagerBidEvictedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NativeTokenSlotAuctionManagerBidEvicted represents a BidEvicted event raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerBidEvicted struct {
	Bid    *big.Int
	NodeID common.Hash
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterBidEvicted is a free log retrieval operation binding the contract event 0xdbb7ff16cd6e3cc5c7aca1a615bf0d56f746d9f5708e12d52ebe243518b536cc.
//
// Solidity: event BidEvicted(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) FilterBidEvicted(opts *bind.FilterOpts, bid []*big.Int, nodeID [][]byte) (*NativeTokenSlotAuctionManagerBidEvictedIterator, error) {

	var bidRule []interface{}
	for _, bidItem := range bid {
		bidRule = append(bidRule, bidItem)
	}
	var nodeIDRule []interface{}
	for _, nodeIDItem := range nodeID {
		nodeIDRule = append(nodeIDRule, nodeIDItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.FilterLogs(opts, "BidEvicted", bidRule, nodeIDRule)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerBidEvictedIterator{contract: _NativeTokenSlotAuctionManager.contract, event: "BidEvicted", logs: logs, sub: sub}, nil
}

// WatchBidEvicted is a free log subscription operation binding the contract event 0xdbb7ff16cd6e3cc5c7aca1a615bf0d56f746d9f5708e12d52ebe243518b536cc.
//
// Solidity: event BidEvicted(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) WatchBidEvicted(opts *bind.WatchOpts, sink chan<- *NativeTokenSlotAuctionManagerBidEvicted, bid []*big.Int, nodeID [][]byte) (event.Subscription, error) {

	var bidRule []interface{}
	for _, bidItem := range bid {
		bidRule = append(bidRule, bidItem)
	}
	var nodeIDRule []interface{}
	for _, nodeIDItem := range nodeID {
		nodeIDRule = append(nodeIDRule, nodeIDItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.WatchLogs(opts, "BidEvicted", bidRule, nodeIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NativeTokenSlotAuctionManagerBidEvicted)
				if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "BidEvicted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBidEvicted is a log parse operation binding the contract event 0xdbb7ff16cd6e3cc5c7aca1a615bf0d56f746d9f5708e12d52ebe243518b536cc.
//
// Solidity: event BidEvicted(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) ParseBidEvicted(log types.Log) (*NativeTokenSlotAuctionManagerBidEvicted, error) {
	event := new(NativeTokenSlotAuctionManagerBidEvicted)
	if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "BidEvicted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// NativeTokenSlotAuctionManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerInitializedIterator struct {
	Event *NativeTokenSlotAuctionManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NativeTokenSlotAuctionManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NativeTokenSlotAuctionManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NativeTokenSlotAuctionManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NativeTokenSlotAuctionManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NativeTokenSlotAuctionManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NativeTokenSlotAuctionManagerInitialized represents a Initialized event raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerInitialized struct {
	Version uint64
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*NativeTokenSlotAuctionManagerInitializedIterator, error) {

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerInitializedIterator{contract: _NativeTokenSlotAuctionManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *NativeTokenSlotAuctionManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NativeTokenSlotAuctionManagerInitialized)
				if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) ParseInitialized(log types.Log) (*NativeTokenSlotAuctionManagerInitialized, error) {
	event := new(NativeTokenSlotAuctionManagerInitialized)
	if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator is returned from FilterInitiatedAuctionValidatorRegistration and is used to iterate over the raw logs and unpacked data for InitiatedAuctionValidatorRegistration events raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator struct {
	Event *NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration represents a InitiatedAuctionValidatorRegistration event raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration struct {
	ValidationID     [32]byte
	OwnerAddress     common.Address
	ValidatorEndTime *big.Int
	Weight           uint64
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterInitiatedAuctionValidatorRegistration is a free log retrieval operation binding the contract event 0x032100a60b84cf31291641706872970585d53fa5be412562041fbf66a99ce285.
//
// Solidity: event InitiatedAuctionValidatorRegistration(bytes32 indexed validationID, address indexed ownerAddress, uint256 validatorEndTime, uint64 weight)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) FilterInitiatedAuctionValidatorRegistration(opts *bind.FilterOpts, validationID [][32]byte, ownerAddress []common.Address) (*NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}
	var ownerAddressRule []interface{}
	for _, ownerAddressItem := range ownerAddress {
		ownerAddressRule = append(ownerAddressRule, ownerAddressItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.FilterLogs(opts, "InitiatedAuctionValidatorRegistration", validationIDRule, ownerAddressRule)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator{contract: _NativeTokenSlotAuctionManager.contract, event: "InitiatedAuctionValidatorRegistration", logs: logs, sub: sub}, nil
}

// WatchInitiatedAuctionValidatorRegistration is a free log subscription operation binding the contract event 0x032100a60b84cf31291641706872970585d53fa5be412562041fbf66a99ce285.
//
// Solidity: event InitiatedAuctionValidatorRegistration(bytes32 indexed validationID, address indexed ownerAddress, uint256 validatorEndTime, uint64 weight)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) WatchInitiatedAuctionValidatorRegistration(opts *bind.WatchOpts, sink chan<- *NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration, validationID [][32]byte, ownerAddress []common.Address) (event.Subscription, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}
	var ownerAddressRule []interface{}
	for _, ownerAddressItem := range ownerAddress {
		ownerAddressRule = append(ownerAddressRule, ownerAddressItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.WatchLogs(opts, "InitiatedAuctionValidatorRegistration", validationIDRule, ownerAddressRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration)
				if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "InitiatedAuctionValidatorRegistration", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitiatedAuctionValidatorRegistration is a log parse operation binding the contract event 0x032100a60b84cf31291641706872970585d53fa5be412562041fbf66a99ce285.
//
// Solidity: event InitiatedAuctionValidatorRegistration(bytes32 indexed validationID, address indexed ownerAddress, uint256 validatorEndTime, uint64 weight)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) ParseInitiatedAuctionValidatorRegistration(log types.Log) (*NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration, error) {
	event := new(NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration)
	if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "InitiatedAuctionValidatorRegistration", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// NativeTokenSlotAuctionManagerNewValidatorAuctionIterator is returned from FilterNewValidatorAuction and is used to iterate over the raw logs and unpacked data for NewValidatorAuction events raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerNewValidatorAuctionIterator struct {
	Event *NativeTokenSlotAuctionManagerNewValidatorAuction // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NativeTokenSlotAuctionManagerNewValidatorAuctionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NativeTokenSlotAuctionManagerNewValidatorAuction)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NativeTokenSlotAuctionManagerNewValidatorAuction)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NativeTokenSlotAuctionManagerNewValidatorAuctionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NativeTokenSlotAuctionManagerNewValidatorAuctionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NativeTokenSlotAuctionManagerNewValidatorAuction represents a NewValidatorAuction event raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerNewValidatorAuction struct {
	ValidatorSlots       uint16
	ValidatorWeight      uint64
	MinValidatorDuration *big.Int
	AuctionEndTime       *big.Int
	MinimumBid           *big.Int
	Raw                  types.Log // Blockchain specific contextual infos
}

// FilterNewValidatorAuction is a free log retrieval operation binding the contract event 0x50e40b07b3cd91a269f83830c35b4c090f74ebd0cc06dce4db251ccc23627b54.
//
// Solidity: event NewValidatorAuction(uint16 validatorSlots, uint64 validatorWeight, uint256 minValidatorDuration, uint256 auctionEndTime, uint256 minimumBid)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) FilterNewValidatorAuction(opts *bind.FilterOpts) (*NativeTokenSlotAuctionManagerNewValidatorAuctionIterator, error) {

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.FilterLogs(opts, "NewValidatorAuction")
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerNewValidatorAuctionIterator{contract: _NativeTokenSlotAuctionManager.contract, event: "NewValidatorAuction", logs: logs, sub: sub}, nil
}

// WatchNewValidatorAuction is a free log subscription operation binding the contract event 0x50e40b07b3cd91a269f83830c35b4c090f74ebd0cc06dce4db251ccc23627b54.
//
// Solidity: event NewValidatorAuction(uint16 validatorSlots, uint64 validatorWeight, uint256 minValidatorDuration, uint256 auctionEndTime, uint256 minimumBid)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) WatchNewValidatorAuction(opts *bind.WatchOpts, sink chan<- *NativeTokenSlotAuctionManagerNewValidatorAuction) (event.Subscription, error) {

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.WatchLogs(opts, "NewValidatorAuction")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NativeTokenSlotAuctionManagerNewValidatorAuction)
				if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "NewValidatorAuction", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseNewValidatorAuction is a log parse operation binding the contract event 0x50e40b07b3cd91a269f83830c35b4c090f74ebd0cc06dce4db251ccc23627b54.
//
// Solidity: event NewValidatorAuction(uint16 validatorSlots, uint64 validatorWeight, uint256 minValidatorDuration, uint256 auctionEndTime, uint256 minimumBid)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) ParseNewValidatorAuction(log types.Log) (*NativeTokenSlotAuctionManagerNewValidatorAuction, error) {
	event := new(NativeTokenSlotAuctionManagerNewValidatorAuction)
	if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "NewValidatorAuction", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator is returned from FilterSuccessfulBidPlaced and is used to iterate over the raw logs and unpacked data for SuccessfulBidPlaced events raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator struct {
	Event *NativeTokenSlotAuctionManagerSuccessfulBidPlaced // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NativeTokenSlotAuctionManagerSuccessfulBidPlaced)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NativeTokenSlotAuctionManagerSuccessfulBidPlaced)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NativeTokenSlotAuctionManagerSuccessfulBidPlaced represents a SuccessfulBidPlaced event raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerSuccessfulBidPlaced struct {
	Bid    *big.Int
	NodeID common.Hash
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterSuccessfulBidPlaced is a free log retrieval operation binding the contract event 0x864a2110bb41c315e04bd6122b668384bca4b0d8509e55850db8347e86a95029.
//
// Solidity: event SuccessfulBidPlaced(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) FilterSuccessfulBidPlaced(opts *bind.FilterOpts, bid []*big.Int, nodeID [][]byte) (*NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator, error) {

	var bidRule []interface{}
	for _, bidItem := range bid {
		bidRule = append(bidRule, bidItem)
	}
	var nodeIDRule []interface{}
	for _, nodeIDItem := range nodeID {
		nodeIDRule = append(nodeIDRule, nodeIDItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.FilterLogs(opts, "SuccessfulBidPlaced", bidRule, nodeIDRule)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator{contract: _NativeTokenSlotAuctionManager.contract, event: "SuccessfulBidPlaced", logs: logs, sub: sub}, nil
}

// WatchSuccessfulBidPlaced is a free log subscription operation binding the contract event 0x864a2110bb41c315e04bd6122b668384bca4b0d8509e55850db8347e86a95029.
//
// Solidity: event SuccessfulBidPlaced(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) WatchSuccessfulBidPlaced(opts *bind.WatchOpts, sink chan<- *NativeTokenSlotAuctionManagerSuccessfulBidPlaced, bid []*big.Int, nodeID [][]byte) (event.Subscription, error) {

	var bidRule []interface{}
	for _, bidItem := range bid {
		bidRule = append(bidRule, bidItem)
	}
	var nodeIDRule []interface{}
	for _, nodeIDItem := range nodeID {
		nodeIDRule = append(nodeIDRule, nodeIDItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.WatchLogs(opts, "SuccessfulBidPlaced", bidRule, nodeIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NativeTokenSlotAuctionManagerSuccessfulBidPlaced)
				if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "SuccessfulBidPlaced", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSuccessfulBidPlaced is a log parse operation binding the contract event 0x864a2110bb41c315e04bd6122b668384bca4b0d8509e55850db8347e86a95029.
//
// Solidity: event SuccessfulBidPlaced(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) ParseSuccessfulBidPlaced(log types.Log) (*NativeTokenSlotAuctionManagerSuccessfulBidPlaced, error) {
	event := new(NativeTokenSlotAuctionManagerSuccessfulBidPlaced)
	if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "SuccessfulBidPlaced", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
