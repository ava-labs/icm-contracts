// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package nativetokenslotauctionmanager

import (
	"errors"
	"math/big"
	"strings"

	"github.com/ava-labs/subnet-evm/accounts/abi"
	"github.com/ava-labs/subnet-evm/accounts/abi/bind"
	"github.com/ava-labs/subnet-evm/core/types"
	"github.com/ava-labs/subnet-evm/interfaces"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = interfaces.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// PChainOwner is an auto generated low-level Go binding around an user-defined struct.
type PChainOwner struct {
	Threshold uint32
	Addresses []common.Address
}

// NativeTokenSlotAuctionManagerMetaData contains all meta data concerning the NativeTokenSlotAuctionManager contract.
var NativeTokenSlotAuctionManagerMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vmAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"validatorslots\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"minAuctionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minValidatorDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumBid\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionEndTime\",\"type\":\"uint256\"}],\"name\":\"AuctionEndTimeNotReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AuctionFinalizing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AuctionInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AuctionNotInProgress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minumumBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBid\",\"type\":\"uint256\"}],\"name\":\"BidSmallerThanMinimum\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"}],\"name\":\"DuplicateBidInContention\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"smallestAcceptableBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBid\",\"type\":\"uint256\"}],\"name\":\"InsufficientBidToWinAuction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"totalValidatorSlots\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"activeValidators\",\"type\":\"uint16\"}],\"name\":\"MoreActiveValidatorsThanTotalSlots\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"validatorSlots\",\"type\":\"uint16\"}],\"name\":\"NoOpenValidatorSlots\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"}],\"name\":\"NodeIsValidator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"}],\"name\":\"NodeIsWinning\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validationTimeLimit\",\"type\":\"uint256\"}],\"name\":\"ValidatorTimeLimitNotPassed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"validatorWeight\",\"type\":\"uint64\"}],\"name\":\"ValidatorWeightTooHigh\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"}],\"name\":\"BidEvicted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validatorEndTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"name\":\"InitiatedAuctionValidatorRegistration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"validatorSlots\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"validatorWeight\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minValidatorDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionEndTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumBid\",\"type\":\"uint256\"}],\"name\":\"NewValidatorAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"}],\"name\":\"SuccessfulBidPlaced\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MinAuctionDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MinBidRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MinValidatorDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MinimumBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_MANAGER\",\"outputs\":[{\"internalType\":\"contractIValidatorManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionState\",\"outputs\":[{\"internalType\":\"enumAuctionState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctioningValidatorSlots\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"}],\"name\":\"bidderInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPublicKey\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"structPChainOwner\",\"name\":\"remainingBalanceOwner\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"structPChainOwner\",\"name\":\"disableOwner\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"messageIndex\",\"type\":\"uint32\"}],\"name\":\"completeRemoveInitialValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"messageIndex\",\"type\":\"uint32\"}],\"name\":\"completeValidatorRegistration\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"messageIndex\",\"type\":\"uint32\"}],\"name\":\"completeValidatorRemoval\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"}],\"name\":\"initiateRemoveInitialValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"}],\"name\":\"initiateValidatorRemoval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openValidatorSlots\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPublicKey\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"structPChainOwner\",\"name\":\"remainingBalanceOwner\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"structPChainOwner\",\"name\":\"disableOwner\",\"type\":\"tuple\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newValidatorSlots\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"newWeight\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"newMinAuctionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMinValidatorDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMinimumBid\",\"type\":\"uint256\"}],\"name\":\"resetSlotAuctionSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValidatorSlots\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatorWeight\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561000f575f80fd5b506040516127f23803806127f283398101604081905261002e916100a5565b5f80546001600160a81b0319166001600160a01b0388161790556002805465ffff0000ffff191661ffff87169081176401000000009190910217600160301b600160701b03191666010000000000006001600160401b03871602179055600483905560038290556005819055505050505050610126565b5f805f805f8060c087890312156100ba575f80fd5b86516001600160a01b03811681146100d0575f80fd5b602088015190965061ffff811681146100e7575f80fd5b60408801519095506001600160401b0381168114610103575f80fd5b80945050606087015192506080870151915060a087015190509295509295509295565b6126bf806101335f395ff3fe608060405260043610610125575f3560e01c8063950374a3116100a8578063ae9483e01161006d578063ae9483e014610329578063b6e6a2ca1461035f578063c7d546f21461037e578063ef72fb8814610391578063f556f60a146103b1578063fe67a54b146103c6575f80fd5b8063950374a3146102985780639681d940146102b75780639d507e77146102d6578063a3a65e48146102eb578063a476f6751461030a575f80fd5b80634b449cba116100ee5780634b449cba1461020c5780635561f9df1461022f5780636fe4d1e1146102435780637fb4509914610258578063913ed0b114610284575f80fd5b8062d841f81461012957806305af82561461016c578063090d7db61461018d5780630d5daf3b146101c1578063182dd381146101f2575b5f80fd5b348015610134575f80fd5b5060025461014f90600160301b90046001600160401b031681565b6040516001600160401b0390911681526020015b60405180910390f35b348015610177575f80fd5b5061018b610186366004611e99565b6103da565b005b348015610198575f80fd5b506002546101ae90600160201b900461ffff1681565b60405161ffff9091168152602001610163565b3480156101cc575f80fd5b506101e06101db366004611eb2565b61044e565b60405161016396959493929190611f7c565b3480156101fd575f80fd5b506002546101ae9061ffff1681565b348015610217575f80fd5b5061022160015481565b604051908152602001610163565b34801561023a575f80fd5b5061018b610683565b34801561024e575f80fd5b5061022160035481565b348015610263575f80fd5b505f5461027790600160a01b900460ff1681565b6040516101639190611ffd565b34801561028f575f80fd5b5061022161099d565b3480156102a3575f80fd5b5061018b6102b2366004612037565b610a11565b3480156102c2575f80fd5b506102216102d1366004611e99565b610bae565b3480156102e1575f80fd5b5061022160045481565b3480156102f6575f80fd5b50610221610305366004611e99565b610c26565b348015610315575f80fd5b5061018b610324366004611eb2565b610c5c565b348015610334575f80fd5b505f54610347906001600160a01b031681565b6040516001600160a01b039091168152602001610163565b34801561036a575f80fd5b5061018b610379366004611eb2565b610cb8565b61018b61038c366004612235565b610e40565b34801561039c575f80fd5b506002546101ae9062010000900461ffff1681565b3480156103bc575f80fd5b5061022160055481565b3480156103d1575f80fd5b5061018b610e84565b5f5460405163025a076560e61b815263ffffffff831660048201526001600160a01b0390911690639681d940906024016020604051808303815f875af1158015610426573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061044a91906122da565b5050565b60096020525f90815260409020805460018201546002830180546001600160a01b0390931693919261047f906122f1565b80601f01602080910402602001604051908101604052809291908181526020018280546104ab906122f1565b80156104f65780601f106104cd576101008083540402835291602001916104f6565b820191905f5260205f20905b8154815290600101906020018083116104d957829003601f168201915b50505050509080600301805461050b906122f1565b80601f0160208091040260200160405190810160405280929190818152602001828054610537906122f1565b80156105825780601f1061055957610100808354040283529160200191610582565b820191905f5260205f20905b81548152906001019060200180831161056557829003601f168201915b505060408051808201825260048701805463ffffffff1682526005880180548451602082810282018101909652818152989998939750919550838701945091928301828280156105f957602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116105db575b50505091909252505060408051808201825260068501805463ffffffff1682526007860180548451602082810282018101909652818152969796939550919380860193929083018282801561067557602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610657575b505050505081525050905086565b60015f54600160a01b900460ff1660028111156106a2576106a2611fe9565b036106c057604051639bbb1f3b60e01b815260040160405180910390fd5b60025f54600160a01b900460ff1660028111156106df576106df611fe9565b036106fd57604051631f86de2560e21b815260040160405180910390fd5b5f805460ff60a01b1916600160a01b17905560045461071c904261233d565b6001555f600a819055600254600160201b900461ffff169003610767576002546040516379c2afbd60e11b8152600160201b90910461ffff1660048201526024015b60405180910390fd5b5f600260069054906101000a90046001600160401b03165f8054906101000a90046001600160a01b03166001600160a01b031663bb0b19386040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107cc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107f09190612350565b5f8054906101000a90046001600160a01b03166001600160a01b031663c00a8aec6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561083e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610862919061236b565b60ff1661086f919061238b565b61087991906123b6565b61088490606461238b565b9050806001600160401b03165f036108c457600254604051632bfe056160e01b8152600160301b9091046001600160401b0316600482015260240161075e565b600254600160201b900461ffff166001600160401b038216111561090757600280546201000061ffff600160201b8304160263ffff000019909116179055610920565b6002805463ffff000019166201000061ffff8416021790555b61092b600b5f611db5565b6002546003546001546005546040805162010000860461ffff168152600160301b9095046001600160401b03166020860152840192909252606083015260808201527f50e40b07b3cd91a269f83830c35b4c090f74ebd0cc06dce4db251ccc23627b549060a00160405180910390a150565b5f60015f54600160a01b900460ff1660028111156109bd576109bd611fe9565b146109da576040516232f00d60e71b815260040160405180910390fd5b60025461ffff166109ea600b5490565b10156109f7575060055490565b610a01600b61150e565b610a0c90600161233d565b905090565b60015f54600160a01b900460ff166002811115610a3057610a30611fe9565b03610a4e57604051639bbb1f3b60e01b815260040160405180910390fd5b60025f54600160a01b900460ff166002811115610a6d57610a6d611fe9565b03610a8b57604051631f86de2560e21b815260040160405180910390fd5b60025461ffff9081169086161115610b0657600254610aae9061ffff16866123e7565b60028054600490610acb908490600160201b900461ffff16612409565b92506101000a81548161ffff021916908361ffff1602179055508460025f6101000a81548161ffff021916908361ffff160217905550610b71565b60025461ffff80871691610b2491600160201b8204811691166123e7565b61ffff161115610b71576002548590610b4a9061ffff600160201b8204811691166123e7565b60405163942cc62360e01b815261ffff92831660048201529116602482015260440161075e565b600492909255600355600555600280546001600160401b03909216600160301b026dffffffffffffffff0000000000001990921691909117905550565b5f805460405163025a076560e61b815263ffffffff841660048201526001600160a01b0390911690639681d940906024015b6020604051808303815f875af1158015610bfc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c2091906122da565b92915050565b5f8054604051631474cbc960e31b815263ffffffff841660048201526001600160a01b039091169063a3a65e4890602401610be0565b5f54604051635b73516560e11b8152600481018390526001600160a01b039091169063b6e6a2ca906024015b5f604051808303815f87803b158015610c9f575f80fd5b505af1158015610cb1573d5f803e3d5ffd5b5050505050565b5f81815260086020526040902060010154421015610cff575f8181526008602052604090819020600101549051631a936b7b60e11b8152600481019190915260240161075e565b600760085f8381526020019081526020015f20600201604051610d229190612424565b90815260405190819003602001902080546001600160a01b03191681555f60018201819055610d546002830182611dd3565b610d61600383015f611dd3565b505f600482018190556005909101805467ffffffffffffffff1916905581815260086020526040812080546001600160a01b03191681556001810182905590610dad6002830182611dd3565b610dba600383015f611dd3565b505f6004828101919091556005909101805467ffffffffffffffff1916905560028054600160201b900461ffff1691610df283612496565b825461ffff9182166101009390930a9283029190920219909116179055505f54604051635b73516560e11b8152600481018390526001600160a01b039091169063b6e6a2ca90602401610c88565b610e48611533565b610e55348585858561157d565b610e7e60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b50505050565b610e8c611533565b60015f54600160a01b900460ff166002811115610eab57610eab611fe9565b14610ec8576040516232f00d60e71b815260040160405180910390fd5b5f805460ff60a01b1916600160a11b1790556001544211610f0257600154604051638230260760e01b815260040161075e91815260200190565b5f600155600a54158015610f175750600b5415155b15610f2a57610f26600b61150e565b600a555b5f610f34600b5490565b11156114ca575f610f45600b611a2a565b5f818152600960209081526040808320815160c08101835281546001600160a01b0316815260018201549381019390935260028101805495965093949293909291840191610f92906122f1565b80601f0160208091040260200160405190810160405280929190818152602001828054610fbe906122f1565b80156110095780601f10610fe057610100808354040283529160200191611009565b820191905f5260205f20905b815481529060010190602001808311610fec57829003601f168201915b50505050508152602001600382018054611022906122f1565b80601f016020809104026020016040519081016040528092919081815260200182805461104e906122f1565b80156110995780601f1061107057610100808354040283529160200191611099565b820191905f5260205f20905b81548152906001019060200180831161107c57829003601f168201915b505050918352505060408051808201825260048401805463ffffffff16825260058501805484516020828102820181019096528181529585019593949293858401939092919083018282801561111657602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116110f8575b50505091909252505050815260408051808201825260068401805463ffffffff16825260078501805484516020828102820181019096528181529585019593949293858401939092919083018282801561119757602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311611179575b505050919092525050509052508051600a549192506111bf916111ba90856124b6565b611a37565b5f80546040838101516060850151608086015160a08701516002549451634e5bb12760e11b81526001600160a01b0390961695639cb7624e9561121a9594939291600160301b9091046001600160401b0316906004016124c9565b6020604051808303815f875af1158015611236573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061125a91906122da565b9050815f01516001600160a01b0316817f032100a60b84cf31291641706872970585d53fa5be412562041fbf66a99ce28560015460035461129b919061233d565b60025460408051928352600160301b9091046001600160401b031660208301520160405180910390a36040518060c00160405280835f01516001600160a01b031681526020016001546003546112f1919061233d565b8152604084810180516020840152606080870151838501528301859052600254600160301b90046001600160401b03166080909301929092529051905160079161133a91612531565b9081526040805160209281900383019020835181546001600160a01b0319166001600160a01b0390911617815591830151600183015582015160028201906113829082612590565b50606082015160038201906113979082612590565b506080820151600482015560a0909101516005909101805467ffffffffffffffff19166001600160401b039092169190911790556040805160c0810190915282516001600160a01b0316815260015460035460208301916113f79161233d565b815260408481015160208084019190915260608087015183850152830185905260028054600160301b90046001600160401b03166080909401939093525f85815260088252829020845181546001600160a01b0319166001600160a01b039091161781559084015160018201559083015190918201906114779082612590565b506060820151600382019061148c9082612590565b506080820151600482015560a0909101516005909101805467ffffffffffffffff19166001600160401b039092169190911790555050600a55610f2a565b6002805463ffff0000191690555f805460ff60a01b1916905561150c60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b565b5f815f015f815481106115235761152361264f565b905f5260205f2001549050919050565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0080546001190161157757604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b60015f54600160a01b900460ff16600281111561159c5761159c611fe9565b146115b9576040516232f00d60e71b815260040160405180910390fd5b5f5460405163d47a948b60e01b81526001600160a01b039091169063d47a948b906115e8908790600401612663565b602060405180830381865afa158015611603573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061162791906122da565b15611647578360405163f3c815f760e01b815260040161075e9190612663565b6006846040516116579190612531565b9081526040519081900360200190205460ff161561168a578360405163f3c1d91160e01b815260040161075e9190612663565b5f858152600960205260409020546001600160a01b0316156116c257604051630517e2e760e21b81526004810186905260240161075e565b8460055411156116f3576005546040516301a0013b60e61b815260048101919091526024810186905260440161075e565b60025461ffff620100009091041661170a600b5490565b10156117205761171b600b86611a4a565b6118ad565b8461172b600b61150e565b1015611874575f61173d600b87611a57565b600a8190555f8181526009602052604090819020905191925061176591600290910190612424565b6040519081900381209082907fdbb7ff16cd6e3cc5c7aca1a615bf0d56f746d9f5708e12d52ebe243518b536cc905f90a35f818152600960205260409020546117b7906001600160a01b031682611a37565b600660095f8381526020019081526020015f206002016040516117da9190612424565b9081526040805160209281900383019020805460ff191690555f8381526009909252812080546001600160a01b031916815560018101829055906118216002830182611dd3565b61182e600383015f611dd3565b60048201805463ffffffff191681555f61184b6005850182611db5565b505060068201805463ffffffff191681555f61186a6007850182611db5565b50505050506118ad565b61187e600b61150e565b61188990600161233d565b604051631a79674760e11b815260048101919091526024810186905260440161075e565b6040805160c0810182523381526020808201888152828401888152606084018890526080840187905260a084018690525f8a8152600990935293909120825181546001600160a01b0319166001600160a01b0390911617815590516001820155915190919060028201906119219082612590565b50606082015160038201906119369082612590565b506080820151805160048301805463ffffffff191663ffffffff90921691909117815560208083015180516119719260058701920190611e0a565b50505060a0820151805160068301805463ffffffff191663ffffffff90921691909117815560208083015180516119ae9260078701920190611e0a565b50505090505060016006856040516119c69190612531565b908152604051908190036020018120805492151560ff19909316929092179091556119f2908590612531565b6040519081900381209086907f864a2110bb41c315e04bd6122b668384bca4b0d8509e55850db8347e86a95029905f90a35050505050565b5f610c2082611a6c611a70565b61044a6001600160a01b03831682611b01565b61044a8282611a6c611ba0565b5f611a658383611a6c611bcb565b9392505050565b1190565b5f80611a7a845490565b9050805f03611a8d57611a8d6031611c18565b5f611a988582611c29565b5490505f611aa9865f198501611c29565b548654909150869080611abe57611abe612675565b600190038181905f5260205f20015f9055905580611ae75f885f01611c2990919063ffffffff16565b55611af8865f1985015f8489611c50565b50949350505050565b80471015611b2b5760405163cf47918160e01b81524760048201526024810182905260440161075e565b5f826001600160a01b0316826040515f6040518083038185875af1925050503d805f8114611b74576040519150601f19603f3d011682016040523d82523d5f602084013e611b79565b606091505b5050905080611b9b5760405163d6bda27560e01b815260040160405180910390fd5b505050565b5f611ba9845490565b84546001810186555f86815260209020018490559050610e7e84828585611d45565b5f80611bd5855490565b9050805f03611be857611be86031611c18565b5f611bf38682611c29565b54905084611c01875f611c29565b55611c0f86835f8888611c50565b95945050505050565b634e487b715f52806020526024601cfd5b5f82611c48611c4584611c41845f9081526020902090565b0190565b90565b949350505050565b6001600160ff1b03831015610cb157600283810260018101910185811015611cf9575f611c7d8884611c29565b5490505f611c8b8984611c29565b549050611c9c828763ffffffff8816565b80611cb05750611cb081878763ffffffff16565b15611cf2575f611cd68585611cc986868b63ffffffff16565b1515918118919091021890565b9050611ce38a8983611d8d565b611cf08a8a838a8a611c50565b505b5050611d3c565b85821015611d3c575f611d0c8884611c29565b549050611d1d818663ffffffff8716565b15611d3a57611d2d888785611d8d565b611d3a8888858888611c50565b505b50505050505050565b8215610e7e5760025f198401045f611d5d8683611c29565b549050611d6e818563ffffffff8616565b15611d7a575050610e7e565b611d85868684611d8d565b509250611d45565b5f611d988484611c29565b90505f611da58584611c29565b8054835490915590915550505050565b5080545f8255905f5260205f2090810190611dd09190611e6d565b50565b508054611ddf906122f1565b5f825580601f10611dee575050565b601f0160209004905f5260205f2090810190611dd09190611e6d565b828054828255905f5260205f20908101928215611e5d579160200282015b82811115611e5d57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611e28565b50611e69929150611e6d565b5090565b5b80821115611e69575f8155600101611e6e565b803563ffffffff81168114611e94575f80fd5b919050565b5f60208284031215611ea9575f80fd5b611a6582611e81565b5f60208284031215611ec2575f80fd5b5035919050565b5f5b83811015611ee3578181015183820152602001611ecb565b50505f910152565b5f8151808452611f02816020860160208601611ec9565b601f01601f19169290920160200192915050565b5f6040830163ffffffff8351168452602080840151604060208701528281518085526060880191506020830194505f92505b80831015611f715784516001600160a01b03168252938301936001929092019190830190611f48565b509695505050505050565b60018060a01b038716815285602082015260c060408201525f611fa260c0830187611eeb565b8281036060840152611fb48187611eeb565b90508281036080840152611fc88186611f16565b905082810360a0840152611fdc8185611f16565b9998505050505050505050565b634e487b7160e01b5f52602160045260245ffd5b602081016003831061201d57634e487b7160e01b5f52602160045260245ffd5b91905290565b6001600160401b0381168114611dd0575f80fd5b5f805f805f60a0868803121561204b575f80fd5b853561ffff8116811461205c575f80fd5b9450602086013561206c81612023565b94979496505050506040830135926060810135926080909101359150565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b03811182821017156120c0576120c061208a565b60405290565b604051601f8201601f191681016001600160401b03811182821017156120ee576120ee61208a565b604052919050565b5f82601f830112612105575f80fd5b81356001600160401b0381111561211e5761211e61208a565b612131601f8201601f19166020016120c6565b818152846020838601011115612145575f80fd5b816020850160208301375f918101602001919091529392505050565b5f60408284031215612171575f80fd5b61217961209e565b905061218482611e81565b81526020808301356001600160401b03808211156121a0575f80fd5b818501915085601f8301126121b3575f80fd5b8135818111156121c5576121c561208a565b8060051b91506121d68483016120c6565b81815291830184019184810190888411156121ef575f80fd5b938501935b8385101561222457843592506001600160a01b0383168314612214575f80fd5b82825293850193908501906121f4565b808688015250505050505092915050565b5f805f8060808587031215612248575f80fd5b84356001600160401b038082111561225e575f80fd5b61226a888389016120f6565b9550602087013591508082111561227f575f80fd5b61228b888389016120f6565b945060408701359150808211156122a0575f80fd5b6122ac88838901612161565b935060608701359150808211156122c1575f80fd5b506122ce87828801612161565b91505092959194509250565b5f602082840312156122ea575f80fd5b5051919050565b600181811c9082168061230557607f821691505b60208210810361232357634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610c2057610c20612329565b5f60208284031215612360575f80fd5b8151611a6581612023565b5f6020828403121561237b575f80fd5b815160ff81168114611a65575f80fd5b6001600160401b038181168382160280821691908281146123ae576123ae612329565b505092915050565b5f6001600160401b03808416806123db57634e487b7160e01b5f52601260045260245ffd5b92169190910492915050565b61ffff82811682821603908082111561240257612402612329565b5092915050565b61ffff81811683821601908082111561240257612402612329565b5f808354612431816122f1565b60018281168015612449576001811461245e5761248a565b60ff198416875282151583028701945061248a565b875f526020805f205f5b858110156124815781548a820152908401908201612468565b50505082870194505b50929695505050505050565b5f61ffff8083168181036124ac576124ac612329565b6001019392505050565b81810381811115610c2057610c20612329565b60a081525f6124db60a0830188611eeb565b82810360208401526124ed8188611eeb565b905082810360408401526125018187611f16565b905082810360608401526125158186611f16565b9150506001600160401b03831660808301529695505050505050565b5f8251612542818460208701611ec9565b9190910192915050565b601f821115611b9b57805f5260205f20601f840160051c810160208510156125715750805b601f840160051c820191505b81811015610cb1575f815560010161257d565b81516001600160401b038111156125a9576125a961208a565b6125bd816125b784546122f1565b8461254c565b602080601f8311600181146125f0575f84156125d95750858301515b5f19600386901b1c1916600185901b178555612647565b5f85815260208120601f198616915b8281101561261e578886015182559484019460019091019084016125ff565b508582101561263b57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52603260045260245ffd5b602081525f611a656020830184611eeb565b634e487b7160e01b5f52603160045260245ffdfea264697066735822122018b1d5006b4d119b3fc8e3a363e655bf98278df5117dd6da3c8e7355d9d255ad64736f6c63430008190033",
}

// NativeTokenSlotAuctionManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use NativeTokenSlotAuctionManagerMetaData.ABI instead.
var NativeTokenSlotAuctionManagerABI = NativeTokenSlotAuctionManagerMetaData.ABI

// NativeTokenSlotAuctionManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use NativeTokenSlotAuctionManagerMetaData.Bin instead.
var NativeTokenSlotAuctionManagerBin = NativeTokenSlotAuctionManagerMetaData.Bin

// DeployNativeTokenSlotAuctionManager deploys a new Ethereum contract, binding an instance of NativeTokenSlotAuctionManager to it.
func DeployNativeTokenSlotAuctionManager(auth *bind.TransactOpts, backend bind.ContractBackend, vmAddress common.Address, validatorslots uint16, weight uint64, minAuctionDuration *big.Int, minValidatorDuration *big.Int, minimumBid *big.Int) (common.Address, *types.Transaction, *NativeTokenSlotAuctionManager, error) {
	parsed, err := NativeTokenSlotAuctionManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(NativeTokenSlotAuctionManagerBin), backend, vmAddress, validatorslots, weight, minAuctionDuration, minValidatorDuration, minimumBid)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &NativeTokenSlotAuctionManager{NativeTokenSlotAuctionManagerCaller: NativeTokenSlotAuctionManagerCaller{contract: contract}, NativeTokenSlotAuctionManagerTransactor: NativeTokenSlotAuctionManagerTransactor{contract: contract}, NativeTokenSlotAuctionManagerFilterer: NativeTokenSlotAuctionManagerFilterer{contract: contract}}, nil
}

// NativeTokenSlotAuctionManager is an auto generated Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManager struct {
	NativeTokenSlotAuctionManagerCaller     // Read-only binding to the contract
	NativeTokenSlotAuctionManagerTransactor // Write-only binding to the contract
	NativeTokenSlotAuctionManagerFilterer   // Log filterer for contract events
}

// NativeTokenSlotAuctionManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NativeTokenSlotAuctionManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NativeTokenSlotAuctionManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type NativeTokenSlotAuctionManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NativeTokenSlotAuctionManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type NativeTokenSlotAuctionManagerSession struct {
	Contract     *NativeTokenSlotAuctionManager // Generic contract binding to set the session for
	CallOpts     bind.CallOpts                  // Call options to use throughout this session
	TransactOpts bind.TransactOpts              // Transaction auth options to use throughout this session
}

// NativeTokenSlotAuctionManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type NativeTokenSlotAuctionManagerCallerSession struct {
	Contract *NativeTokenSlotAuctionManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                        // Call options to use throughout this session
}

// NativeTokenSlotAuctionManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type NativeTokenSlotAuctionManagerTransactorSession struct {
	Contract     *NativeTokenSlotAuctionManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                        // Transaction auth options to use throughout this session
}

// NativeTokenSlotAuctionManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManagerRaw struct {
	Contract *NativeTokenSlotAuctionManager // Generic contract binding to access the raw methods on
}

// NativeTokenSlotAuctionManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManagerCallerRaw struct {
	Contract *NativeTokenSlotAuctionManagerCaller // Generic read-only contract binding to access the raw methods on
}

// NativeTokenSlotAuctionManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type NativeTokenSlotAuctionManagerTransactorRaw struct {
	Contract *NativeTokenSlotAuctionManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewNativeTokenSlotAuctionManager creates a new instance of NativeTokenSlotAuctionManager, bound to a specific deployed contract.
func NewNativeTokenSlotAuctionManager(address common.Address, backend bind.ContractBackend) (*NativeTokenSlotAuctionManager, error) {
	contract, err := bindNativeTokenSlotAuctionManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManager{NativeTokenSlotAuctionManagerCaller: NativeTokenSlotAuctionManagerCaller{contract: contract}, NativeTokenSlotAuctionManagerTransactor: NativeTokenSlotAuctionManagerTransactor{contract: contract}, NativeTokenSlotAuctionManagerFilterer: NativeTokenSlotAuctionManagerFilterer{contract: contract}}, nil
}

// NewNativeTokenSlotAuctionManagerCaller creates a new read-only instance of NativeTokenSlotAuctionManager, bound to a specific deployed contract.
func NewNativeTokenSlotAuctionManagerCaller(address common.Address, caller bind.ContractCaller) (*NativeTokenSlotAuctionManagerCaller, error) {
	contract, err := bindNativeTokenSlotAuctionManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerCaller{contract: contract}, nil
}

// NewNativeTokenSlotAuctionManagerTransactor creates a new write-only instance of NativeTokenSlotAuctionManager, bound to a specific deployed contract.
func NewNativeTokenSlotAuctionManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*NativeTokenSlotAuctionManagerTransactor, error) {
	contract, err := bindNativeTokenSlotAuctionManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerTransactor{contract: contract}, nil
}

// NewNativeTokenSlotAuctionManagerFilterer creates a new log filterer instance of NativeTokenSlotAuctionManager, bound to a specific deployed contract.
func NewNativeTokenSlotAuctionManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*NativeTokenSlotAuctionManagerFilterer, error) {
	contract, err := bindNativeTokenSlotAuctionManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerFilterer{contract: contract}, nil
}

// bindNativeTokenSlotAuctionManager binds a generic wrapper to an already deployed contract.
func bindNativeTokenSlotAuctionManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := NativeTokenSlotAuctionManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _NativeTokenSlotAuctionManager.Contract.NativeTokenSlotAuctionManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.NativeTokenSlotAuctionManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.NativeTokenSlotAuctionManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _NativeTokenSlotAuctionManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.contract.Transact(opts, method, params...)
}

// MinAuctionDuration is a free data retrieval call binding the contract method 0x9d507e77.
//
// Solidity: function MinAuctionDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) MinAuctionDuration(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "MinAuctionDuration")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MinAuctionDuration is a free data retrieval call binding the contract method 0x9d507e77.
//
// Solidity: function MinAuctionDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) MinAuctionDuration() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinAuctionDuration(&_NativeTokenSlotAuctionManager.CallOpts)
}

// MinAuctionDuration is a free data retrieval call binding the contract method 0x9d507e77.
//
// Solidity: function MinAuctionDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) MinAuctionDuration() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinAuctionDuration(&_NativeTokenSlotAuctionManager.CallOpts)
}

// MinBidRequired is a free data retrieval call binding the contract method 0x913ed0b1.
//
// Solidity: function MinBidRequired() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) MinBidRequired(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "MinBidRequired")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MinBidRequired is a free data retrieval call binding the contract method 0x913ed0b1.
//
// Solidity: function MinBidRequired() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) MinBidRequired() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinBidRequired(&_NativeTokenSlotAuctionManager.CallOpts)
}

// MinBidRequired is a free data retrieval call binding the contract method 0x913ed0b1.
//
// Solidity: function MinBidRequired() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) MinBidRequired() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinBidRequired(&_NativeTokenSlotAuctionManager.CallOpts)
}

// MinValidatorDuration is a free data retrieval call binding the contract method 0x6fe4d1e1.
//
// Solidity: function MinValidatorDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) MinValidatorDuration(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "MinValidatorDuration")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MinValidatorDuration is a free data retrieval call binding the contract method 0x6fe4d1e1.
//
// Solidity: function MinValidatorDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) MinValidatorDuration() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinValidatorDuration(&_NativeTokenSlotAuctionManager.CallOpts)
}

// MinValidatorDuration is a free data retrieval call binding the contract method 0x6fe4d1e1.
//
// Solidity: function MinValidatorDuration() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) MinValidatorDuration() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinValidatorDuration(&_NativeTokenSlotAuctionManager.CallOpts)
}

// MinimumBid is a free data retrieval call binding the contract method 0xf556f60a.
//
// Solidity: function MinimumBid() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) MinimumBid(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "MinimumBid")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MinimumBid is a free data retrieval call binding the contract method 0xf556f60a.
//
// Solidity: function MinimumBid() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) MinimumBid() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinimumBid(&_NativeTokenSlotAuctionManager.CallOpts)
}

// MinimumBid is a free data retrieval call binding the contract method 0xf556f60a.
//
// Solidity: function MinimumBid() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) MinimumBid() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.MinimumBid(&_NativeTokenSlotAuctionManager.CallOpts)
}

// VALIDATORMANAGER is a free data retrieval call binding the contract method 0xae9483e0.
//
// Solidity: function VALIDATOR_MANAGER() view returns(address)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) VALIDATORMANAGER(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "VALIDATOR_MANAGER")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// VALIDATORMANAGER is a free data retrieval call binding the contract method 0xae9483e0.
//
// Solidity: function VALIDATOR_MANAGER() view returns(address)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) VALIDATORMANAGER() (common.Address, error) {
	return _NativeTokenSlotAuctionManager.Contract.VALIDATORMANAGER(&_NativeTokenSlotAuctionManager.CallOpts)
}

// VALIDATORMANAGER is a free data retrieval call binding the contract method 0xae9483e0.
//
// Solidity: function VALIDATOR_MANAGER() view returns(address)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) VALIDATORMANAGER() (common.Address, error) {
	return _NativeTokenSlotAuctionManager.Contract.VALIDATORMANAGER(&_NativeTokenSlotAuctionManager.CallOpts)
}

// AuctionEndTime is a free data retrieval call binding the contract method 0x4b449cba.
//
// Solidity: function auctionEndTime() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) AuctionEndTime(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "auctionEndTime")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// AuctionEndTime is a free data retrieval call binding the contract method 0x4b449cba.
//
// Solidity: function auctionEndTime() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) AuctionEndTime() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.AuctionEndTime(&_NativeTokenSlotAuctionManager.CallOpts)
}

// AuctionEndTime is a free data retrieval call binding the contract method 0x4b449cba.
//
// Solidity: function auctionEndTime() view returns(uint256)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) AuctionEndTime() (*big.Int, error) {
	return _NativeTokenSlotAuctionManager.Contract.AuctionEndTime(&_NativeTokenSlotAuctionManager.CallOpts)
}

// AuctionState is a free data retrieval call binding the contract method 0x7fb45099.
//
// Solidity: function auctionState() view returns(uint8)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) AuctionState(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "auctionState")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// AuctionState is a free data retrieval call binding the contract method 0x7fb45099.
//
// Solidity: function auctionState() view returns(uint8)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) AuctionState() (uint8, error) {
	return _NativeTokenSlotAuctionManager.Contract.AuctionState(&_NativeTokenSlotAuctionManager.CallOpts)
}

// AuctionState is a free data retrieval call binding the contract method 0x7fb45099.
//
// Solidity: function auctionState() view returns(uint8)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) AuctionState() (uint8, error) {
	return _NativeTokenSlotAuctionManager.Contract.AuctionState(&_NativeTokenSlotAuctionManager.CallOpts)
}

// AuctioningValidatorSlots is a free data retrieval call binding the contract method 0xef72fb88.
//
// Solidity: function auctioningValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) AuctioningValidatorSlots(opts *bind.CallOpts) (uint16, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "auctioningValidatorSlots")

	if err != nil {
		return *new(uint16), err
	}

	out0 := *abi.ConvertType(out[0], new(uint16)).(*uint16)

	return out0, err

}

// AuctioningValidatorSlots is a free data retrieval call binding the contract method 0xef72fb88.
//
// Solidity: function auctioningValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) AuctioningValidatorSlots() (uint16, error) {
	return _NativeTokenSlotAuctionManager.Contract.AuctioningValidatorSlots(&_NativeTokenSlotAuctionManager.CallOpts)
}

// AuctioningValidatorSlots is a free data retrieval call binding the contract method 0xef72fb88.
//
// Solidity: function auctioningValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) AuctioningValidatorSlots() (uint16, error) {
	return _NativeTokenSlotAuctionManager.Contract.AuctioningValidatorSlots(&_NativeTokenSlotAuctionManager.CallOpts)
}

// BidderInfo is a free data retrieval call binding the contract method 0x0d5daf3b.
//
// Solidity: function bidderInfo(uint256 bid) view returns(address addr, uint256 bid, bytes nodeID, bytes blsPublicKey, (uint32,address[]) remainingBalanceOwner, (uint32,address[]) disableOwner)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) BidderInfo(opts *bind.CallOpts, bid *big.Int) (struct {
	Addr                  common.Address
	Bid                   *big.Int
	NodeID                []byte
	BlsPublicKey          []byte
	RemainingBalanceOwner PChainOwner
	DisableOwner          PChainOwner
}, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "bidderInfo", bid)

	outstruct := new(struct {
		Addr                  common.Address
		Bid                   *big.Int
		NodeID                []byte
		BlsPublicKey          []byte
		RemainingBalanceOwner PChainOwner
		DisableOwner          PChainOwner
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Addr = *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	outstruct.Bid = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.NodeID = *abi.ConvertType(out[2], new([]byte)).(*[]byte)
	outstruct.BlsPublicKey = *abi.ConvertType(out[3], new([]byte)).(*[]byte)
	outstruct.RemainingBalanceOwner = *abi.ConvertType(out[4], new(PChainOwner)).(*PChainOwner)
	outstruct.DisableOwner = *abi.ConvertType(out[5], new(PChainOwner)).(*PChainOwner)

	return *outstruct, err

}

// BidderInfo is a free data retrieval call binding the contract method 0x0d5daf3b.
//
// Solidity: function bidderInfo(uint256 bid) view returns(address addr, uint256 bid, bytes nodeID, bytes blsPublicKey, (uint32,address[]) remainingBalanceOwner, (uint32,address[]) disableOwner)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) BidderInfo(bid *big.Int) (struct {
	Addr                  common.Address
	Bid                   *big.Int
	NodeID                []byte
	BlsPublicKey          []byte
	RemainingBalanceOwner PChainOwner
	DisableOwner          PChainOwner
}, error) {
	return _NativeTokenSlotAuctionManager.Contract.BidderInfo(&_NativeTokenSlotAuctionManager.CallOpts, bid)
}

// BidderInfo is a free data retrieval call binding the contract method 0x0d5daf3b.
//
// Solidity: function bidderInfo(uint256 bid) view returns(address addr, uint256 bid, bytes nodeID, bytes blsPublicKey, (uint32,address[]) remainingBalanceOwner, (uint32,address[]) disableOwner)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) BidderInfo(bid *big.Int) (struct {
	Addr                  common.Address
	Bid                   *big.Int
	NodeID                []byte
	BlsPublicKey          []byte
	RemainingBalanceOwner PChainOwner
	DisableOwner          PChainOwner
}, error) {
	return _NativeTokenSlotAuctionManager.Contract.BidderInfo(&_NativeTokenSlotAuctionManager.CallOpts, bid)
}

// OpenValidatorSlots is a free data retrieval call binding the contract method 0x090d7db6.
//
// Solidity: function openValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) OpenValidatorSlots(opts *bind.CallOpts) (uint16, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "openValidatorSlots")

	if err != nil {
		return *new(uint16), err
	}

	out0 := *abi.ConvertType(out[0], new(uint16)).(*uint16)

	return out0, err

}

// OpenValidatorSlots is a free data retrieval call binding the contract method 0x090d7db6.
//
// Solidity: function openValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) OpenValidatorSlots() (uint16, error) {
	return _NativeTokenSlotAuctionManager.Contract.OpenValidatorSlots(&_NativeTokenSlotAuctionManager.CallOpts)
}

// OpenValidatorSlots is a free data retrieval call binding the contract method 0x090d7db6.
//
// Solidity: function openValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) OpenValidatorSlots() (uint16, error) {
	return _NativeTokenSlotAuctionManager.Contract.OpenValidatorSlots(&_NativeTokenSlotAuctionManager.CallOpts)
}

// TotalValidatorSlots is a free data retrieval call binding the contract method 0x182dd381.
//
// Solidity: function totalValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) TotalValidatorSlots(opts *bind.CallOpts) (uint16, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "totalValidatorSlots")

	if err != nil {
		return *new(uint16), err
	}

	out0 := *abi.ConvertType(out[0], new(uint16)).(*uint16)

	return out0, err

}

// TotalValidatorSlots is a free data retrieval call binding the contract method 0x182dd381.
//
// Solidity: function totalValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) TotalValidatorSlots() (uint16, error) {
	return _NativeTokenSlotAuctionManager.Contract.TotalValidatorSlots(&_NativeTokenSlotAuctionManager.CallOpts)
}

// TotalValidatorSlots is a free data retrieval call binding the contract method 0x182dd381.
//
// Solidity: function totalValidatorSlots() view returns(uint16)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) TotalValidatorSlots() (uint16, error) {
	return _NativeTokenSlotAuctionManager.Contract.TotalValidatorSlots(&_NativeTokenSlotAuctionManager.CallOpts)
}

// ValidatorWeight is a free data retrieval call binding the contract method 0x00d841f8.
//
// Solidity: function validatorWeight() view returns(uint64)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCaller) ValidatorWeight(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _NativeTokenSlotAuctionManager.contract.Call(opts, &out, "validatorWeight")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// ValidatorWeight is a free data retrieval call binding the contract method 0x00d841f8.
//
// Solidity: function validatorWeight() view returns(uint64)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) ValidatorWeight() (uint64, error) {
	return _NativeTokenSlotAuctionManager.Contract.ValidatorWeight(&_NativeTokenSlotAuctionManager.CallOpts)
}

// ValidatorWeight is a free data retrieval call binding the contract method 0x00d841f8.
//
// Solidity: function validatorWeight() view returns(uint64)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerCallerSession) ValidatorWeight() (uint64, error) {
	return _NativeTokenSlotAuctionManager.Contract.ValidatorWeight(&_NativeTokenSlotAuctionManager.CallOpts)
}

// CompleteRemoveInitialValidator is a paid mutator transaction binding the contract method 0x05af8256.
//
// Solidity: function completeRemoveInitialValidator(uint32 messageIndex) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) CompleteRemoveInitialValidator(opts *bind.TransactOpts, messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "completeRemoveInitialValidator", messageIndex)
}

// CompleteRemoveInitialValidator is a paid mutator transaction binding the contract method 0x05af8256.
//
// Solidity: function completeRemoveInitialValidator(uint32 messageIndex) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) CompleteRemoveInitialValidator(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteRemoveInitialValidator(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// CompleteRemoveInitialValidator is a paid mutator transaction binding the contract method 0x05af8256.
//
// Solidity: function completeRemoveInitialValidator(uint32 messageIndex) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) CompleteRemoveInitialValidator(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteRemoveInitialValidator(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// CompleteValidatorRegistration is a paid mutator transaction binding the contract method 0xa3a65e48.
//
// Solidity: function completeValidatorRegistration(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) CompleteValidatorRegistration(opts *bind.TransactOpts, messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "completeValidatorRegistration", messageIndex)
}

// CompleteValidatorRegistration is a paid mutator transaction binding the contract method 0xa3a65e48.
//
// Solidity: function completeValidatorRegistration(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) CompleteValidatorRegistration(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteValidatorRegistration(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// CompleteValidatorRegistration is a paid mutator transaction binding the contract method 0xa3a65e48.
//
// Solidity: function completeValidatorRegistration(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) CompleteValidatorRegistration(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteValidatorRegistration(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// CompleteValidatorRemoval is a paid mutator transaction binding the contract method 0x9681d940.
//
// Solidity: function completeValidatorRemoval(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) CompleteValidatorRemoval(opts *bind.TransactOpts, messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "completeValidatorRemoval", messageIndex)
}

// CompleteValidatorRemoval is a paid mutator transaction binding the contract method 0x9681d940.
//
// Solidity: function completeValidatorRemoval(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) CompleteValidatorRemoval(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteValidatorRemoval(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// CompleteValidatorRemoval is a paid mutator transaction binding the contract method 0x9681d940.
//
// Solidity: function completeValidatorRemoval(uint32 messageIndex) returns(bytes32)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) CompleteValidatorRemoval(messageIndex uint32) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.CompleteValidatorRemoval(&_NativeTokenSlotAuctionManager.TransactOpts, messageIndex)
}

// EndAuction is a paid mutator transaction binding the contract method 0xfe67a54b.
//
// Solidity: function endAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) EndAuction(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "endAuction")
}

// EndAuction is a paid mutator transaction binding the contract method 0xfe67a54b.
//
// Solidity: function endAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) EndAuction() (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.EndAuction(&_NativeTokenSlotAuctionManager.TransactOpts)
}

// EndAuction is a paid mutator transaction binding the contract method 0xfe67a54b.
//
// Solidity: function endAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) EndAuction() (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.EndAuction(&_NativeTokenSlotAuctionManager.TransactOpts)
}

// InitiateAuction is a paid mutator transaction binding the contract method 0x5561f9df.
//
// Solidity: function initiateAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) InitiateAuction(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "initiateAuction")
}

// InitiateAuction is a paid mutator transaction binding the contract method 0x5561f9df.
//
// Solidity: function initiateAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) InitiateAuction() (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateAuction(&_NativeTokenSlotAuctionManager.TransactOpts)
}

// InitiateAuction is a paid mutator transaction binding the contract method 0x5561f9df.
//
// Solidity: function initiateAuction() returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) InitiateAuction() (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateAuction(&_NativeTokenSlotAuctionManager.TransactOpts)
}

// InitiateRemoveInitialValidator is a paid mutator transaction binding the contract method 0xa476f675.
//
// Solidity: function initiateRemoveInitialValidator(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) InitiateRemoveInitialValidator(opts *bind.TransactOpts, validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "initiateRemoveInitialValidator", validationID)
}

// InitiateRemoveInitialValidator is a paid mutator transaction binding the contract method 0xa476f675.
//
// Solidity: function initiateRemoveInitialValidator(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) InitiateRemoveInitialValidator(validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateRemoveInitialValidator(&_NativeTokenSlotAuctionManager.TransactOpts, validationID)
}

// InitiateRemoveInitialValidator is a paid mutator transaction binding the contract method 0xa476f675.
//
// Solidity: function initiateRemoveInitialValidator(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) InitiateRemoveInitialValidator(validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateRemoveInitialValidator(&_NativeTokenSlotAuctionManager.TransactOpts, validationID)
}

// InitiateValidatorRemoval is a paid mutator transaction binding the contract method 0xb6e6a2ca.
//
// Solidity: function initiateValidatorRemoval(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) InitiateValidatorRemoval(opts *bind.TransactOpts, validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "initiateValidatorRemoval", validationID)
}

// InitiateValidatorRemoval is a paid mutator transaction binding the contract method 0xb6e6a2ca.
//
// Solidity: function initiateValidatorRemoval(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) InitiateValidatorRemoval(validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateValidatorRemoval(&_NativeTokenSlotAuctionManager.TransactOpts, validationID)
}

// InitiateValidatorRemoval is a paid mutator transaction binding the contract method 0xb6e6a2ca.
//
// Solidity: function initiateValidatorRemoval(bytes32 validationID) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) InitiateValidatorRemoval(validationID [32]byte) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.InitiateValidatorRemoval(&_NativeTokenSlotAuctionManager.TransactOpts, validationID)
}

// PlaceBid is a paid mutator transaction binding the contract method 0xc7d546f2.
//
// Solidity: function placeBid(bytes nodeID, bytes blsPublicKey, (uint32,address[]) remainingBalanceOwner, (uint32,address[]) disableOwner) payable returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) PlaceBid(opts *bind.TransactOpts, nodeID []byte, blsPublicKey []byte, remainingBalanceOwner PChainOwner, disableOwner PChainOwner) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "placeBid", nodeID, blsPublicKey, remainingBalanceOwner, disableOwner)
}

// PlaceBid is a paid mutator transaction binding the contract method 0xc7d546f2.
//
// Solidity: function placeBid(bytes nodeID, bytes blsPublicKey, (uint32,address[]) remainingBalanceOwner, (uint32,address[]) disableOwner) payable returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) PlaceBid(nodeID []byte, blsPublicKey []byte, remainingBalanceOwner PChainOwner, disableOwner PChainOwner) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.PlaceBid(&_NativeTokenSlotAuctionManager.TransactOpts, nodeID, blsPublicKey, remainingBalanceOwner, disableOwner)
}

// PlaceBid is a paid mutator transaction binding the contract method 0xc7d546f2.
//
// Solidity: function placeBid(bytes nodeID, bytes blsPublicKey, (uint32,address[]) remainingBalanceOwner, (uint32,address[]) disableOwner) payable returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) PlaceBid(nodeID []byte, blsPublicKey []byte, remainingBalanceOwner PChainOwner, disableOwner PChainOwner) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.PlaceBid(&_NativeTokenSlotAuctionManager.TransactOpts, nodeID, blsPublicKey, remainingBalanceOwner, disableOwner)
}

// ResetSlotAuctionSettings is a paid mutator transaction binding the contract method 0x950374a3.
//
// Solidity: function resetSlotAuctionSettings(uint16 newValidatorSlots, uint64 newWeight, uint256 newMinAuctionDuration, uint256 newMinValidatorDuration, uint256 newMinimumBid) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactor) ResetSlotAuctionSettings(opts *bind.TransactOpts, newValidatorSlots uint16, newWeight uint64, newMinAuctionDuration *big.Int, newMinValidatorDuration *big.Int, newMinimumBid *big.Int) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.contract.Transact(opts, "resetSlotAuctionSettings", newValidatorSlots, newWeight, newMinAuctionDuration, newMinValidatorDuration, newMinimumBid)
}

// ResetSlotAuctionSettings is a paid mutator transaction binding the contract method 0x950374a3.
//
// Solidity: function resetSlotAuctionSettings(uint16 newValidatorSlots, uint64 newWeight, uint256 newMinAuctionDuration, uint256 newMinValidatorDuration, uint256 newMinimumBid) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerSession) ResetSlotAuctionSettings(newValidatorSlots uint16, newWeight uint64, newMinAuctionDuration *big.Int, newMinValidatorDuration *big.Int, newMinimumBid *big.Int) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.ResetSlotAuctionSettings(&_NativeTokenSlotAuctionManager.TransactOpts, newValidatorSlots, newWeight, newMinAuctionDuration, newMinValidatorDuration, newMinimumBid)
}

// ResetSlotAuctionSettings is a paid mutator transaction binding the contract method 0x950374a3.
//
// Solidity: function resetSlotAuctionSettings(uint16 newValidatorSlots, uint64 newWeight, uint256 newMinAuctionDuration, uint256 newMinValidatorDuration, uint256 newMinimumBid) returns()
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerTransactorSession) ResetSlotAuctionSettings(newValidatorSlots uint16, newWeight uint64, newMinAuctionDuration *big.Int, newMinValidatorDuration *big.Int, newMinimumBid *big.Int) (*types.Transaction, error) {
	return _NativeTokenSlotAuctionManager.Contract.ResetSlotAuctionSettings(&_NativeTokenSlotAuctionManager.TransactOpts, newValidatorSlots, newWeight, newMinAuctionDuration, newMinValidatorDuration, newMinimumBid)
}

// NativeTokenSlotAuctionManagerBidEvictedIterator is returned from FilterBidEvicted and is used to iterate over the raw logs and unpacked data for BidEvicted events raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerBidEvictedIterator struct {
	Event *NativeTokenSlotAuctionManagerBidEvicted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NativeTokenSlotAuctionManagerBidEvictedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NativeTokenSlotAuctionManagerBidEvicted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NativeTokenSlotAuctionManagerBidEvicted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NativeTokenSlotAuctionManagerBidEvictedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NativeTokenSlotAuctionManagerBidEvictedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NativeTokenSlotAuctionManagerBidEvicted represents a BidEvicted event raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerBidEvicted struct {
	Bid    *big.Int
	NodeID common.Hash
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterBidEvicted is a free log retrieval operation binding the contract event 0xdbb7ff16cd6e3cc5c7aca1a615bf0d56f746d9f5708e12d52ebe243518b536cc.
//
// Solidity: event BidEvicted(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) FilterBidEvicted(opts *bind.FilterOpts, bid []*big.Int, nodeID [][]byte) (*NativeTokenSlotAuctionManagerBidEvictedIterator, error) {

	var bidRule []interface{}
	for _, bidItem := range bid {
		bidRule = append(bidRule, bidItem)
	}
	var nodeIDRule []interface{}
	for _, nodeIDItem := range nodeID {
		nodeIDRule = append(nodeIDRule, nodeIDItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.FilterLogs(opts, "BidEvicted", bidRule, nodeIDRule)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerBidEvictedIterator{contract: _NativeTokenSlotAuctionManager.contract, event: "BidEvicted", logs: logs, sub: sub}, nil
}

// WatchBidEvicted is a free log subscription operation binding the contract event 0xdbb7ff16cd6e3cc5c7aca1a615bf0d56f746d9f5708e12d52ebe243518b536cc.
//
// Solidity: event BidEvicted(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) WatchBidEvicted(opts *bind.WatchOpts, sink chan<- *NativeTokenSlotAuctionManagerBidEvicted, bid []*big.Int, nodeID [][]byte) (event.Subscription, error) {

	var bidRule []interface{}
	for _, bidItem := range bid {
		bidRule = append(bidRule, bidItem)
	}
	var nodeIDRule []interface{}
	for _, nodeIDItem := range nodeID {
		nodeIDRule = append(nodeIDRule, nodeIDItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.WatchLogs(opts, "BidEvicted", bidRule, nodeIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NativeTokenSlotAuctionManagerBidEvicted)
				if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "BidEvicted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBidEvicted is a log parse operation binding the contract event 0xdbb7ff16cd6e3cc5c7aca1a615bf0d56f746d9f5708e12d52ebe243518b536cc.
//
// Solidity: event BidEvicted(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) ParseBidEvicted(log types.Log) (*NativeTokenSlotAuctionManagerBidEvicted, error) {
	event := new(NativeTokenSlotAuctionManagerBidEvicted)
	if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "BidEvicted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// NativeTokenSlotAuctionManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerInitializedIterator struct {
	Event *NativeTokenSlotAuctionManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NativeTokenSlotAuctionManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NativeTokenSlotAuctionManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NativeTokenSlotAuctionManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NativeTokenSlotAuctionManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NativeTokenSlotAuctionManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NativeTokenSlotAuctionManagerInitialized represents a Initialized event raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerInitialized struct {
	Version uint64
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*NativeTokenSlotAuctionManagerInitializedIterator, error) {

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerInitializedIterator{contract: _NativeTokenSlotAuctionManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *NativeTokenSlotAuctionManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NativeTokenSlotAuctionManagerInitialized)
				if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) ParseInitialized(log types.Log) (*NativeTokenSlotAuctionManagerInitialized, error) {
	event := new(NativeTokenSlotAuctionManagerInitialized)
	if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator is returned from FilterInitiatedAuctionValidatorRegistration and is used to iterate over the raw logs and unpacked data for InitiatedAuctionValidatorRegistration events raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator struct {
	Event *NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration represents a InitiatedAuctionValidatorRegistration event raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration struct {
	ValidationID     [32]byte
	OwnerAddress     common.Address
	ValidatorEndTime *big.Int
	Weight           uint64
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterInitiatedAuctionValidatorRegistration is a free log retrieval operation binding the contract event 0x032100a60b84cf31291641706872970585d53fa5be412562041fbf66a99ce285.
//
// Solidity: event InitiatedAuctionValidatorRegistration(bytes32 indexed validationID, address indexed ownerAddress, uint256 validatorEndTime, uint64 weight)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) FilterInitiatedAuctionValidatorRegistration(opts *bind.FilterOpts, validationID [][32]byte, ownerAddress []common.Address) (*NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}
	var ownerAddressRule []interface{}
	for _, ownerAddressItem := range ownerAddress {
		ownerAddressRule = append(ownerAddressRule, ownerAddressItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.FilterLogs(opts, "InitiatedAuctionValidatorRegistration", validationIDRule, ownerAddressRule)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistrationIterator{contract: _NativeTokenSlotAuctionManager.contract, event: "InitiatedAuctionValidatorRegistration", logs: logs, sub: sub}, nil
}

// WatchInitiatedAuctionValidatorRegistration is a free log subscription operation binding the contract event 0x032100a60b84cf31291641706872970585d53fa5be412562041fbf66a99ce285.
//
// Solidity: event InitiatedAuctionValidatorRegistration(bytes32 indexed validationID, address indexed ownerAddress, uint256 validatorEndTime, uint64 weight)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) WatchInitiatedAuctionValidatorRegistration(opts *bind.WatchOpts, sink chan<- *NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration, validationID [][32]byte, ownerAddress []common.Address) (event.Subscription, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}
	var ownerAddressRule []interface{}
	for _, ownerAddressItem := range ownerAddress {
		ownerAddressRule = append(ownerAddressRule, ownerAddressItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.WatchLogs(opts, "InitiatedAuctionValidatorRegistration", validationIDRule, ownerAddressRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration)
				if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "InitiatedAuctionValidatorRegistration", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitiatedAuctionValidatorRegistration is a log parse operation binding the contract event 0x032100a60b84cf31291641706872970585d53fa5be412562041fbf66a99ce285.
//
// Solidity: event InitiatedAuctionValidatorRegistration(bytes32 indexed validationID, address indexed ownerAddress, uint256 validatorEndTime, uint64 weight)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) ParseInitiatedAuctionValidatorRegistration(log types.Log) (*NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration, error) {
	event := new(NativeTokenSlotAuctionManagerInitiatedAuctionValidatorRegistration)
	if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "InitiatedAuctionValidatorRegistration", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// NativeTokenSlotAuctionManagerNewValidatorAuctionIterator is returned from FilterNewValidatorAuction and is used to iterate over the raw logs and unpacked data for NewValidatorAuction events raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerNewValidatorAuctionIterator struct {
	Event *NativeTokenSlotAuctionManagerNewValidatorAuction // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NativeTokenSlotAuctionManagerNewValidatorAuctionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NativeTokenSlotAuctionManagerNewValidatorAuction)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NativeTokenSlotAuctionManagerNewValidatorAuction)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NativeTokenSlotAuctionManagerNewValidatorAuctionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NativeTokenSlotAuctionManagerNewValidatorAuctionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NativeTokenSlotAuctionManagerNewValidatorAuction represents a NewValidatorAuction event raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerNewValidatorAuction struct {
	ValidatorSlots       uint16
	ValidatorWeight      uint64
	MinValidatorDuration *big.Int
	AuctionEndTime       *big.Int
	MinimumBid           *big.Int
	Raw                  types.Log // Blockchain specific contextual infos
}

// FilterNewValidatorAuction is a free log retrieval operation binding the contract event 0x50e40b07b3cd91a269f83830c35b4c090f74ebd0cc06dce4db251ccc23627b54.
//
// Solidity: event NewValidatorAuction(uint16 validatorSlots, uint64 validatorWeight, uint256 minValidatorDuration, uint256 auctionEndTime, uint256 minimumBid)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) FilterNewValidatorAuction(opts *bind.FilterOpts) (*NativeTokenSlotAuctionManagerNewValidatorAuctionIterator, error) {

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.FilterLogs(opts, "NewValidatorAuction")
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerNewValidatorAuctionIterator{contract: _NativeTokenSlotAuctionManager.contract, event: "NewValidatorAuction", logs: logs, sub: sub}, nil
}

// WatchNewValidatorAuction is a free log subscription operation binding the contract event 0x50e40b07b3cd91a269f83830c35b4c090f74ebd0cc06dce4db251ccc23627b54.
//
// Solidity: event NewValidatorAuction(uint16 validatorSlots, uint64 validatorWeight, uint256 minValidatorDuration, uint256 auctionEndTime, uint256 minimumBid)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) WatchNewValidatorAuction(opts *bind.WatchOpts, sink chan<- *NativeTokenSlotAuctionManagerNewValidatorAuction) (event.Subscription, error) {

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.WatchLogs(opts, "NewValidatorAuction")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NativeTokenSlotAuctionManagerNewValidatorAuction)
				if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "NewValidatorAuction", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseNewValidatorAuction is a log parse operation binding the contract event 0x50e40b07b3cd91a269f83830c35b4c090f74ebd0cc06dce4db251ccc23627b54.
//
// Solidity: event NewValidatorAuction(uint16 validatorSlots, uint64 validatorWeight, uint256 minValidatorDuration, uint256 auctionEndTime, uint256 minimumBid)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) ParseNewValidatorAuction(log types.Log) (*NativeTokenSlotAuctionManagerNewValidatorAuction, error) {
	event := new(NativeTokenSlotAuctionManagerNewValidatorAuction)
	if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "NewValidatorAuction", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator is returned from FilterSuccessfulBidPlaced and is used to iterate over the raw logs and unpacked data for SuccessfulBidPlaced events raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator struct {
	Event *NativeTokenSlotAuctionManagerSuccessfulBidPlaced // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NativeTokenSlotAuctionManagerSuccessfulBidPlaced)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NativeTokenSlotAuctionManagerSuccessfulBidPlaced)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NativeTokenSlotAuctionManagerSuccessfulBidPlaced represents a SuccessfulBidPlaced event raised by the NativeTokenSlotAuctionManager contract.
type NativeTokenSlotAuctionManagerSuccessfulBidPlaced struct {
	Bid    *big.Int
	NodeID common.Hash
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterSuccessfulBidPlaced is a free log retrieval operation binding the contract event 0x864a2110bb41c315e04bd6122b668384bca4b0d8509e55850db8347e86a95029.
//
// Solidity: event SuccessfulBidPlaced(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) FilterSuccessfulBidPlaced(opts *bind.FilterOpts, bid []*big.Int, nodeID [][]byte) (*NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator, error) {

	var bidRule []interface{}
	for _, bidItem := range bid {
		bidRule = append(bidRule, bidItem)
	}
	var nodeIDRule []interface{}
	for _, nodeIDItem := range nodeID {
		nodeIDRule = append(nodeIDRule, nodeIDItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.FilterLogs(opts, "SuccessfulBidPlaced", bidRule, nodeIDRule)
	if err != nil {
		return nil, err
	}
	return &NativeTokenSlotAuctionManagerSuccessfulBidPlacedIterator{contract: _NativeTokenSlotAuctionManager.contract, event: "SuccessfulBidPlaced", logs: logs, sub: sub}, nil
}

// WatchSuccessfulBidPlaced is a free log subscription operation binding the contract event 0x864a2110bb41c315e04bd6122b668384bca4b0d8509e55850db8347e86a95029.
//
// Solidity: event SuccessfulBidPlaced(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) WatchSuccessfulBidPlaced(opts *bind.WatchOpts, sink chan<- *NativeTokenSlotAuctionManagerSuccessfulBidPlaced, bid []*big.Int, nodeID [][]byte) (event.Subscription, error) {

	var bidRule []interface{}
	for _, bidItem := range bid {
		bidRule = append(bidRule, bidItem)
	}
	var nodeIDRule []interface{}
	for _, nodeIDItem := range nodeID {
		nodeIDRule = append(nodeIDRule, nodeIDItem)
	}

	logs, sub, err := _NativeTokenSlotAuctionManager.contract.WatchLogs(opts, "SuccessfulBidPlaced", bidRule, nodeIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NativeTokenSlotAuctionManagerSuccessfulBidPlaced)
				if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "SuccessfulBidPlaced", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSuccessfulBidPlaced is a log parse operation binding the contract event 0x864a2110bb41c315e04bd6122b668384bca4b0d8509e55850db8347e86a95029.
//
// Solidity: event SuccessfulBidPlaced(uint256 indexed bid, bytes indexed nodeID)
func (_NativeTokenSlotAuctionManager *NativeTokenSlotAuctionManagerFilterer) ParseSuccessfulBidPlaced(log types.Log) (*NativeTokenSlotAuctionManagerSuccessfulBidPlaced, error) {
	event := new(NativeTokenSlotAuctionManagerSuccessfulBidPlaced)
	if err := _NativeTokenSlotAuctionManager.contract.UnpackLog(event, "SuccessfulBidPlaced", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
