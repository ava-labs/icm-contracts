// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package acp99validatormanager

import (
	"errors"
	"math/big"
	"strings"

	"github.com/ava-labs/subnet-evm/accounts/abi"
	"github.com/ava-labs/subnet-evm/accounts/abi/bind"
	"github.com/ava-labs/subnet-evm/core/types"
	"github.com/ava-labs/subnet-evm/interfaces"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = interfaces.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ConversionData is an auto generated low-level Go binding around an user-defined struct.
type ConversionData struct {
	SubnetID                     [32]byte
	ValidatorManagerBlockchainID [32]byte
	ValidatorManagerAddress      common.Address
	InitialValidators            []InitialValidator
}

// InitialValidator is an auto generated low-level Go binding around an user-defined struct.
type InitialValidator struct {
	NodeID       []byte
	BlsPublicKey []byte
	Weight       uint64
}

// PChainOwner is an auto generated low-level Go binding around an user-defined struct.
type PChainOwner struct {
	Threshold uint32
	Addresses []common.Address
}

// Validator is an auto generated low-level Go binding around an user-defined struct.
type Validator struct {
	Status         uint8
	NodeID         []byte
	StartingWeight uint64
	MessageNonce   uint64
	Weight         uint64
	StartedAt      uint64
	EndedAt        uint64
}

// ValidatorManagerSettings is an auto generated low-level Go binding around an user-defined struct.
type ValidatorManagerSettings struct {
	SubnetID               [32]byte
	ChurnPeriodSeconds     uint64
	MaximumChurnPercentage uint8
}

// ValidatorMessagesValidationPeriod is an auto generated low-level Go binding around an user-defined struct.
type ValidatorMessagesValidationPeriod struct {
	SubnetID              [32]byte
	NodeID                []byte
	BlsPublicKey          []byte
	RegistrationExpiry    uint64
	RemainingBalanceOwner PChainOwner
	DisableOwner          PChainOwner
	Weight                uint64
}

// ValidatorRegistrationInput is an auto generated low-level Go binding around an user-defined struct.
type ValidatorRegistrationInput struct {
	NodeID                []byte
	BlsPublicKey          []byte
	RegistrationExpiry    uint64
	RemainingBalanceOwner PChainOwner
	DisableOwner          PChainOwner
}

// ACP99ValidatorManagerMetaData contains all meta data concerning the ACP99ValidatorManager contract.
var ACP99ValidatorManagerMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"enumICMInitializable\",\"name\":\"init\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"InvalidBLSKeyLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"encodedConversionID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"expectedConversionID\",\"type\":\"bytes32\"}],\"name\":\"InvalidConversionID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitializationStatus\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"maximumChurnPercentage\",\"type\":\"uint8\"}],\"name\":\"InvalidMaximumChurnPercentage\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"}],\"name\":\"InvalidNodeID\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addressesLength\",\"type\":\"uint256\"}],\"name\":\"InvalidPChainOwnerThreshold\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"registrationExpiry\",\"type\":\"uint64\"}],\"name\":\"InvalidRegistrationExpiry\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"name\":\"InvalidTotalWeight\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"}],\"name\":\"InvalidValidationID\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validatorManagerAddress\",\"type\":\"address\"}],\"name\":\"InvalidValidatorManagerAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockchainID\",\"type\":\"bytes32\"}],\"name\":\"InvalidValidatorManagerBlockchainID\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enumValidatorStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"InvalidValidatorStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWarpMessage\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"}],\"name\":\"InvalidWarpOriginSenderAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"sourceChainID\",\"type\":\"bytes32\"}],\"name\":\"InvalidWarpSourceChainID\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"churnAmount\",\"type\":\"uint64\"}],\"name\":\"MaxChurnRateExceeded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"}],\"name\":\"NodeAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PChainOwnerAddressesNotSorted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"validRegistration\",\"type\":\"bool\"}],\"name\":\"UnexpectedRegistrationStatus\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"name\":\"InitialValidatorCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"registerValidationMessageID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"registrationExpiry\",\"type\":\"uint64\"}],\"name\":\"ValidationPeriodCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"enumValidatorStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"ValidationPeriodEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ValidationPeriodRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"setWeightMessageID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"ValidatorRemovalInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"setWeightMessageID\",\"type\":\"bytes32\"}],\"name\":\"ValidatorWeightUpdate\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACP_99_VALIDATOR_MANAGER_STORAGE_LOCATION\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ADDRESS_LENGTH\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BLS_PUBLIC_KEY_LENGTH\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAXIMUM_CHURN_PERCENTAGE_LIMIT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAXIMUM_REGISTRATION_EXPIRY_LENGTH\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"P_CHAIN_BLOCKCHAIN_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_MANAGER_STORAGE_LOCATION\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WARP_MESSENGER\",\"outputs\":[{\"internalType\":\"contractIWarpMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"messageIndex\",\"type\":\"uint32\"}],\"name\":\"completeEndValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"messageIndex\",\"type\":\"uint32\"}],\"name\":\"completeValidatorRegistration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"completeValidatorWeightChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChurnPeriodSeconds\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSecurityModule\",\"outputs\":[{\"internalType\":\"contractIACP99SecurityModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"}],\"name\":\"getValidator\",\"outputs\":[{\"components\":[{\"internalType\":\"enumValidatorStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"startingWeight\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"messageNonce\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"startedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endedAt\",\"type\":\"uint64\"}],\"internalType\":\"structValidator\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"}],\"name\":\"getWeight\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"subnetID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"churnPeriodSeconds\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"maximumChurnPercentage\",\"type\":\"uint8\"}],\"internalType\":\"structValidatorManagerSettings\",\"name\":\"settings\",\"type\":\"tuple\"},{\"internalType\":\"contractIACP99SecurityModule\",\"name\":\"securityModule\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"initializeEndValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPublicKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"registrationExpiry\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"structPChainOwner\",\"name\":\"remainingBalanceOwner\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"structPChainOwner\",\"name\":\"disableOwner\",\"type\":\"tuple\"}],\"internalType\":\"structValidatorRegistrationInput\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"initializeValidatorRegistration\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"subnetID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"validatorManagerBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"validatorManagerAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPublicKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"internalType\":\"structInitialValidator[]\",\"name\":\"initialValidators\",\"type\":\"tuple[]\"}],\"internalType\":\"structConversionData\",\"name\":\"conversionData\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"messageIndex\",\"type\":\"uint32\"}],\"name\":\"initializeValidatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"initializeValidatorWeightChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"}],\"name\":\"registeredValidators\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"}],\"name\":\"resendEndValidatorMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"}],\"name\":\"resendRegisterValidatorMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIACP99SecurityModule\",\"name\":\"securityModule\",\"type\":\"address\"}],\"name\":\"setSecurityModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561000f575f80fd5b50604051613c65380380613c6583398101604081905261002e91610107565b60018160018111156100425761004261012c565b0361004f5761004f610055565b50610140565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100a55760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146101045780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b5f60208284031215610117575f80fd5b815160028110610125575f80fd5b9392505050565b634e487b7160e01b5f52602160045260245ffd5b613b188061014d5f395ff3fe608060405234801561000f575f80fd5b5060043610610153575f3560e01c8063a3a65e48116100bf578063d492edfc11610079578063d492edfc14610334578063d588c18f14610347578063d5f20ff61461035a578063db4a0eca1461037a578063df93d8de1461038e578063fd7ac5e714610398575f80fd5b8063a3a65e48146102af578063b771b3bc146102c2578063bc5fbfec146102e8578063bee0a03f146102fc578063c974d1b61461030f578063cdeea3c914610317575f80fd5b806366435abf1161011057806366435abf1461020b578063670301ae1461021e578063732214f8146102315780637db1dd48146102465780638280a25a146102595780639a68b05014610273575f80fd5b80630322ed981461015757806309c1df661461016c57806320d91b7a146101b55780633d89e86f146101c8578063467ef06f146101db57806360305d62146101ee575b5f80fd5b61016a610165366004612aef565b6103ab565b005b7fe92546d698950ddd38910d2e15ed1d923cd0a7b3dde9e2a6a3f380565559cb01546001600160401b03165b6040516001600160401b0390911681526020015b60405180910390f35b61016a6101c3366004612b1e565b61063b565b61016a6101d6366004612bbf565b610649565b61016a6101e9366004612c14565b6106ce565b6101f6601481565b60405163ffffffff90911681526020016101ac565b610198610219366004612aef565b6107ad565b61016a61022c366004612c34565b6107c1565b6102385f81565b6040519081526020016101ac565b610238610254366004612c7b565b61082a565b610261603081565b60405160ff90911681526020016101ac565b61016a610281366004612cfc565b5f80516020613ac383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61016a6102bd366004612c14565b61092a565b6102d06005600160991b0181565b6040516001600160a01b0390911681526020016101ac565b6102385f80516020613a8383398151915281565b61016a61030a366004612aef565b61099f565b610261601481565b5f80516020613ac3833981519152546001600160a01b03166102d0565b61016a610342366004612c34565b610ae0565b61016a610355366004612d17565b610b2a565b61036d610368366004612aef565b610c37565b6040516101ac9190612dd4565b6102385f80516020613ac383398151915281565b6101986202a30081565b6102386103a6366004612e54565b610db2565b5f8181525f80516020613aa38339815191526020526040808220815160e0810190925280545f80516020613a8383398151915293929190829060ff1660058111156103f8576103f8612d53565b600581111561040957610409612d53565b815260200160018201805461041d90612e92565b80601f016020809104026020016040519081016040528092919081815260200182805461044990612e92565b80156104945780601f1061046b57610100808354040283529160200191610494565b820191905f5260205f20905b81548152906001019060200180831161047757829003601f168201915b505050918352505060028201546001600160401b038082166020840152600160401b820481166040840152600160801b820481166060840152600160c01b909104811660808301526003928301541660a090910152909150815160058111156104ff576104ff612d53565b1461053b575f8381526005830160205260409081902054905163170cc93360e21b81526105329160ff1690600401612eca565b60405180910390fd5b606081015160405163854a893f60e01b8152600481018590526001600160401b0390911660248201525f60448201526005600160991b019063ee5b48eb9073__$fd0c147b4031eef6079b0498cbafa865f0$__9063854a893f906064015f60405180830381865af41580156105b2573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526105d99190810190612fdb565b6040518263ffffffff1660e01b81526004016105f5919061300c565b6020604051808303815f875af1158015610611573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610635919061301e565b50505050565b6106458282610e0e565b5050565b5f61065485856113c9565b505f80516020613ac3833981519152546040516326367e9f60e21b81529192506001600160a01b0316906398d9fa7c9061069a908890889086908990899060040161305d565b5f604051808303815f87803b1580156106b1575f80fd5b505af11580156106c3573d5f803e3d5ffd5b505050505050505050565b5f6106d8826115a0565b5f80516020613ac3833981519152805460408051602480820186905282518083039091018152604490910182526020810180516001600160e01b0316633dde56a360e21b179052905193945091926001600160a01b03909116915f9182918491610742919061309a565b5f60405180830381855af49150503d805f811461077a576040519150601f19603f3d011682016040523d82523d5f602084013e61077f565b606091505b50915091508181906107a45760405162461bcd60e51b8152600401610532919061300c565b50505050505050565b5f6107b782610c37565b6080015192915050565b5f80516020613ac383398151915254604051633bfed56d60e21b81526001600160a01b039091169063effb55b490610801908690869086906004016130b5565b5f604051808303815f87803b158015610818575f80fd5b505af11580156107a4573d5f803e3d5ffd5b5f80610836868661194d565b90505f5f80516020613ac383398151915280546040519192506001600160a01b0316905f908190839062080a1960e31b9061087b9088908d908d908d906024016130d7565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516108b9919061309a565b5f60405180830381855af49150503d805f81146108f1576040519150601f19603f3d011682016040523d82523d5f602084013e6108f6565b606091505b509150915081819061091b5760405162461bcd60e51b8152600401610532919061300c565b50939998505050505050505050565b5f61093482611ebf565b90505f80516020613ac3833981519152546040516356ab447d60e01b8152600481018390526001600160a01b03909116906356ab447d906024015f604051808303815f87803b158015610985575f80fd5b505af1158015610997573d5f803e3d5ffd5b505050505050565b5f8181527fe92546d698950ddd38910d2e15ed1d923cd0a7b3dde9e2a6a3f380565559cb046020526040902080545f80516020613a8383398151915291906109e690612e92565b90505f03610a0a5760405163089938b360e11b815260048101839052602401610532565b60015f838152600580840160205260409091205460ff1690811115610a3157610a31612d53565b14610a64575f8281526005820160205260409081902054905163170cc93360e21b81526105329160ff1690600401612eca565b5f8281526004808301602052604091829020915163ee5b48eb60e01b81526005600160991b019263ee5b48eb92610a9b9201613109565b6020604051808303815f875af1158015610ab7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610adb919061301e565b505050565b610ae9836120b8565b505f80516020613ac383398151915254604051632f76d68560e21b81526001600160a01b039091169063bddb5a1490610801908690869086906004016130b5565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f81158015610b6e5750825b90505f826001600160401b03166001148015610b895750303b155b905081158015610b97575080155b15610bb55760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610bdf57845460ff60401b1916600160401b1785555b610be987876123ce565b83156107a457845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a150505050505050565b6040805160e080820183525f808352606060208085018290528486018390529084018290526080840182905260a0840182905260c084018290528582525f80516020613aa383398151915290528390208351918201909352825491925f80516020613a8383398151915292829060ff166005811115610cb857610cb8612d53565b6005811115610cc957610cc9612d53565b8152602001600182018054610cdd90612e92565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0990612e92565b8015610d545780601f10610d2b57610100808354040283529160200191610d54565b820191905f5260205f20905b815481529060010190602001808311610d3757829003601f168201915b505050918352505060028201546001600160401b038082166020840152600160401b820481166040840152600160801b820481166060840152600160c01b9091048116608083015260039092015490911660a0909101529392505050565b6040515f905f80516020613a83833981519152907fe92546d698950ddd38910d2e15ed1d923cd0a7b3dde9e2a6a3f380565559cb0690610df59086908690613193565b9081526020016040518091039020549150505b92915050565b7fe92546d698950ddd38910d2e15ed1d923cd0a7b3dde9e2a6a3f380565559cb07545f80516020613a838339815191529060ff1615610e6057604051637fab81e560e01b815260040160405180910390fd5b6005600160991b016001600160a01b0316634213cf786040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ea3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ec7919061301e565b836020013514610ef0576040516372b0a7e760e11b815260208401356004820152602401610532565b30610f016060850160408601612cfc565b6001600160a01b031614610f4457610f1f6060840160408501612cfc565b604051632f88120d60e21b81526001600160a01b039091166004820152602401610532565b5f610f5260608501856131a2565b905090505f805b828163ffffffff1610156111ba575f610f7560608801886131a2565b8363ffffffff16818110610f8b57610f8b6131e7565b9050602002810190610f9d91906131fb565b610fa69061325c565b80516040519192505f916006880191610fbe9161309a565b90815260200160405180910390205414610fee57805160405163a41f772f60e01b8152610532919060040161300c565b5f6002885f01358460405160200161101d92919091825260e01b6001600160e01b031916602082015260240190565b60408051601f19818403018152908290526110379161309a565b602060405180830381855afa158015611052573d5f803e3d5ffd5b5050506040513d601f19601f82011682018060405250810190611075919061301e565b90508086600601835f015160405161108d919061309a565b90815260408051918290036020908101909220929092555f8381526005890190915220805460ff1916600217815582516001909101906110cd9082613320565b50604082810180515f84815260058a016020529290922060028101805492516001600160401b039485166001600160c01b031990941693909317600160801b85851602176001600160c01b0316600160c01b429590951694909402939093179092556003909101805467ffffffffffffffff1916905561114d90856133ef565b825160405191955061115e9161309a565b60408051918290038220908401516001600160401b031682529082907ffe3e5983f71c8253fb0b678f2bc587aa8574d8f1aab9cf82b983777f5998392c9060200160405180910390a35050806111b39061340f565b9050610f59565b506003830180546fffffffffffffffff00000000000000001916600160401b6001600160401b0384168102919091179091556001840154606491611202910460ff1683613431565b6001600160401b0316101561123557604051633e1a785160e01b81526001600160401b0382166004820152602401610532565b5f73__$fd0c147b4031eef6079b0498cbafa865f0$__634d847884611259876123e8565b604001516040518263ffffffff1660e01b8152600401611279919061300c565b602060405180830381865af4158015611294573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112b8919061301e565b90505f73__$fd0c147b4031eef6079b0498cbafa865f0$__6387418b8e886040518263ffffffff1660e01b81526004016112f29190613557565b5f60405180830381865af415801561130c573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526113339190810190612fdb565b90505f600282604051611346919061309a565b602060405180830381855afa158015611361573d5f803e3d5ffd5b5050506040513d601f19601f82011682018060405250810190611384919061301e565b90508281146113b05760405163baaea89d60e01b81526004810182905260248101849052604401610532565b5050506007909201805460ff1916600117905550505050565b5f8281525f80516020613aa3833981519152602052604081206002015481905f80516020613a8383398151915290600160801b90046001600160401b031661141185826124fe565b5f61141b87612768565b5f888152600585016020526040808220600201805467ffffffffffffffff60801b1916600160801b6001600160401b038c811691820292909217909255915163854a893f60e01b8152600481018c905291841660248301526044820152919250906005600160991b019063ee5b48eb9073__$fd0c147b4031eef6079b0498cbafa865f0$__9063854a893f906064015f60405180830381865af41580156114c4573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526114eb9190810190612fdb565b6040518263ffffffff1660e01b8152600401611507919061300c565b6020604051808303815f875af1158015611523573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611547919061301e565b604080516001600160401b038a811682526020820184905282519394508516928b927f07de5ff35a674a8005e661f3333c907ca6333462808762d19dc7b3abb1a8c1df928290030190a3909450925050505b9250929050565b5f5f80516020613a83833981519152818073__$fd0c147b4031eef6079b0498cbafa865f0$__63021de88f6115d4876123e8565b604001516040518263ffffffff1660e01b81526004016115f4919061300c565b6040805180830381865af415801561160e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061163291906135f1565b91509150801561165957604051632d07135360e01b81528115156004820152602401610532565b5f82815260058085016020526040808320815160e08101909252805491929091839160ff9091169081111561169057611690612d53565b60058111156116a1576116a1612d53565b81526020016001820180546116b590612e92565b80601f01602080910402602001604051908101604052809291908181526020018280546116e190612e92565b801561172c5780601f106117035761010080835404028352916020019161172c565b820191905f5260205f20905b81548152906001019060200180831161170f57829003601f168201915b505050918352505060028201546001600160401b038082166020840152600160401b820481166040840152600160801b820481166060840152600160c01b909104811660808301526003928301541660a0909101529091508151600581111561179757611797612d53565b141580156117b857506001815160058111156117b5576117b5612d53565b14155b156117d957805160405163170cc93360e21b81526105329190600401612eca565b6003815160058111156117ee576117ee612d53565b036117fc5760048152611801565b600581525b836006018160200151604051611817919061309a565b90815260408051602092819003830190205f90819055858152600587810190935220825181548493839160ff191690600190849081111561185a5761185a612d53565b0217905550602082015160018201906118739082613320565b5060408201516002820180546060850151608086015160a08701516001600160401b039586166001600160801b031990941693909317600160401b92861692909202919091176001600160801b0316600160801b918516919091026001600160c01b031617600160c01b9184169190910217905560c0909201516003909101805467ffffffffffffffff1916919092161790558051600581111561191957611919612d53565b60405184907f1c08e59656f1a18dc2da76826cdc52805c43e897a17c50faefb8ab3c1526cc16905f90a35090949350505050565b7fe92546d698950ddd38910d2e15ed1d923cd0a7b3dde9e2a6a3f380565559cb07545f9060ff1661199157604051637fab81e560e01b815260040160405180910390fd5b5f80516020613a83833981519152426119b06060860160408701613612565b6001600160401b03161115806119ea57506119ce6202a3004261362b565b6119de6060860160408701613612565b6001600160401b031610155b15611a24576119ff6060850160408601613612565b604051635879da1360e11b81526001600160401b039091166004820152602401610532565b60038101546001600160401b0390611a4790600160401b9004821685831661362b565b1115611a7157604051633e1a785160e01b81526001600160401b0384166004820152602401610532565b611a86611a81606086018661363e565b6127dd565b611a96611a81608086018661363e565b6030611aa56020860186613652565b905014611ad757611ab96020850185613652565b6040516326475b2f60e11b8152610532925060040190815260200190565b611ae18480613652565b90505f03611b0e57611af38480613652565b604051633e08a12560e11b8152600401610532929190613694565b5f60068201611b1d8680613652565b604051611b2b929190613193565b90815260200160405180910390205414611b6457611b498480613652565b60405163a41f772f60e01b8152600401610532929190613694565b611b6e835f6124fe565b6040805160e08101909152815481525f90819073__$fd0c147b4031eef6079b0498cbafa865f0$__9063eb97ce519060208101611bab8a80613652565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250505090825250602090810190611bf3908b018b613652565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250505090825250602001611c3c60608b0160408c01613612565b6001600160401b03168152602001611c5760608b018b61363e565b611c60906136a7565b8152602001611c7260808b018b61363e565b611c7b906136a7565b8152602001886001600160401b03168152506040518263ffffffff1660e01b8152600401611ca991906137d4565b5f60405180830381865af4158015611cc3573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611cea919081019061388b565b5f82815260048601602052604090209193509150611d088282613320565b508160068401611d188880613652565b604051611d26929190613193565b9081526040519081900360200181209190915563ee5b48eb60e01b81525f906005600160991b019063ee5b48eb90611d6290859060040161300c565b6020604051808303815f875af1158015611d7e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611da2919061301e565b5f8481526005860160205260409020805460ff191660011790559050611dc88780613652565b5f858152600587016020526040902060010191611de69190836138ce565b505f83815260058501602052604090206002810180546001600160c01b0319166001600160401b038916908117600160801b91909102176001600160c01b03169055600301805467ffffffffffffffff1916905580611e458880613652565b604051611e53929190613193565b6040518091039020847fd8a184af94a03e121609cc5f803a446236793e920c7945abc6ba355c8a30cb49898b6040016020810190611e919190613612565b604080516001600160401b0393841681529290911660208301520160405180910390a4509095945050505050565b5f5f80516020613a83833981519152818073__$fd0c147b4031eef6079b0498cbafa865f0$__63021de88f611ef3876123e8565b604001516040518263ffffffff1660e01b8152600401611f13919061300c565b6040805180830381865af4158015611f2d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f5191906135f1565b9150915080611f7757604051632d07135360e01b81528115156004820152602401610532565b5f82815260048401602052604090208054611f9190612e92565b90505f03611fb55760405163089938b360e11b815260048101839052602401610532565b60015f838152600580860160205260409091205460ff1690811115611fdc57611fdc612d53565b1461200f575f8281526005840160205260409081902054905163170cc93360e21b81526105329160ff1690600401612eca565b5f828152600484016020526040812061202791612aa5565b5f828152600584016020908152604091829020805460ff1916600290811782550180546001600160401b0342818116600160c01b026001600160c01b0390931692909217928390558451600160801b9093041682529181019190915283917f8629ec2bfd8d3b792ba269096bb679e08f20ba2caec0785ef663cf94788e349b910160405180910390a2509392505050565b6040805160e0810182525f8082526060602083018190529282018190529181018290526080810182905260a0810182905260c08101919091525f8281525f80516020613aa38339815191526020526040808220815160e0810190925280545f80516020613a8383398151915293929190829060ff16600581111561213e5761213e612d53565b600581111561214f5761214f612d53565b815260200160018201805461216390612e92565b80601f016020809104026020016040519081016040528092919081815260200182805461218f90612e92565b80156121da5780601f106121b1576101008083540402835291602001916121da565b820191905f5260205f20905b8154815290600101906020018083116121bd57829003601f168201915b50505091835250506002828101546001600160401b038082166020850152600160401b820481166040850152600160801b820481166060850152600160c01b9091048116608084015260039093015490921660a0909101529091508151600581111561224857612248612d53565b1461227b575f8481526005830160205260409081902054905163170cc93360e21b81526105329160ff1690600401612eca565b60038152426001600160401b031660c08201525f84815260058381016020526040909120825181548493839160ff19169060019084908111156122c0576122c0612d53565b0217905550602082015160018201906122d99082613320565b5060408201516002820180546060850151608086015160a08701516001600160401b039586166001600160801b031990941693909317600160401b92861692909202919091176001600160801b0316600160801b918516919091026001600160c01b031617600160c01b9184169190910217905560c0909201516003909101805467ffffffffffffffff1916919092161790555f61237785826113c9565b6080840151604080516001600160401b03909216825242602083015291935083925087917ffbfc4c00cddda774e9bce93712e29d12887b46526858a1afb0937cce8c30fa42910160405180910390a3509392505050565b6123d6612946565b6123df82612991565b610645816129ad565b60408051606080820183525f8083526020830152918101919091526040516306f8253560e41b815263ffffffff831660048201525f9081906005600160991b0190636f825350906024015f60405180830381865afa15801561244c573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526124739190810190613987565b915091508061249557604051636b2f19e960e01b815260040160405180910390fd5b8151156124bb578151604051636ba589a560e01b81526004810191909152602401610532565b60208201516001600160a01b0316156124f7576020820151604051624de75d60e31b81526001600160a01b039091166004820152602401610532565b5092915050565b5f80516020613a838339815191525f6001600160401b0380841690851611156125325761252b8385613a14565b905061253f565b61253c8484613a14565b90505b60408051608081018252600284015480825260038501546001600160401b038082166020850152600160401b8204811694840194909452600160801b90049092166060820152429115806125ac5750600184015481516125a8916001600160401b03169061362b565b8210155b156125d4576001600160401b03808416606083015282825260408201511660208201526125f3565b82816060018181516125e691906133ef565b6001600160401b03169052505b6060810151612603906064613431565b602082015160018601546001600160401b03929092169161262e9190600160401b900460ff16613431565b6001600160401b0316101561266757606081015160405163dfae880160e01b81526001600160401b039091166004820152602401610532565b858160400181815161267991906133ef565b6001600160401b0316905250604081018051869190612699908390613a14565b6001600160401b0316905250600184015460408201516064916126c791600160401b90910460ff1690613431565b6001600160401b03161015612700576040808201519051633e1a785160e01b81526001600160401b039091166004820152602401610532565b8051600285015560208101516003909401805460408301516060909301516001600160401b03908116600160801b0267ffffffffffffffff60801b19948216600160401b026001600160801b0319909316919097161717919091169390931790925550505050565b5f8181525f80516020613aa38339815191526020526040812060020180545f80516020613a8383398151915291906008906127b290600160401b90046001600160401b0316613a34565b91906101000a8154816001600160401b0302191690836001600160401b031602179055915050919050565b6127ea6020820182612c14565b63ffffffff1615801561280a575061280560208201826131a2565b151590505b156128515761281c6020820182612c14565b61282960208301836131a2565b60405163c08a0f1d60e01b815263ffffffff9093166004840152602483015250604401610532565b61285e60208201826131a2565b905061286d6020830183612c14565b63ffffffff1611156128865761281c6020820182612c14565b60015b61289660208301836131a2565b9050811015610645576128ac60208301836131a2565b6128b7600184613a4f565b8181106128c6576128c66131e7565b90506020020160208101906128db9190612cfc565b6001600160a01b03166128f160208401846131a2565b83818110612901576129016131e7565b90506020020160208101906129169190612cfc565b6001600160a01b0316101561293e57604051630dbc8d5f60e31b815260040160405180910390fd5b600101612889565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661298f57604051631afcd79f60e31b815260040160405180910390fd5b565b612999612946565b6129a16129b5565b6129aa816129bd565b50565b610281612946565b61298f612946565b6129c5612946565b80355f80516020613a8383398151915290815560146129ea6060840160408501613a62565b60ff161180612a095750612a046060830160408401613a62565b60ff16155b15612a3d57612a1e6060830160408401613a62565b604051634a59bbff60e11b815260ff9091166004820152602401610532565b612a4d6060830160408401613a62565b60018201805460ff92909216600160401b0260ff60401b19909216919091179055612a7e6040830160208401613612565b600191909101805467ffffffffffffffff19166001600160401b0390921691909117905550565b508054612ab190612e92565b5f825580601f10612ac0575050565b601f0160209004905f5260205f20908101906129aa91905b80821115612aeb575f8155600101612ad8565b5090565b5f60208284031215612aff575f80fd5b5035919050565b803563ffffffff81168114612b19575f80fd5b919050565b5f8060408385031215612b2f575f80fd5b82356001600160401b03811115612b44575f80fd5b830160808186031215612b55575f80fd5b9150612b6360208401612b06565b90509250929050565b80356001600160401b0381168114612b19575f80fd5b5f8083601f840112612b92575f80fd5b5081356001600160401b03811115612ba8575f80fd5b602083019150836020828501011115611599575f80fd5b5f805f8060608587031215612bd2575f80fd5b84359350612be260208601612b6c565b925060408501356001600160401b03811115612bfc575f80fd5b612c0887828801612b82565b95989497509550505050565b5f60208284031215612c24575f80fd5b612c2d82612b06565b9392505050565b5f805f60408486031215612c46575f80fd5b8335925060208401356001600160401b03811115612c62575f80fd5b612c6e86828701612b82565b9497909650939450505050565b5f805f8060608587031215612c8e575f80fd5b84356001600160401b0380821115612ca4575f80fd5b9086019060a08289031215612cb7575f80fd5b819550612cc660208801612b6c565b94506040870135915080821115612cdb575f80fd5b50612c0887828801612b82565b6001600160a01b03811681146129aa575f80fd5b5f60208284031215612d0c575f80fd5b8135612c2d81612ce8565b5f808284036080811215612d29575f80fd5b6060811215612d36575f80fd5b508291506060830135612d4881612ce8565b809150509250929050565b634e487b7160e01b5f52602160045260245ffd5b60068110612d8357634e487b7160e01b5f52602160045260245ffd5b9052565b5f5b83811015612da1578181015183820152602001612d89565b50505f910152565b5f8151808452612dc0816020860160208601612d87565b601f01601f19169290920160200192915050565b60208152612de6602082018351612d67565b5f602083015160e06040840152612e01610100840182612da9565b905060408401516001600160401b0380821660608601528060608701511660808601528060808701511660a08601528060a08701511660c08601528060c08701511660e086015250508091505092915050565b5f8060208385031215612e65575f80fd5b82356001600160401b03811115612e7a575f80fd5b612e8685828601612b82565b90969095509350505050565b600181811c90821680612ea657607f821691505b602082108103612ec457634e487b7160e01b5f52602260045260245ffd5b50919050565b60208101610e088284612d67565b634e487b7160e01b5f52604160045260245ffd5b604051606081016001600160401b0381118282101715612f0e57612f0e612ed8565b60405290565b604080519081016001600160401b0381118282101715612f0e57612f0e612ed8565b604051601f8201601f191681016001600160401b0381118282101715612f5e57612f5e612ed8565b604052919050565b5f6001600160401b03821115612f7e57612f7e612ed8565b50601f01601f191660200190565b5f82601f830112612f9b575f80fd5b8151612fae612fa982612f66565b612f36565b818152846020838601011115612fc2575f80fd5b612fd3826020830160208701612d87565b949350505050565b5f60208284031215612feb575f80fd5b81516001600160401b03811115613000575f80fd5b612fd384828501612f8c565b602081525f612c2d6020830184612da9565b5f6020828403121561302e575f80fd5b5051919050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b8581525f6001600160401b0380871660208401528086166040840152506080606083015261308f608083018486613035565b979650505050505050565b5f82516130ab818460208701612d87565b9190910192915050565b838152604060208201525f6130ce604083018486613035565b95945050505050565b8481526001600160401b0384166020820152606060408201525f6130ff606083018486613035565b9695505050505050565b5f60208083525f845461311b81612e92565b806020870152604060018084165f811461313c576001811461315857613185565b60ff19851660408a0152604084151560051b8a01019550613185565b895f5260205f205f5b8581101561317c5781548b8201860152908301908801613161565b8a016040019650505b509398975050505050505050565b818382375f9101908152919050565b5f808335601e198436030181126131b7575f80fd5b8301803591506001600160401b038211156131d0575f80fd5b6020019150600581901b3603821315611599575f80fd5b634e487b7160e01b5f52603260045260245ffd5b5f8235605e198336030181126130ab575f80fd5b5f82601f83011261321e575f80fd5b813561322c612fa982612f66565b818152846020838601011115613240575f80fd5b816020850160208301375f918101602001919091529392505050565b5f6060823603121561326c575f80fd5b613274612eec565b82356001600160401b038082111561328a575f80fd5b6132963683870161320f565b835260208501359150808211156132ab575f80fd5b506132b83682860161320f565b6020830152506132ca60408401612b6c565b604082015292915050565b601f821115610adb57805f5260205f20601f840160051c810160208510156132fa5750805b601f840160051c820191505b81811015613319575f8155600101613306565b5050505050565b81516001600160401b0381111561333957613339612ed8565b61334d816133478454612e92565b846132d5565b602080601f831160018114613380575f84156133695750858301515b5f19600386901b1c1916600185901b178555610997565b5f85815260208120601f198616915b828110156133ae5788860151825594840194600190910190840161338f565b50858210156133cb57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b6001600160401b038181168382160190808211156124f7576124f76133db565b5f63ffffffff808316818103613427576134276133db565b6001019392505050565b6001600160401b03818116838216028082169190828114613454576134546133db565b505092915050565b5f808335601e19843603018112613471575f80fd5b83016020810192503590506001600160401b0381111561348f575f80fd5b803603821315611599575f80fd5b5f8383855260208086019550808560051b830101845f5b8781101561354a57848303601f19018952813536889003605e190181126134d9575f80fd5b870160606134e7828061345c565b8287526134f78388018284613035565b925050506135078683018361345c565b86830388880152613519838284613035565b9250505060406001600160401b03613532828501612b6c565b169501949094525097830197908301906001016134b4565b5090979650505050505050565b6020815281356020820152602082013560408201525f604083013561357b81612ce8565b6001600160a01b031660608381019190915283013536849003601e190181126135a2575f80fd5b83016020810190356001600160401b038111156135bd575f80fd5b8060051b36038213156135ce575f80fd5b6080808501526130ce60a08501828461349d565b80518015158114612b19575f80fd5b5f8060408385031215613602575f80fd5b82519150612b63602084016135e2565b5f60208284031215613622575f80fd5b612c2d82612b6c565b80820180821115610e0857610e086133db565b5f8235603e198336030181126130ab575f80fd5b5f808335601e19843603018112613667575f80fd5b8301803591506001600160401b03821115613680575f80fd5b602001915036819003821315611599575f80fd5b602081525f612fd3602083018486613035565b5f604082360312156136b7575f80fd5b6136bf612f14565b6136c883612b06565b81526020808401356001600160401b03808211156136e4575f80fd5b9085019036601f8301126136f6575f80fd5b81358181111561370857613708612ed8565b8060051b9150613719848301612f36565b8181529183018401918481019036841115613732575f80fd5b938501935b8385101561375c578435925061374c83612ce8565b8282529385019390850190613737565b94860194909452509295945050505050565b5f6040830163ffffffff8351168452602080840151604060208701528281518085526060880191506020830194505f92505b808310156137c95784516001600160a01b031682529383019360019290920191908301906137a0565b509695505050505050565b60208152815160208201525f602083015160e060408401526137fa610100840182612da9565b90506040840151601f19808584030160608601526138188383612da9565b92506001600160401b03606087015116608086015260808601519150808584030160a0860152613848838361376e565b925060a08601519150808584030160c086015250613866828261376e565b91505060c084015161388360e08501826001600160401b03169052565b509392505050565b5f806040838503121561389c575f80fd5b8251915060208301516001600160401b038111156138b8575f80fd5b6138c485828601612f8c565b9150509250929050565b6001600160401b038311156138e5576138e5612ed8565b6138f9836138f38354612e92565b836132d5565b5f601f84116001811461392a575f85156139135750838201355b5f19600387901b1c1916600186901b178355613319565b5f83815260208120601f198716915b828110156139595786850135825560209485019460019092019101613939565b5086821015613975575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b5f8060408385031215613998575f80fd5b82516001600160401b03808211156139ae575f80fd5b90840190606082870312156139c1575f80fd5b6139c9612eec565b8251815260208301516139db81612ce8565b60208201526040830151828111156139f1575f80fd5b6139fd88828601612f8c565b6040830152509350612b63915050602084016135e2565b6001600160401b038281168282160390808211156124f7576124f76133db565b5f6001600160401b03808316818103613427576134276133db565b81810381811115610e0857610e086133db565b5f60208284031215613a72575f80fd5b813560ff81168114612c2d575f80fdfee92546d698950ddd38910d2e15ed1d923cd0a7b3dde9e2a6a3f380565559cb00e92546d698950ddd38910d2e15ed1d923cd0a7b3dde9e2a6a3f380565559cb056d7896c90f86967e463241c430aa4c1ef638639857cb8d4f18c905fa5443d600a2646970667358221220235693c08007255b3393c129119e6f85dd27b50747e8dfb56bfd6d88d4810dcd64736f6c63430008190033",
}

// ACP99ValidatorManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use ACP99ValidatorManagerMetaData.ABI instead.
var ACP99ValidatorManagerABI = ACP99ValidatorManagerMetaData.ABI

// ACP99ValidatorManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ACP99ValidatorManagerMetaData.Bin instead.
var ACP99ValidatorManagerBin = ACP99ValidatorManagerMetaData.Bin

// DeployACP99ValidatorManager deploys a new Ethereum contract, binding an instance of ACP99ValidatorManager to it.
func DeployACP99ValidatorManager(auth *bind.TransactOpts, backend bind.ContractBackend, init uint8) (common.Address, *types.Transaction, *ACP99ValidatorManager, error) {
	parsed, err := ACP99ValidatorManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	validatorMessagesAddr, _, _, _ := DeployValidatorMessages(auth, backend)
	ACP99ValidatorManagerBin = strings.ReplaceAll(ACP99ValidatorManagerBin, "__$fd0c147b4031eef6079b0498cbafa865f0$__", validatorMessagesAddr.String()[2:])

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ACP99ValidatorManagerBin), backend, init)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ACP99ValidatorManager{ACP99ValidatorManagerCaller: ACP99ValidatorManagerCaller{contract: contract}, ACP99ValidatorManagerTransactor: ACP99ValidatorManagerTransactor{contract: contract}, ACP99ValidatorManagerFilterer: ACP99ValidatorManagerFilterer{contract: contract}}, nil
}

// ACP99ValidatorManager is an auto generated Go binding around an Ethereum contract.
type ACP99ValidatorManager struct {
	ACP99ValidatorManagerCaller     // Read-only binding to the contract
	ACP99ValidatorManagerTransactor // Write-only binding to the contract
	ACP99ValidatorManagerFilterer   // Log filterer for contract events
}

// ACP99ValidatorManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type ACP99ValidatorManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ACP99ValidatorManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ACP99ValidatorManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ACP99ValidatorManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ACP99ValidatorManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ACP99ValidatorManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ACP99ValidatorManagerSession struct {
	Contract     *ACP99ValidatorManager // Generic contract binding to set the session for
	CallOpts     bind.CallOpts          // Call options to use throughout this session
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// ACP99ValidatorManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ACP99ValidatorManagerCallerSession struct {
	Contract *ACP99ValidatorManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                // Call options to use throughout this session
}

// ACP99ValidatorManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ACP99ValidatorManagerTransactorSession struct {
	Contract     *ACP99ValidatorManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                // Transaction auth options to use throughout this session
}

// ACP99ValidatorManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type ACP99ValidatorManagerRaw struct {
	Contract *ACP99ValidatorManager // Generic contract binding to access the raw methods on
}

// ACP99ValidatorManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ACP99ValidatorManagerCallerRaw struct {
	Contract *ACP99ValidatorManagerCaller // Generic read-only contract binding to access the raw methods on
}

// ACP99ValidatorManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ACP99ValidatorManagerTransactorRaw struct {
	Contract *ACP99ValidatorManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewACP99ValidatorManager creates a new instance of ACP99ValidatorManager, bound to a specific deployed contract.
func NewACP99ValidatorManager(address common.Address, backend bind.ContractBackend) (*ACP99ValidatorManager, error) {
	contract, err := bindACP99ValidatorManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ACP99ValidatorManager{ACP99ValidatorManagerCaller: ACP99ValidatorManagerCaller{contract: contract}, ACP99ValidatorManagerTransactor: ACP99ValidatorManagerTransactor{contract: contract}, ACP99ValidatorManagerFilterer: ACP99ValidatorManagerFilterer{contract: contract}}, nil
}

// NewACP99ValidatorManagerCaller creates a new read-only instance of ACP99ValidatorManager, bound to a specific deployed contract.
func NewACP99ValidatorManagerCaller(address common.Address, caller bind.ContractCaller) (*ACP99ValidatorManagerCaller, error) {
	contract, err := bindACP99ValidatorManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ACP99ValidatorManagerCaller{contract: contract}, nil
}

// NewACP99ValidatorManagerTransactor creates a new write-only instance of ACP99ValidatorManager, bound to a specific deployed contract.
func NewACP99ValidatorManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*ACP99ValidatorManagerTransactor, error) {
	contract, err := bindACP99ValidatorManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ACP99ValidatorManagerTransactor{contract: contract}, nil
}

// NewACP99ValidatorManagerFilterer creates a new log filterer instance of ACP99ValidatorManager, bound to a specific deployed contract.
func NewACP99ValidatorManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*ACP99ValidatorManagerFilterer, error) {
	contract, err := bindACP99ValidatorManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ACP99ValidatorManagerFilterer{contract: contract}, nil
}

// bindACP99ValidatorManager binds a generic wrapper to an already deployed contract.
func bindACP99ValidatorManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ACP99ValidatorManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ACP99ValidatorManager *ACP99ValidatorManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ACP99ValidatorManager.Contract.ACP99ValidatorManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ACP99ValidatorManager *ACP99ValidatorManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.ACP99ValidatorManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ACP99ValidatorManager *ACP99ValidatorManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.ACP99ValidatorManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ACP99ValidatorManager *ACP99ValidatorManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ACP99ValidatorManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.contract.Transact(opts, method, params...)
}

// ACP99VALIDATORMANAGERSTORAGELOCATION is a free data retrieval call binding the contract method 0xdb4a0eca.
//
// Solidity: function ACP_99_VALIDATOR_MANAGER_STORAGE_LOCATION() view returns(bytes32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCaller) ACP99VALIDATORMANAGERSTORAGELOCATION(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _ACP99ValidatorManager.contract.Call(opts, &out, "ACP_99_VALIDATOR_MANAGER_STORAGE_LOCATION")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ACP99VALIDATORMANAGERSTORAGELOCATION is a free data retrieval call binding the contract method 0xdb4a0eca.
//
// Solidity: function ACP_99_VALIDATOR_MANAGER_STORAGE_LOCATION() view returns(bytes32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) ACP99VALIDATORMANAGERSTORAGELOCATION() ([32]byte, error) {
	return _ACP99ValidatorManager.Contract.ACP99VALIDATORMANAGERSTORAGELOCATION(&_ACP99ValidatorManager.CallOpts)
}

// ACP99VALIDATORMANAGERSTORAGELOCATION is a free data retrieval call binding the contract method 0xdb4a0eca.
//
// Solidity: function ACP_99_VALIDATOR_MANAGER_STORAGE_LOCATION() view returns(bytes32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCallerSession) ACP99VALIDATORMANAGERSTORAGELOCATION() ([32]byte, error) {
	return _ACP99ValidatorManager.Contract.ACP99VALIDATORMANAGERSTORAGELOCATION(&_ACP99ValidatorManager.CallOpts)
}

// ADDRESSLENGTH is a free data retrieval call binding the contract method 0x60305d62.
//
// Solidity: function ADDRESS_LENGTH() view returns(uint32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCaller) ADDRESSLENGTH(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _ACP99ValidatorManager.contract.Call(opts, &out, "ADDRESS_LENGTH")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// ADDRESSLENGTH is a free data retrieval call binding the contract method 0x60305d62.
//
// Solidity: function ADDRESS_LENGTH() view returns(uint32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) ADDRESSLENGTH() (uint32, error) {
	return _ACP99ValidatorManager.Contract.ADDRESSLENGTH(&_ACP99ValidatorManager.CallOpts)
}

// ADDRESSLENGTH is a free data retrieval call binding the contract method 0x60305d62.
//
// Solidity: function ADDRESS_LENGTH() view returns(uint32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCallerSession) ADDRESSLENGTH() (uint32, error) {
	return _ACP99ValidatorManager.Contract.ADDRESSLENGTH(&_ACP99ValidatorManager.CallOpts)
}

// BLSPUBLICKEYLENGTH is a free data retrieval call binding the contract method 0x8280a25a.
//
// Solidity: function BLS_PUBLIC_KEY_LENGTH() view returns(uint8)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCaller) BLSPUBLICKEYLENGTH(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _ACP99ValidatorManager.contract.Call(opts, &out, "BLS_PUBLIC_KEY_LENGTH")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// BLSPUBLICKEYLENGTH is a free data retrieval call binding the contract method 0x8280a25a.
//
// Solidity: function BLS_PUBLIC_KEY_LENGTH() view returns(uint8)
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) BLSPUBLICKEYLENGTH() (uint8, error) {
	return _ACP99ValidatorManager.Contract.BLSPUBLICKEYLENGTH(&_ACP99ValidatorManager.CallOpts)
}

// BLSPUBLICKEYLENGTH is a free data retrieval call binding the contract method 0x8280a25a.
//
// Solidity: function BLS_PUBLIC_KEY_LENGTH() view returns(uint8)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCallerSession) BLSPUBLICKEYLENGTH() (uint8, error) {
	return _ACP99ValidatorManager.Contract.BLSPUBLICKEYLENGTH(&_ACP99ValidatorManager.CallOpts)
}

// MAXIMUMCHURNPERCENTAGELIMIT is a free data retrieval call binding the contract method 0xc974d1b6.
//
// Solidity: function MAXIMUM_CHURN_PERCENTAGE_LIMIT() view returns(uint8)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCaller) MAXIMUMCHURNPERCENTAGELIMIT(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _ACP99ValidatorManager.contract.Call(opts, &out, "MAXIMUM_CHURN_PERCENTAGE_LIMIT")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// MAXIMUMCHURNPERCENTAGELIMIT is a free data retrieval call binding the contract method 0xc974d1b6.
//
// Solidity: function MAXIMUM_CHURN_PERCENTAGE_LIMIT() view returns(uint8)
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) MAXIMUMCHURNPERCENTAGELIMIT() (uint8, error) {
	return _ACP99ValidatorManager.Contract.MAXIMUMCHURNPERCENTAGELIMIT(&_ACP99ValidatorManager.CallOpts)
}

// MAXIMUMCHURNPERCENTAGELIMIT is a free data retrieval call binding the contract method 0xc974d1b6.
//
// Solidity: function MAXIMUM_CHURN_PERCENTAGE_LIMIT() view returns(uint8)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCallerSession) MAXIMUMCHURNPERCENTAGELIMIT() (uint8, error) {
	return _ACP99ValidatorManager.Contract.MAXIMUMCHURNPERCENTAGELIMIT(&_ACP99ValidatorManager.CallOpts)
}

// MAXIMUMREGISTRATIONEXPIRYLENGTH is a free data retrieval call binding the contract method 0xdf93d8de.
//
// Solidity: function MAXIMUM_REGISTRATION_EXPIRY_LENGTH() view returns(uint64)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCaller) MAXIMUMREGISTRATIONEXPIRYLENGTH(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _ACP99ValidatorManager.contract.Call(opts, &out, "MAXIMUM_REGISTRATION_EXPIRY_LENGTH")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// MAXIMUMREGISTRATIONEXPIRYLENGTH is a free data retrieval call binding the contract method 0xdf93d8de.
//
// Solidity: function MAXIMUM_REGISTRATION_EXPIRY_LENGTH() view returns(uint64)
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) MAXIMUMREGISTRATIONEXPIRYLENGTH() (uint64, error) {
	return _ACP99ValidatorManager.Contract.MAXIMUMREGISTRATIONEXPIRYLENGTH(&_ACP99ValidatorManager.CallOpts)
}

// MAXIMUMREGISTRATIONEXPIRYLENGTH is a free data retrieval call binding the contract method 0xdf93d8de.
//
// Solidity: function MAXIMUM_REGISTRATION_EXPIRY_LENGTH() view returns(uint64)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCallerSession) MAXIMUMREGISTRATIONEXPIRYLENGTH() (uint64, error) {
	return _ACP99ValidatorManager.Contract.MAXIMUMREGISTRATIONEXPIRYLENGTH(&_ACP99ValidatorManager.CallOpts)
}

// PCHAINBLOCKCHAINID is a free data retrieval call binding the contract method 0x732214f8.
//
// Solidity: function P_CHAIN_BLOCKCHAIN_ID() view returns(bytes32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCaller) PCHAINBLOCKCHAINID(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _ACP99ValidatorManager.contract.Call(opts, &out, "P_CHAIN_BLOCKCHAIN_ID")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// PCHAINBLOCKCHAINID is a free data retrieval call binding the contract method 0x732214f8.
//
// Solidity: function P_CHAIN_BLOCKCHAIN_ID() view returns(bytes32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) PCHAINBLOCKCHAINID() ([32]byte, error) {
	return _ACP99ValidatorManager.Contract.PCHAINBLOCKCHAINID(&_ACP99ValidatorManager.CallOpts)
}

// PCHAINBLOCKCHAINID is a free data retrieval call binding the contract method 0x732214f8.
//
// Solidity: function P_CHAIN_BLOCKCHAIN_ID() view returns(bytes32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCallerSession) PCHAINBLOCKCHAINID() ([32]byte, error) {
	return _ACP99ValidatorManager.Contract.PCHAINBLOCKCHAINID(&_ACP99ValidatorManager.CallOpts)
}

// VALIDATORMANAGERSTORAGELOCATION is a free data retrieval call binding the contract method 0xbc5fbfec.
//
// Solidity: function VALIDATOR_MANAGER_STORAGE_LOCATION() view returns(bytes32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCaller) VALIDATORMANAGERSTORAGELOCATION(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _ACP99ValidatorManager.contract.Call(opts, &out, "VALIDATOR_MANAGER_STORAGE_LOCATION")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// VALIDATORMANAGERSTORAGELOCATION is a free data retrieval call binding the contract method 0xbc5fbfec.
//
// Solidity: function VALIDATOR_MANAGER_STORAGE_LOCATION() view returns(bytes32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) VALIDATORMANAGERSTORAGELOCATION() ([32]byte, error) {
	return _ACP99ValidatorManager.Contract.VALIDATORMANAGERSTORAGELOCATION(&_ACP99ValidatorManager.CallOpts)
}

// VALIDATORMANAGERSTORAGELOCATION is a free data retrieval call binding the contract method 0xbc5fbfec.
//
// Solidity: function VALIDATOR_MANAGER_STORAGE_LOCATION() view returns(bytes32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCallerSession) VALIDATORMANAGERSTORAGELOCATION() ([32]byte, error) {
	return _ACP99ValidatorManager.Contract.VALIDATORMANAGERSTORAGELOCATION(&_ACP99ValidatorManager.CallOpts)
}

// WARPMESSENGER is a free data retrieval call binding the contract method 0xb771b3bc.
//
// Solidity: function WARP_MESSENGER() view returns(address)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCaller) WARPMESSENGER(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ACP99ValidatorManager.contract.Call(opts, &out, "WARP_MESSENGER")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// WARPMESSENGER is a free data retrieval call binding the contract method 0xb771b3bc.
//
// Solidity: function WARP_MESSENGER() view returns(address)
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) WARPMESSENGER() (common.Address, error) {
	return _ACP99ValidatorManager.Contract.WARPMESSENGER(&_ACP99ValidatorManager.CallOpts)
}

// WARPMESSENGER is a free data retrieval call binding the contract method 0xb771b3bc.
//
// Solidity: function WARP_MESSENGER() view returns(address)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCallerSession) WARPMESSENGER() (common.Address, error) {
	return _ACP99ValidatorManager.Contract.WARPMESSENGER(&_ACP99ValidatorManager.CallOpts)
}

// GetChurnPeriodSeconds is a free data retrieval call binding the contract method 0x09c1df66.
//
// Solidity: function getChurnPeriodSeconds() view returns(uint64)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCaller) GetChurnPeriodSeconds(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _ACP99ValidatorManager.contract.Call(opts, &out, "getChurnPeriodSeconds")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetChurnPeriodSeconds is a free data retrieval call binding the contract method 0x09c1df66.
//
// Solidity: function getChurnPeriodSeconds() view returns(uint64)
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) GetChurnPeriodSeconds() (uint64, error) {
	return _ACP99ValidatorManager.Contract.GetChurnPeriodSeconds(&_ACP99ValidatorManager.CallOpts)
}

// GetChurnPeriodSeconds is a free data retrieval call binding the contract method 0x09c1df66.
//
// Solidity: function getChurnPeriodSeconds() view returns(uint64)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCallerSession) GetChurnPeriodSeconds() (uint64, error) {
	return _ACP99ValidatorManager.Contract.GetChurnPeriodSeconds(&_ACP99ValidatorManager.CallOpts)
}

// GetSecurityModule is a free data retrieval call binding the contract method 0xcdeea3c9.
//
// Solidity: function getSecurityModule() view returns(address)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCaller) GetSecurityModule(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ACP99ValidatorManager.contract.Call(opts, &out, "getSecurityModule")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetSecurityModule is a free data retrieval call binding the contract method 0xcdeea3c9.
//
// Solidity: function getSecurityModule() view returns(address)
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) GetSecurityModule() (common.Address, error) {
	return _ACP99ValidatorManager.Contract.GetSecurityModule(&_ACP99ValidatorManager.CallOpts)
}

// GetSecurityModule is a free data retrieval call binding the contract method 0xcdeea3c9.
//
// Solidity: function getSecurityModule() view returns(address)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCallerSession) GetSecurityModule() (common.Address, error) {
	return _ACP99ValidatorManager.Contract.GetSecurityModule(&_ACP99ValidatorManager.CallOpts)
}

// GetValidator is a free data retrieval call binding the contract method 0xd5f20ff6.
//
// Solidity: function getValidator(bytes32 validationID) view returns((uint8,bytes,uint64,uint64,uint64,uint64,uint64))
func (_ACP99ValidatorManager *ACP99ValidatorManagerCaller) GetValidator(opts *bind.CallOpts, validationID [32]byte) (Validator, error) {
	var out []interface{}
	err := _ACP99ValidatorManager.contract.Call(opts, &out, "getValidator", validationID)

	if err != nil {
		return *new(Validator), err
	}

	out0 := *abi.ConvertType(out[0], new(Validator)).(*Validator)

	return out0, err

}

// GetValidator is a free data retrieval call binding the contract method 0xd5f20ff6.
//
// Solidity: function getValidator(bytes32 validationID) view returns((uint8,bytes,uint64,uint64,uint64,uint64,uint64))
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) GetValidator(validationID [32]byte) (Validator, error) {
	return _ACP99ValidatorManager.Contract.GetValidator(&_ACP99ValidatorManager.CallOpts, validationID)
}

// GetValidator is a free data retrieval call binding the contract method 0xd5f20ff6.
//
// Solidity: function getValidator(bytes32 validationID) view returns((uint8,bytes,uint64,uint64,uint64,uint64,uint64))
func (_ACP99ValidatorManager *ACP99ValidatorManagerCallerSession) GetValidator(validationID [32]byte) (Validator, error) {
	return _ACP99ValidatorManager.Contract.GetValidator(&_ACP99ValidatorManager.CallOpts, validationID)
}

// GetWeight is a free data retrieval call binding the contract method 0x66435abf.
//
// Solidity: function getWeight(bytes32 validationID) view returns(uint64)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCaller) GetWeight(opts *bind.CallOpts, validationID [32]byte) (uint64, error) {
	var out []interface{}
	err := _ACP99ValidatorManager.contract.Call(opts, &out, "getWeight", validationID)

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetWeight is a free data retrieval call binding the contract method 0x66435abf.
//
// Solidity: function getWeight(bytes32 validationID) view returns(uint64)
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) GetWeight(validationID [32]byte) (uint64, error) {
	return _ACP99ValidatorManager.Contract.GetWeight(&_ACP99ValidatorManager.CallOpts, validationID)
}

// GetWeight is a free data retrieval call binding the contract method 0x66435abf.
//
// Solidity: function getWeight(bytes32 validationID) view returns(uint64)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCallerSession) GetWeight(validationID [32]byte) (uint64, error) {
	return _ACP99ValidatorManager.Contract.GetWeight(&_ACP99ValidatorManager.CallOpts, validationID)
}

// RegisteredValidators is a free data retrieval call binding the contract method 0xfd7ac5e7.
//
// Solidity: function registeredValidators(bytes nodeID) view returns(bytes32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCaller) RegisteredValidators(opts *bind.CallOpts, nodeID []byte) ([32]byte, error) {
	var out []interface{}
	err := _ACP99ValidatorManager.contract.Call(opts, &out, "registeredValidators", nodeID)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// RegisteredValidators is a free data retrieval call binding the contract method 0xfd7ac5e7.
//
// Solidity: function registeredValidators(bytes nodeID) view returns(bytes32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) RegisteredValidators(nodeID []byte) ([32]byte, error) {
	return _ACP99ValidatorManager.Contract.RegisteredValidators(&_ACP99ValidatorManager.CallOpts, nodeID)
}

// RegisteredValidators is a free data retrieval call binding the contract method 0xfd7ac5e7.
//
// Solidity: function registeredValidators(bytes nodeID) view returns(bytes32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerCallerSession) RegisteredValidators(nodeID []byte) ([32]byte, error) {
	return _ACP99ValidatorManager.Contract.RegisteredValidators(&_ACP99ValidatorManager.CallOpts, nodeID)
}

// CompleteEndValidation is a paid mutator transaction binding the contract method 0x467ef06f.
//
// Solidity: function completeEndValidation(uint32 messageIndex) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactor) CompleteEndValidation(opts *bind.TransactOpts, messageIndex uint32) (*types.Transaction, error) {
	return _ACP99ValidatorManager.contract.Transact(opts, "completeEndValidation", messageIndex)
}

// CompleteEndValidation is a paid mutator transaction binding the contract method 0x467ef06f.
//
// Solidity: function completeEndValidation(uint32 messageIndex) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) CompleteEndValidation(messageIndex uint32) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.CompleteEndValidation(&_ACP99ValidatorManager.TransactOpts, messageIndex)
}

// CompleteEndValidation is a paid mutator transaction binding the contract method 0x467ef06f.
//
// Solidity: function completeEndValidation(uint32 messageIndex) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactorSession) CompleteEndValidation(messageIndex uint32) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.CompleteEndValidation(&_ACP99ValidatorManager.TransactOpts, messageIndex)
}

// CompleteValidatorRegistration is a paid mutator transaction binding the contract method 0xa3a65e48.
//
// Solidity: function completeValidatorRegistration(uint32 messageIndex) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactor) CompleteValidatorRegistration(opts *bind.TransactOpts, messageIndex uint32) (*types.Transaction, error) {
	return _ACP99ValidatorManager.contract.Transact(opts, "completeValidatorRegistration", messageIndex)
}

// CompleteValidatorRegistration is a paid mutator transaction binding the contract method 0xa3a65e48.
//
// Solidity: function completeValidatorRegistration(uint32 messageIndex) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) CompleteValidatorRegistration(messageIndex uint32) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.CompleteValidatorRegistration(&_ACP99ValidatorManager.TransactOpts, messageIndex)
}

// CompleteValidatorRegistration is a paid mutator transaction binding the contract method 0xa3a65e48.
//
// Solidity: function completeValidatorRegistration(uint32 messageIndex) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactorSession) CompleteValidatorRegistration(messageIndex uint32) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.CompleteValidatorRegistration(&_ACP99ValidatorManager.TransactOpts, messageIndex)
}

// CompleteValidatorWeightChange is a paid mutator transaction binding the contract method 0x670301ae.
//
// Solidity: function completeValidatorWeightChange(bytes32 validationID, bytes args) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactor) CompleteValidatorWeightChange(opts *bind.TransactOpts, validationID [32]byte, args []byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.contract.Transact(opts, "completeValidatorWeightChange", validationID, args)
}

// CompleteValidatorWeightChange is a paid mutator transaction binding the contract method 0x670301ae.
//
// Solidity: function completeValidatorWeightChange(bytes32 validationID, bytes args) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) CompleteValidatorWeightChange(validationID [32]byte, args []byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.CompleteValidatorWeightChange(&_ACP99ValidatorManager.TransactOpts, validationID, args)
}

// CompleteValidatorWeightChange is a paid mutator transaction binding the contract method 0x670301ae.
//
// Solidity: function completeValidatorWeightChange(bytes32 validationID, bytes args) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactorSession) CompleteValidatorWeightChange(validationID [32]byte, args []byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.CompleteValidatorWeightChange(&_ACP99ValidatorManager.TransactOpts, validationID, args)
}

// Initialize is a paid mutator transaction binding the contract method 0xd588c18f.
//
// Solidity: function initialize((bytes32,uint64,uint8) settings, address securityModule) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactor) Initialize(opts *bind.TransactOpts, settings ValidatorManagerSettings, securityModule common.Address) (*types.Transaction, error) {
	return _ACP99ValidatorManager.contract.Transact(opts, "initialize", settings, securityModule)
}

// Initialize is a paid mutator transaction binding the contract method 0xd588c18f.
//
// Solidity: function initialize((bytes32,uint64,uint8) settings, address securityModule) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) Initialize(settings ValidatorManagerSettings, securityModule common.Address) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.Initialize(&_ACP99ValidatorManager.TransactOpts, settings, securityModule)
}

// Initialize is a paid mutator transaction binding the contract method 0xd588c18f.
//
// Solidity: function initialize((bytes32,uint64,uint8) settings, address securityModule) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactorSession) Initialize(settings ValidatorManagerSettings, securityModule common.Address) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.Initialize(&_ACP99ValidatorManager.TransactOpts, settings, securityModule)
}

// InitializeEndValidation is a paid mutator transaction binding the contract method 0xd492edfc.
//
// Solidity: function initializeEndValidation(bytes32 validationID, bytes args) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactor) InitializeEndValidation(opts *bind.TransactOpts, validationID [32]byte, args []byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.contract.Transact(opts, "initializeEndValidation", validationID, args)
}

// InitializeEndValidation is a paid mutator transaction binding the contract method 0xd492edfc.
//
// Solidity: function initializeEndValidation(bytes32 validationID, bytes args) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) InitializeEndValidation(validationID [32]byte, args []byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.InitializeEndValidation(&_ACP99ValidatorManager.TransactOpts, validationID, args)
}

// InitializeEndValidation is a paid mutator transaction binding the contract method 0xd492edfc.
//
// Solidity: function initializeEndValidation(bytes32 validationID, bytes args) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactorSession) InitializeEndValidation(validationID [32]byte, args []byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.InitializeEndValidation(&_ACP99ValidatorManager.TransactOpts, validationID, args)
}

// InitializeValidatorRegistration is a paid mutator transaction binding the contract method 0x7db1dd48.
//
// Solidity: function initializeValidatorRegistration((bytes,bytes,uint64,(uint32,address[]),(uint32,address[])) input, uint64 weight, bytes args) returns(bytes32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactor) InitializeValidatorRegistration(opts *bind.TransactOpts, input ValidatorRegistrationInput, weight uint64, args []byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.contract.Transact(opts, "initializeValidatorRegistration", input, weight, args)
}

// InitializeValidatorRegistration is a paid mutator transaction binding the contract method 0x7db1dd48.
//
// Solidity: function initializeValidatorRegistration((bytes,bytes,uint64,(uint32,address[]),(uint32,address[])) input, uint64 weight, bytes args) returns(bytes32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) InitializeValidatorRegistration(input ValidatorRegistrationInput, weight uint64, args []byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.InitializeValidatorRegistration(&_ACP99ValidatorManager.TransactOpts, input, weight, args)
}

// InitializeValidatorRegistration is a paid mutator transaction binding the contract method 0x7db1dd48.
//
// Solidity: function initializeValidatorRegistration((bytes,bytes,uint64,(uint32,address[]),(uint32,address[])) input, uint64 weight, bytes args) returns(bytes32)
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactorSession) InitializeValidatorRegistration(input ValidatorRegistrationInput, weight uint64, args []byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.InitializeValidatorRegistration(&_ACP99ValidatorManager.TransactOpts, input, weight, args)
}

// InitializeValidatorSet is a paid mutator transaction binding the contract method 0x20d91b7a.
//
// Solidity: function initializeValidatorSet((bytes32,bytes32,address,(bytes,bytes,uint64)[]) conversionData, uint32 messageIndex) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactor) InitializeValidatorSet(opts *bind.TransactOpts, conversionData ConversionData, messageIndex uint32) (*types.Transaction, error) {
	return _ACP99ValidatorManager.contract.Transact(opts, "initializeValidatorSet", conversionData, messageIndex)
}

// InitializeValidatorSet is a paid mutator transaction binding the contract method 0x20d91b7a.
//
// Solidity: function initializeValidatorSet((bytes32,bytes32,address,(bytes,bytes,uint64)[]) conversionData, uint32 messageIndex) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) InitializeValidatorSet(conversionData ConversionData, messageIndex uint32) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.InitializeValidatorSet(&_ACP99ValidatorManager.TransactOpts, conversionData, messageIndex)
}

// InitializeValidatorSet is a paid mutator transaction binding the contract method 0x20d91b7a.
//
// Solidity: function initializeValidatorSet((bytes32,bytes32,address,(bytes,bytes,uint64)[]) conversionData, uint32 messageIndex) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactorSession) InitializeValidatorSet(conversionData ConversionData, messageIndex uint32) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.InitializeValidatorSet(&_ACP99ValidatorManager.TransactOpts, conversionData, messageIndex)
}

// InitializeValidatorWeightChange is a paid mutator transaction binding the contract method 0x3d89e86f.
//
// Solidity: function initializeValidatorWeightChange(bytes32 validationID, uint64 weight, bytes args) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactor) InitializeValidatorWeightChange(opts *bind.TransactOpts, validationID [32]byte, weight uint64, args []byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.contract.Transact(opts, "initializeValidatorWeightChange", validationID, weight, args)
}

// InitializeValidatorWeightChange is a paid mutator transaction binding the contract method 0x3d89e86f.
//
// Solidity: function initializeValidatorWeightChange(bytes32 validationID, uint64 weight, bytes args) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) InitializeValidatorWeightChange(validationID [32]byte, weight uint64, args []byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.InitializeValidatorWeightChange(&_ACP99ValidatorManager.TransactOpts, validationID, weight, args)
}

// InitializeValidatorWeightChange is a paid mutator transaction binding the contract method 0x3d89e86f.
//
// Solidity: function initializeValidatorWeightChange(bytes32 validationID, uint64 weight, bytes args) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactorSession) InitializeValidatorWeightChange(validationID [32]byte, weight uint64, args []byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.InitializeValidatorWeightChange(&_ACP99ValidatorManager.TransactOpts, validationID, weight, args)
}

// ResendEndValidatorMessage is a paid mutator transaction binding the contract method 0x0322ed98.
//
// Solidity: function resendEndValidatorMessage(bytes32 validationID) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactor) ResendEndValidatorMessage(opts *bind.TransactOpts, validationID [32]byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.contract.Transact(opts, "resendEndValidatorMessage", validationID)
}

// ResendEndValidatorMessage is a paid mutator transaction binding the contract method 0x0322ed98.
//
// Solidity: function resendEndValidatorMessage(bytes32 validationID) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) ResendEndValidatorMessage(validationID [32]byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.ResendEndValidatorMessage(&_ACP99ValidatorManager.TransactOpts, validationID)
}

// ResendEndValidatorMessage is a paid mutator transaction binding the contract method 0x0322ed98.
//
// Solidity: function resendEndValidatorMessage(bytes32 validationID) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactorSession) ResendEndValidatorMessage(validationID [32]byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.ResendEndValidatorMessage(&_ACP99ValidatorManager.TransactOpts, validationID)
}

// ResendRegisterValidatorMessage is a paid mutator transaction binding the contract method 0xbee0a03f.
//
// Solidity: function resendRegisterValidatorMessage(bytes32 validationID) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactor) ResendRegisterValidatorMessage(opts *bind.TransactOpts, validationID [32]byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.contract.Transact(opts, "resendRegisterValidatorMessage", validationID)
}

// ResendRegisterValidatorMessage is a paid mutator transaction binding the contract method 0xbee0a03f.
//
// Solidity: function resendRegisterValidatorMessage(bytes32 validationID) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) ResendRegisterValidatorMessage(validationID [32]byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.ResendRegisterValidatorMessage(&_ACP99ValidatorManager.TransactOpts, validationID)
}

// ResendRegisterValidatorMessage is a paid mutator transaction binding the contract method 0xbee0a03f.
//
// Solidity: function resendRegisterValidatorMessage(bytes32 validationID) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactorSession) ResendRegisterValidatorMessage(validationID [32]byte) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.ResendRegisterValidatorMessage(&_ACP99ValidatorManager.TransactOpts, validationID)
}

// SetSecurityModule is a paid mutator transaction binding the contract method 0x9a68b050.
//
// Solidity: function setSecurityModule(address securityModule) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactor) SetSecurityModule(opts *bind.TransactOpts, securityModule common.Address) (*types.Transaction, error) {
	return _ACP99ValidatorManager.contract.Transact(opts, "setSecurityModule", securityModule)
}

// SetSecurityModule is a paid mutator transaction binding the contract method 0x9a68b050.
//
// Solidity: function setSecurityModule(address securityModule) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerSession) SetSecurityModule(securityModule common.Address) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.SetSecurityModule(&_ACP99ValidatorManager.TransactOpts, securityModule)
}

// SetSecurityModule is a paid mutator transaction binding the contract method 0x9a68b050.
//
// Solidity: function setSecurityModule(address securityModule) returns()
func (_ACP99ValidatorManager *ACP99ValidatorManagerTransactorSession) SetSecurityModule(securityModule common.Address) (*types.Transaction, error) {
	return _ACP99ValidatorManager.Contract.SetSecurityModule(&_ACP99ValidatorManager.TransactOpts, securityModule)
}

// ACP99ValidatorManagerInitialValidatorCreatedIterator is returned from FilterInitialValidatorCreated and is used to iterate over the raw logs and unpacked data for InitialValidatorCreated events raised by the ACP99ValidatorManager contract.
type ACP99ValidatorManagerInitialValidatorCreatedIterator struct {
	Event *ACP99ValidatorManagerInitialValidatorCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ACP99ValidatorManagerInitialValidatorCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ACP99ValidatorManagerInitialValidatorCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ACP99ValidatorManagerInitialValidatorCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ACP99ValidatorManagerInitialValidatorCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ACP99ValidatorManagerInitialValidatorCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ACP99ValidatorManagerInitialValidatorCreated represents a InitialValidatorCreated event raised by the ACP99ValidatorManager contract.
type ACP99ValidatorManagerInitialValidatorCreated struct {
	ValidationID [32]byte
	NodeID       common.Hash
	Weight       uint64
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterInitialValidatorCreated is a free log retrieval operation binding the contract event 0xfe3e5983f71c8253fb0b678f2bc587aa8574d8f1aab9cf82b983777f5998392c.
//
// Solidity: event InitialValidatorCreated(bytes32 indexed validationID, bytes indexed nodeID, uint64 weight)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) FilterInitialValidatorCreated(opts *bind.FilterOpts, validationID [][32]byte, nodeID [][]byte) (*ACP99ValidatorManagerInitialValidatorCreatedIterator, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}
	var nodeIDRule []interface{}
	for _, nodeIDItem := range nodeID {
		nodeIDRule = append(nodeIDRule, nodeIDItem)
	}

	logs, sub, err := _ACP99ValidatorManager.contract.FilterLogs(opts, "InitialValidatorCreated", validationIDRule, nodeIDRule)
	if err != nil {
		return nil, err
	}
	return &ACP99ValidatorManagerInitialValidatorCreatedIterator{contract: _ACP99ValidatorManager.contract, event: "InitialValidatorCreated", logs: logs, sub: sub}, nil
}

// WatchInitialValidatorCreated is a free log subscription operation binding the contract event 0xfe3e5983f71c8253fb0b678f2bc587aa8574d8f1aab9cf82b983777f5998392c.
//
// Solidity: event InitialValidatorCreated(bytes32 indexed validationID, bytes indexed nodeID, uint64 weight)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) WatchInitialValidatorCreated(opts *bind.WatchOpts, sink chan<- *ACP99ValidatorManagerInitialValidatorCreated, validationID [][32]byte, nodeID [][]byte) (event.Subscription, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}
	var nodeIDRule []interface{}
	for _, nodeIDItem := range nodeID {
		nodeIDRule = append(nodeIDRule, nodeIDItem)
	}

	logs, sub, err := _ACP99ValidatorManager.contract.WatchLogs(opts, "InitialValidatorCreated", validationIDRule, nodeIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ACP99ValidatorManagerInitialValidatorCreated)
				if err := _ACP99ValidatorManager.contract.UnpackLog(event, "InitialValidatorCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialValidatorCreated is a log parse operation binding the contract event 0xfe3e5983f71c8253fb0b678f2bc587aa8574d8f1aab9cf82b983777f5998392c.
//
// Solidity: event InitialValidatorCreated(bytes32 indexed validationID, bytes indexed nodeID, uint64 weight)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) ParseInitialValidatorCreated(log types.Log) (*ACP99ValidatorManagerInitialValidatorCreated, error) {
	event := new(ACP99ValidatorManagerInitialValidatorCreated)
	if err := _ACP99ValidatorManager.contract.UnpackLog(event, "InitialValidatorCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ACP99ValidatorManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the ACP99ValidatorManager contract.
type ACP99ValidatorManagerInitializedIterator struct {
	Event *ACP99ValidatorManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ACP99ValidatorManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ACP99ValidatorManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ACP99ValidatorManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ACP99ValidatorManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ACP99ValidatorManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ACP99ValidatorManagerInitialized represents a Initialized event raised by the ACP99ValidatorManager contract.
type ACP99ValidatorManagerInitialized struct {
	Version uint64
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*ACP99ValidatorManagerInitializedIterator, error) {

	logs, sub, err := _ACP99ValidatorManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ACP99ValidatorManagerInitializedIterator{contract: _ACP99ValidatorManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ACP99ValidatorManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _ACP99ValidatorManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ACP99ValidatorManagerInitialized)
				if err := _ACP99ValidatorManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) ParseInitialized(log types.Log) (*ACP99ValidatorManagerInitialized, error) {
	event := new(ACP99ValidatorManagerInitialized)
	if err := _ACP99ValidatorManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ACP99ValidatorManagerValidationPeriodCreatedIterator is returned from FilterValidationPeriodCreated and is used to iterate over the raw logs and unpacked data for ValidationPeriodCreated events raised by the ACP99ValidatorManager contract.
type ACP99ValidatorManagerValidationPeriodCreatedIterator struct {
	Event *ACP99ValidatorManagerValidationPeriodCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ACP99ValidatorManagerValidationPeriodCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ACP99ValidatorManagerValidationPeriodCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ACP99ValidatorManagerValidationPeriodCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ACP99ValidatorManagerValidationPeriodCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ACP99ValidatorManagerValidationPeriodCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ACP99ValidatorManagerValidationPeriodCreated represents a ValidationPeriodCreated event raised by the ACP99ValidatorManager contract.
type ACP99ValidatorManagerValidationPeriodCreated struct {
	ValidationID                [32]byte
	NodeID                      common.Hash
	RegisterValidationMessageID [32]byte
	Weight                      uint64
	RegistrationExpiry          uint64
	Raw                         types.Log // Blockchain specific contextual infos
}

// FilterValidationPeriodCreated is a free log retrieval operation binding the contract event 0xd8a184af94a03e121609cc5f803a446236793e920c7945abc6ba355c8a30cb49.
//
// Solidity: event ValidationPeriodCreated(bytes32 indexed validationID, bytes indexed nodeID, bytes32 indexed registerValidationMessageID, uint64 weight, uint64 registrationExpiry)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) FilterValidationPeriodCreated(opts *bind.FilterOpts, validationID [][32]byte, nodeID [][]byte, registerValidationMessageID [][32]byte) (*ACP99ValidatorManagerValidationPeriodCreatedIterator, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}
	var nodeIDRule []interface{}
	for _, nodeIDItem := range nodeID {
		nodeIDRule = append(nodeIDRule, nodeIDItem)
	}
	var registerValidationMessageIDRule []interface{}
	for _, registerValidationMessageIDItem := range registerValidationMessageID {
		registerValidationMessageIDRule = append(registerValidationMessageIDRule, registerValidationMessageIDItem)
	}

	logs, sub, err := _ACP99ValidatorManager.contract.FilterLogs(opts, "ValidationPeriodCreated", validationIDRule, nodeIDRule, registerValidationMessageIDRule)
	if err != nil {
		return nil, err
	}
	return &ACP99ValidatorManagerValidationPeriodCreatedIterator{contract: _ACP99ValidatorManager.contract, event: "ValidationPeriodCreated", logs: logs, sub: sub}, nil
}

// WatchValidationPeriodCreated is a free log subscription operation binding the contract event 0xd8a184af94a03e121609cc5f803a446236793e920c7945abc6ba355c8a30cb49.
//
// Solidity: event ValidationPeriodCreated(bytes32 indexed validationID, bytes indexed nodeID, bytes32 indexed registerValidationMessageID, uint64 weight, uint64 registrationExpiry)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) WatchValidationPeriodCreated(opts *bind.WatchOpts, sink chan<- *ACP99ValidatorManagerValidationPeriodCreated, validationID [][32]byte, nodeID [][]byte, registerValidationMessageID [][32]byte) (event.Subscription, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}
	var nodeIDRule []interface{}
	for _, nodeIDItem := range nodeID {
		nodeIDRule = append(nodeIDRule, nodeIDItem)
	}
	var registerValidationMessageIDRule []interface{}
	for _, registerValidationMessageIDItem := range registerValidationMessageID {
		registerValidationMessageIDRule = append(registerValidationMessageIDRule, registerValidationMessageIDItem)
	}

	logs, sub, err := _ACP99ValidatorManager.contract.WatchLogs(opts, "ValidationPeriodCreated", validationIDRule, nodeIDRule, registerValidationMessageIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ACP99ValidatorManagerValidationPeriodCreated)
				if err := _ACP99ValidatorManager.contract.UnpackLog(event, "ValidationPeriodCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseValidationPeriodCreated is a log parse operation binding the contract event 0xd8a184af94a03e121609cc5f803a446236793e920c7945abc6ba355c8a30cb49.
//
// Solidity: event ValidationPeriodCreated(bytes32 indexed validationID, bytes indexed nodeID, bytes32 indexed registerValidationMessageID, uint64 weight, uint64 registrationExpiry)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) ParseValidationPeriodCreated(log types.Log) (*ACP99ValidatorManagerValidationPeriodCreated, error) {
	event := new(ACP99ValidatorManagerValidationPeriodCreated)
	if err := _ACP99ValidatorManager.contract.UnpackLog(event, "ValidationPeriodCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ACP99ValidatorManagerValidationPeriodEndedIterator is returned from FilterValidationPeriodEnded and is used to iterate over the raw logs and unpacked data for ValidationPeriodEnded events raised by the ACP99ValidatorManager contract.
type ACP99ValidatorManagerValidationPeriodEndedIterator struct {
	Event *ACP99ValidatorManagerValidationPeriodEnded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ACP99ValidatorManagerValidationPeriodEndedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ACP99ValidatorManagerValidationPeriodEnded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ACP99ValidatorManagerValidationPeriodEnded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ACP99ValidatorManagerValidationPeriodEndedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ACP99ValidatorManagerValidationPeriodEndedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ACP99ValidatorManagerValidationPeriodEnded represents a ValidationPeriodEnded event raised by the ACP99ValidatorManager contract.
type ACP99ValidatorManagerValidationPeriodEnded struct {
	ValidationID [32]byte
	Status       uint8
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterValidationPeriodEnded is a free log retrieval operation binding the contract event 0x1c08e59656f1a18dc2da76826cdc52805c43e897a17c50faefb8ab3c1526cc16.
//
// Solidity: event ValidationPeriodEnded(bytes32 indexed validationID, uint8 indexed status)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) FilterValidationPeriodEnded(opts *bind.FilterOpts, validationID [][32]byte, status []uint8) (*ACP99ValidatorManagerValidationPeriodEndedIterator, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}
	var statusRule []interface{}
	for _, statusItem := range status {
		statusRule = append(statusRule, statusItem)
	}

	logs, sub, err := _ACP99ValidatorManager.contract.FilterLogs(opts, "ValidationPeriodEnded", validationIDRule, statusRule)
	if err != nil {
		return nil, err
	}
	return &ACP99ValidatorManagerValidationPeriodEndedIterator{contract: _ACP99ValidatorManager.contract, event: "ValidationPeriodEnded", logs: logs, sub: sub}, nil
}

// WatchValidationPeriodEnded is a free log subscription operation binding the contract event 0x1c08e59656f1a18dc2da76826cdc52805c43e897a17c50faefb8ab3c1526cc16.
//
// Solidity: event ValidationPeriodEnded(bytes32 indexed validationID, uint8 indexed status)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) WatchValidationPeriodEnded(opts *bind.WatchOpts, sink chan<- *ACP99ValidatorManagerValidationPeriodEnded, validationID [][32]byte, status []uint8) (event.Subscription, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}
	var statusRule []interface{}
	for _, statusItem := range status {
		statusRule = append(statusRule, statusItem)
	}

	logs, sub, err := _ACP99ValidatorManager.contract.WatchLogs(opts, "ValidationPeriodEnded", validationIDRule, statusRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ACP99ValidatorManagerValidationPeriodEnded)
				if err := _ACP99ValidatorManager.contract.UnpackLog(event, "ValidationPeriodEnded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseValidationPeriodEnded is a log parse operation binding the contract event 0x1c08e59656f1a18dc2da76826cdc52805c43e897a17c50faefb8ab3c1526cc16.
//
// Solidity: event ValidationPeriodEnded(bytes32 indexed validationID, uint8 indexed status)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) ParseValidationPeriodEnded(log types.Log) (*ACP99ValidatorManagerValidationPeriodEnded, error) {
	event := new(ACP99ValidatorManagerValidationPeriodEnded)
	if err := _ACP99ValidatorManager.contract.UnpackLog(event, "ValidationPeriodEnded", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ACP99ValidatorManagerValidationPeriodRegisteredIterator is returned from FilterValidationPeriodRegistered and is used to iterate over the raw logs and unpacked data for ValidationPeriodRegistered events raised by the ACP99ValidatorManager contract.
type ACP99ValidatorManagerValidationPeriodRegisteredIterator struct {
	Event *ACP99ValidatorManagerValidationPeriodRegistered // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ACP99ValidatorManagerValidationPeriodRegisteredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ACP99ValidatorManagerValidationPeriodRegistered)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ACP99ValidatorManagerValidationPeriodRegistered)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ACP99ValidatorManagerValidationPeriodRegisteredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ACP99ValidatorManagerValidationPeriodRegisteredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ACP99ValidatorManagerValidationPeriodRegistered represents a ValidationPeriodRegistered event raised by the ACP99ValidatorManager contract.
type ACP99ValidatorManagerValidationPeriodRegistered struct {
	ValidationID [32]byte
	Weight       uint64
	Timestamp    *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterValidationPeriodRegistered is a free log retrieval operation binding the contract event 0x8629ec2bfd8d3b792ba269096bb679e08f20ba2caec0785ef663cf94788e349b.
//
// Solidity: event ValidationPeriodRegistered(bytes32 indexed validationID, uint64 weight, uint256 timestamp)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) FilterValidationPeriodRegistered(opts *bind.FilterOpts, validationID [][32]byte) (*ACP99ValidatorManagerValidationPeriodRegisteredIterator, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}

	logs, sub, err := _ACP99ValidatorManager.contract.FilterLogs(opts, "ValidationPeriodRegistered", validationIDRule)
	if err != nil {
		return nil, err
	}
	return &ACP99ValidatorManagerValidationPeriodRegisteredIterator{contract: _ACP99ValidatorManager.contract, event: "ValidationPeriodRegistered", logs: logs, sub: sub}, nil
}

// WatchValidationPeriodRegistered is a free log subscription operation binding the contract event 0x8629ec2bfd8d3b792ba269096bb679e08f20ba2caec0785ef663cf94788e349b.
//
// Solidity: event ValidationPeriodRegistered(bytes32 indexed validationID, uint64 weight, uint256 timestamp)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) WatchValidationPeriodRegistered(opts *bind.WatchOpts, sink chan<- *ACP99ValidatorManagerValidationPeriodRegistered, validationID [][32]byte) (event.Subscription, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}

	logs, sub, err := _ACP99ValidatorManager.contract.WatchLogs(opts, "ValidationPeriodRegistered", validationIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ACP99ValidatorManagerValidationPeriodRegistered)
				if err := _ACP99ValidatorManager.contract.UnpackLog(event, "ValidationPeriodRegistered", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseValidationPeriodRegistered is a log parse operation binding the contract event 0x8629ec2bfd8d3b792ba269096bb679e08f20ba2caec0785ef663cf94788e349b.
//
// Solidity: event ValidationPeriodRegistered(bytes32 indexed validationID, uint64 weight, uint256 timestamp)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) ParseValidationPeriodRegistered(log types.Log) (*ACP99ValidatorManagerValidationPeriodRegistered, error) {
	event := new(ACP99ValidatorManagerValidationPeriodRegistered)
	if err := _ACP99ValidatorManager.contract.UnpackLog(event, "ValidationPeriodRegistered", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ACP99ValidatorManagerValidatorRemovalInitializedIterator is returned from FilterValidatorRemovalInitialized and is used to iterate over the raw logs and unpacked data for ValidatorRemovalInitialized events raised by the ACP99ValidatorManager contract.
type ACP99ValidatorManagerValidatorRemovalInitializedIterator struct {
	Event *ACP99ValidatorManagerValidatorRemovalInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ACP99ValidatorManagerValidatorRemovalInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ACP99ValidatorManagerValidatorRemovalInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ACP99ValidatorManagerValidatorRemovalInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ACP99ValidatorManagerValidatorRemovalInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ACP99ValidatorManagerValidatorRemovalInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ACP99ValidatorManagerValidatorRemovalInitialized represents a ValidatorRemovalInitialized event raised by the ACP99ValidatorManager contract.
type ACP99ValidatorManagerValidatorRemovalInitialized struct {
	ValidationID       [32]byte
	SetWeightMessageID [32]byte
	Weight             uint64
	EndTime            *big.Int
	Raw                types.Log // Blockchain specific contextual infos
}

// FilterValidatorRemovalInitialized is a free log retrieval operation binding the contract event 0xfbfc4c00cddda774e9bce93712e29d12887b46526858a1afb0937cce8c30fa42.
//
// Solidity: event ValidatorRemovalInitialized(bytes32 indexed validationID, bytes32 indexed setWeightMessageID, uint64 weight, uint256 endTime)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) FilterValidatorRemovalInitialized(opts *bind.FilterOpts, validationID [][32]byte, setWeightMessageID [][32]byte) (*ACP99ValidatorManagerValidatorRemovalInitializedIterator, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}
	var setWeightMessageIDRule []interface{}
	for _, setWeightMessageIDItem := range setWeightMessageID {
		setWeightMessageIDRule = append(setWeightMessageIDRule, setWeightMessageIDItem)
	}

	logs, sub, err := _ACP99ValidatorManager.contract.FilterLogs(opts, "ValidatorRemovalInitialized", validationIDRule, setWeightMessageIDRule)
	if err != nil {
		return nil, err
	}
	return &ACP99ValidatorManagerValidatorRemovalInitializedIterator{contract: _ACP99ValidatorManager.contract, event: "ValidatorRemovalInitialized", logs: logs, sub: sub}, nil
}

// WatchValidatorRemovalInitialized is a free log subscription operation binding the contract event 0xfbfc4c00cddda774e9bce93712e29d12887b46526858a1afb0937cce8c30fa42.
//
// Solidity: event ValidatorRemovalInitialized(bytes32 indexed validationID, bytes32 indexed setWeightMessageID, uint64 weight, uint256 endTime)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) WatchValidatorRemovalInitialized(opts *bind.WatchOpts, sink chan<- *ACP99ValidatorManagerValidatorRemovalInitialized, validationID [][32]byte, setWeightMessageID [][32]byte) (event.Subscription, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}
	var setWeightMessageIDRule []interface{}
	for _, setWeightMessageIDItem := range setWeightMessageID {
		setWeightMessageIDRule = append(setWeightMessageIDRule, setWeightMessageIDItem)
	}

	logs, sub, err := _ACP99ValidatorManager.contract.WatchLogs(opts, "ValidatorRemovalInitialized", validationIDRule, setWeightMessageIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ACP99ValidatorManagerValidatorRemovalInitialized)
				if err := _ACP99ValidatorManager.contract.UnpackLog(event, "ValidatorRemovalInitialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseValidatorRemovalInitialized is a log parse operation binding the contract event 0xfbfc4c00cddda774e9bce93712e29d12887b46526858a1afb0937cce8c30fa42.
//
// Solidity: event ValidatorRemovalInitialized(bytes32 indexed validationID, bytes32 indexed setWeightMessageID, uint64 weight, uint256 endTime)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) ParseValidatorRemovalInitialized(log types.Log) (*ACP99ValidatorManagerValidatorRemovalInitialized, error) {
	event := new(ACP99ValidatorManagerValidatorRemovalInitialized)
	if err := _ACP99ValidatorManager.contract.UnpackLog(event, "ValidatorRemovalInitialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ACP99ValidatorManagerValidatorWeightUpdateIterator is returned from FilterValidatorWeightUpdate and is used to iterate over the raw logs and unpacked data for ValidatorWeightUpdate events raised by the ACP99ValidatorManager contract.
type ACP99ValidatorManagerValidatorWeightUpdateIterator struct {
	Event *ACP99ValidatorManagerValidatorWeightUpdate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log          // Log channel receiving the found contract events
	sub  interfaces.Subscription // Subscription for errors, completion and termination
	done bool                    // Whether the subscription completed delivering logs
	fail error                   // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ACP99ValidatorManagerValidatorWeightUpdateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ACP99ValidatorManagerValidatorWeightUpdate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ACP99ValidatorManagerValidatorWeightUpdate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ACP99ValidatorManagerValidatorWeightUpdateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ACP99ValidatorManagerValidatorWeightUpdateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ACP99ValidatorManagerValidatorWeightUpdate represents a ValidatorWeightUpdate event raised by the ACP99ValidatorManager contract.
type ACP99ValidatorManagerValidatorWeightUpdate struct {
	ValidationID       [32]byte
	Nonce              uint64
	Weight             uint64
	SetWeightMessageID [32]byte
	Raw                types.Log // Blockchain specific contextual infos
}

// FilterValidatorWeightUpdate is a free log retrieval operation binding the contract event 0x07de5ff35a674a8005e661f3333c907ca6333462808762d19dc7b3abb1a8c1df.
//
// Solidity: event ValidatorWeightUpdate(bytes32 indexed validationID, uint64 indexed nonce, uint64 weight, bytes32 setWeightMessageID)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) FilterValidatorWeightUpdate(opts *bind.FilterOpts, validationID [][32]byte, nonce []uint64) (*ACP99ValidatorManagerValidatorWeightUpdateIterator, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}
	var nonceRule []interface{}
	for _, nonceItem := range nonce {
		nonceRule = append(nonceRule, nonceItem)
	}

	logs, sub, err := _ACP99ValidatorManager.contract.FilterLogs(opts, "ValidatorWeightUpdate", validationIDRule, nonceRule)
	if err != nil {
		return nil, err
	}
	return &ACP99ValidatorManagerValidatorWeightUpdateIterator{contract: _ACP99ValidatorManager.contract, event: "ValidatorWeightUpdate", logs: logs, sub: sub}, nil
}

// WatchValidatorWeightUpdate is a free log subscription operation binding the contract event 0x07de5ff35a674a8005e661f3333c907ca6333462808762d19dc7b3abb1a8c1df.
//
// Solidity: event ValidatorWeightUpdate(bytes32 indexed validationID, uint64 indexed nonce, uint64 weight, bytes32 setWeightMessageID)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) WatchValidatorWeightUpdate(opts *bind.WatchOpts, sink chan<- *ACP99ValidatorManagerValidatorWeightUpdate, validationID [][32]byte, nonce []uint64) (event.Subscription, error) {

	var validationIDRule []interface{}
	for _, validationIDItem := range validationID {
		validationIDRule = append(validationIDRule, validationIDItem)
	}
	var nonceRule []interface{}
	for _, nonceItem := range nonce {
		nonceRule = append(nonceRule, nonceItem)
	}

	logs, sub, err := _ACP99ValidatorManager.contract.WatchLogs(opts, "ValidatorWeightUpdate", validationIDRule, nonceRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ACP99ValidatorManagerValidatorWeightUpdate)
				if err := _ACP99ValidatorManager.contract.UnpackLog(event, "ValidatorWeightUpdate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseValidatorWeightUpdate is a log parse operation binding the contract event 0x07de5ff35a674a8005e661f3333c907ca6333462808762d19dc7b3abb1a8c1df.
//
// Solidity: event ValidatorWeightUpdate(bytes32 indexed validationID, uint64 indexed nonce, uint64 weight, bytes32 setWeightMessageID)
func (_ACP99ValidatorManager *ACP99ValidatorManagerFilterer) ParseValidatorWeightUpdate(log types.Log) (*ACP99ValidatorManagerValidatorWeightUpdate, error) {
	event := new(ACP99ValidatorManagerValidatorWeightUpdate)
	if err := _ACP99ValidatorManager.contract.UnpackLog(event, "ValidatorWeightUpdate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ValidatorMessagesMetaData contains all meta data concerning the ValidatorMessages contract.
var ValidatorMessagesMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"name\":\"InvalidBLSPublicKey\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"name\":\"InvalidCodecID\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"actual\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"expected\",\"type\":\"uint32\"}],\"name\":\"InvalidMessageLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMessageType\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"subnetID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"validatorManagerBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"validatorManagerAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPublicKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"internalType\":\"structInitialValidator[]\",\"name\":\"initialValidators\",\"type\":\"tuple[]\"}],\"internalType\":\"structConversionData\",\"name\":\"conversionData\",\"type\":\"tuple\"}],\"name\":\"packConversionData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"packL1ValidatorRegistrationMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"name\":\"packL1ValidatorWeightMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"subnetID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPublicKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"registrationExpiry\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"structPChainOwner\",\"name\":\"remainingBalanceOwner\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"structPChainOwner\",\"name\":\"disableOwner\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"internalType\":\"structValidatorMessages.ValidationPeriod\",\"name\":\"validationPeriod\",\"type\":\"tuple\"}],\"name\":\"packRegisterL1ValidatorMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"conversionID\",\"type\":\"bytes32\"}],\"name\":\"packSubnetToL1ConversionMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"uptime\",\"type\":\"uint64\"}],\"name\":\"packValidationUptimeMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"}],\"name\":\"unpackL1ValidatorRegistrationMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"}],\"name\":\"unpackL1ValidatorWeightMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"}],\"name\":\"unpackRegisterL1ValidatorMessage\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"subnetID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPublicKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"registrationExpiry\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"structPChainOwner\",\"name\":\"remainingBalanceOwner\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"structPChainOwner\",\"name\":\"disableOwner\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"internalType\":\"structValidatorMessages.ValidationPeriod\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"}],\"name\":\"unpackSubnetToL1ConversionMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"}],\"name\":\"unpackValidationUptimeMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]",
	Bin: "",
}

// ValidatorMessagesABI is the input ABI used to generate the binding from.
// Deprecated: Use ValidatorMessagesMetaData.ABI instead.
var ValidatorMessagesABI = ValidatorMessagesMetaData.ABI

// ValidatorMessagesBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ValidatorMessagesMetaData.Bin instead.
var ValidatorMessagesBin = ValidatorMessagesMetaData.Bin

// DeployValidatorMessages deploys a new Ethereum contract, binding an instance of ValidatorMessages to it.
func DeployValidatorMessages(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *ValidatorMessages, error) {
	parsed, err := ValidatorMessagesMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ValidatorMessagesBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ValidatorMessages{ValidatorMessagesCaller: ValidatorMessagesCaller{contract: contract}, ValidatorMessagesTransactor: ValidatorMessagesTransactor{contract: contract}, ValidatorMessagesFilterer: ValidatorMessagesFilterer{contract: contract}}, nil
}

// ValidatorMessages is an auto generated Go binding around an Ethereum contract.
type ValidatorMessages struct {
	ValidatorMessagesCaller     // Read-only binding to the contract
	ValidatorMessagesTransactor // Write-only binding to the contract
	ValidatorMessagesFilterer   // Log filterer for contract events
}

// ValidatorMessagesCaller is an auto generated read-only Go binding around an Ethereum contract.
type ValidatorMessagesCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ValidatorMessagesTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ValidatorMessagesTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ValidatorMessagesFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ValidatorMessagesFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ValidatorMessagesSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ValidatorMessagesSession struct {
	Contract     *ValidatorMessages // Generic contract binding to set the session for
	CallOpts     bind.CallOpts      // Call options to use throughout this session
	TransactOpts bind.TransactOpts  // Transaction auth options to use throughout this session
}

// ValidatorMessagesCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ValidatorMessagesCallerSession struct {
	Contract *ValidatorMessagesCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts            // Call options to use throughout this session
}

// ValidatorMessagesTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ValidatorMessagesTransactorSession struct {
	Contract     *ValidatorMessagesTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts            // Transaction auth options to use throughout this session
}

// ValidatorMessagesRaw is an auto generated low-level Go binding around an Ethereum contract.
type ValidatorMessagesRaw struct {
	Contract *ValidatorMessages // Generic contract binding to access the raw methods on
}

// ValidatorMessagesCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ValidatorMessagesCallerRaw struct {
	Contract *ValidatorMessagesCaller // Generic read-only contract binding to access the raw methods on
}

// ValidatorMessagesTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ValidatorMessagesTransactorRaw struct {
	Contract *ValidatorMessagesTransactor // Generic write-only contract binding to access the raw methods on
}

// NewValidatorMessages creates a new instance of ValidatorMessages, bound to a specific deployed contract.
func NewValidatorMessages(address common.Address, backend bind.ContractBackend) (*ValidatorMessages, error) {
	contract, err := bindValidatorMessages(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ValidatorMessages{ValidatorMessagesCaller: ValidatorMessagesCaller{contract: contract}, ValidatorMessagesTransactor: ValidatorMessagesTransactor{contract: contract}, ValidatorMessagesFilterer: ValidatorMessagesFilterer{contract: contract}}, nil
}

// NewValidatorMessagesCaller creates a new read-only instance of ValidatorMessages, bound to a specific deployed contract.
func NewValidatorMessagesCaller(address common.Address, caller bind.ContractCaller) (*ValidatorMessagesCaller, error) {
	contract, err := bindValidatorMessages(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ValidatorMessagesCaller{contract: contract}, nil
}

// NewValidatorMessagesTransactor creates a new write-only instance of ValidatorMessages, bound to a specific deployed contract.
func NewValidatorMessagesTransactor(address common.Address, transactor bind.ContractTransactor) (*ValidatorMessagesTransactor, error) {
	contract, err := bindValidatorMessages(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ValidatorMessagesTransactor{contract: contract}, nil
}

// NewValidatorMessagesFilterer creates a new log filterer instance of ValidatorMessages, bound to a specific deployed contract.
func NewValidatorMessagesFilterer(address common.Address, filterer bind.ContractFilterer) (*ValidatorMessagesFilterer, error) {
	contract, err := bindValidatorMessages(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ValidatorMessagesFilterer{contract: contract}, nil
}

// bindValidatorMessages binds a generic wrapper to an already deployed contract.
func bindValidatorMessages(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ValidatorMessagesMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ValidatorMessages *ValidatorMessagesRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ValidatorMessages.Contract.ValidatorMessagesCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ValidatorMessages *ValidatorMessagesRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ValidatorMessages.Contract.ValidatorMessagesTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ValidatorMessages *ValidatorMessagesRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ValidatorMessages.Contract.ValidatorMessagesTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ValidatorMessages *ValidatorMessagesCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ValidatorMessages.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ValidatorMessages *ValidatorMessagesTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ValidatorMessages.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ValidatorMessages *ValidatorMessagesTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ValidatorMessages.Contract.contract.Transact(opts, method, params...)
}

// PackConversionData is a free data retrieval call binding the contract method 0x51f48008.
//
// Solidity: function packConversionData((bytes32,bytes32,address,(bytes,bytes,uint64)[]) conversionData) pure returns(bytes)
func (_ValidatorMessages *ValidatorMessagesCaller) PackConversionData(opts *bind.CallOpts, conversionData ConversionData) ([]byte, error) {
	var out []interface{}
	err := _ValidatorMessages.contract.Call(opts, &out, "packConversionData", conversionData)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// PackConversionData is a free data retrieval call binding the contract method 0x51f48008.
//
// Solidity: function packConversionData((bytes32,bytes32,address,(bytes,bytes,uint64)[]) conversionData) pure returns(bytes)
func (_ValidatorMessages *ValidatorMessagesSession) PackConversionData(conversionData ConversionData) ([]byte, error) {
	return _ValidatorMessages.Contract.PackConversionData(&_ValidatorMessages.CallOpts, conversionData)
}

// PackConversionData is a free data retrieval call binding the contract method 0x51f48008.
//
// Solidity: function packConversionData((bytes32,bytes32,address,(bytes,bytes,uint64)[]) conversionData) pure returns(bytes)
func (_ValidatorMessages *ValidatorMessagesCallerSession) PackConversionData(conversionData ConversionData) ([]byte, error) {
	return _ValidatorMessages.Contract.PackConversionData(&_ValidatorMessages.CallOpts, conversionData)
}

// PackL1ValidatorRegistrationMessage is a free data retrieval call binding the contract method 0xa699c135.
//
// Solidity: function packL1ValidatorRegistrationMessage(bytes32 validationID, bool valid) pure returns(bytes)
func (_ValidatorMessages *ValidatorMessagesCaller) PackL1ValidatorRegistrationMessage(opts *bind.CallOpts, validationID [32]byte, valid bool) ([]byte, error) {
	var out []interface{}
	err := _ValidatorMessages.contract.Call(opts, &out, "packL1ValidatorRegistrationMessage", validationID, valid)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// PackL1ValidatorRegistrationMessage is a free data retrieval call binding the contract method 0xa699c135.
//
// Solidity: function packL1ValidatorRegistrationMessage(bytes32 validationID, bool valid) pure returns(bytes)
func (_ValidatorMessages *ValidatorMessagesSession) PackL1ValidatorRegistrationMessage(validationID [32]byte, valid bool) ([]byte, error) {
	return _ValidatorMessages.Contract.PackL1ValidatorRegistrationMessage(&_ValidatorMessages.CallOpts, validationID, valid)
}

// PackL1ValidatorRegistrationMessage is a free data retrieval call binding the contract method 0xa699c135.
//
// Solidity: function packL1ValidatorRegistrationMessage(bytes32 validationID, bool valid) pure returns(bytes)
func (_ValidatorMessages *ValidatorMessagesCallerSession) PackL1ValidatorRegistrationMessage(validationID [32]byte, valid bool) ([]byte, error) {
	return _ValidatorMessages.Contract.PackL1ValidatorRegistrationMessage(&_ValidatorMessages.CallOpts, validationID, valid)
}

// PackL1ValidatorWeightMessage is a free data retrieval call binding the contract method 0x854a893f.
//
// Solidity: function packL1ValidatorWeightMessage(bytes32 validationID, uint64 nonce, uint64 weight) pure returns(bytes)
func (_ValidatorMessages *ValidatorMessagesCaller) PackL1ValidatorWeightMessage(opts *bind.CallOpts, validationID [32]byte, nonce uint64, weight uint64) ([]byte, error) {
	var out []interface{}
	err := _ValidatorMessages.contract.Call(opts, &out, "packL1ValidatorWeightMessage", validationID, nonce, weight)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// PackL1ValidatorWeightMessage is a free data retrieval call binding the contract method 0x854a893f.
//
// Solidity: function packL1ValidatorWeightMessage(bytes32 validationID, uint64 nonce, uint64 weight) pure returns(bytes)
func (_ValidatorMessages *ValidatorMessagesSession) PackL1ValidatorWeightMessage(validationID [32]byte, nonce uint64, weight uint64) ([]byte, error) {
	return _ValidatorMessages.Contract.PackL1ValidatorWeightMessage(&_ValidatorMessages.CallOpts, validationID, nonce, weight)
}

// PackL1ValidatorWeightMessage is a free data retrieval call binding the contract method 0x854a893f.
//
// Solidity: function packL1ValidatorWeightMessage(bytes32 validationID, uint64 nonce, uint64 weight) pure returns(bytes)
func (_ValidatorMessages *ValidatorMessagesCallerSession) PackL1ValidatorWeightMessage(validationID [32]byte, nonce uint64, weight uint64) ([]byte, error) {
	return _ValidatorMessages.Contract.PackL1ValidatorWeightMessage(&_ValidatorMessages.CallOpts, validationID, nonce, weight)
}

// PackRegisterL1ValidatorMessage is a free data retrieval call binding the contract method 0xe0d5478f.
//
// Solidity: function packRegisterL1ValidatorMessage((bytes32,bytes,bytes,uint64,(uint32,address[]),(uint32,address[]),uint64) validationPeriod) pure returns(bytes32, bytes)
func (_ValidatorMessages *ValidatorMessagesCaller) PackRegisterL1ValidatorMessage(opts *bind.CallOpts, validationPeriod ValidatorMessagesValidationPeriod) ([32]byte, []byte, error) {
	var out []interface{}
	err := _ValidatorMessages.contract.Call(opts, &out, "packRegisterL1ValidatorMessage", validationPeriod)

	if err != nil {
		return *new([32]byte), *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)
	out1 := *abi.ConvertType(out[1], new([]byte)).(*[]byte)

	return out0, out1, err

}

// PackRegisterL1ValidatorMessage is a free data retrieval call binding the contract method 0xe0d5478f.
//
// Solidity: function packRegisterL1ValidatorMessage((bytes32,bytes,bytes,uint64,(uint32,address[]),(uint32,address[]),uint64) validationPeriod) pure returns(bytes32, bytes)
func (_ValidatorMessages *ValidatorMessagesSession) PackRegisterL1ValidatorMessage(validationPeriod ValidatorMessagesValidationPeriod) ([32]byte, []byte, error) {
	return _ValidatorMessages.Contract.PackRegisterL1ValidatorMessage(&_ValidatorMessages.CallOpts, validationPeriod)
}

// PackRegisterL1ValidatorMessage is a free data retrieval call binding the contract method 0xe0d5478f.
//
// Solidity: function packRegisterL1ValidatorMessage((bytes32,bytes,bytes,uint64,(uint32,address[]),(uint32,address[]),uint64) validationPeriod) pure returns(bytes32, bytes)
func (_ValidatorMessages *ValidatorMessagesCallerSession) PackRegisterL1ValidatorMessage(validationPeriod ValidatorMessagesValidationPeriod) ([32]byte, []byte, error) {
	return _ValidatorMessages.Contract.PackRegisterL1ValidatorMessage(&_ValidatorMessages.CallOpts, validationPeriod)
}

// PackSubnetToL1ConversionMessage is a free data retrieval call binding the contract method 0x7f7c427a.
//
// Solidity: function packSubnetToL1ConversionMessage(bytes32 conversionID) pure returns(bytes)
func (_ValidatorMessages *ValidatorMessagesCaller) PackSubnetToL1ConversionMessage(opts *bind.CallOpts, conversionID [32]byte) ([]byte, error) {
	var out []interface{}
	err := _ValidatorMessages.contract.Call(opts, &out, "packSubnetToL1ConversionMessage", conversionID)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// PackSubnetToL1ConversionMessage is a free data retrieval call binding the contract method 0x7f7c427a.
//
// Solidity: function packSubnetToL1ConversionMessage(bytes32 conversionID) pure returns(bytes)
func (_ValidatorMessages *ValidatorMessagesSession) PackSubnetToL1ConversionMessage(conversionID [32]byte) ([]byte, error) {
	return _ValidatorMessages.Contract.PackSubnetToL1ConversionMessage(&_ValidatorMessages.CallOpts, conversionID)
}

// PackSubnetToL1ConversionMessage is a free data retrieval call binding the contract method 0x7f7c427a.
//
// Solidity: function packSubnetToL1ConversionMessage(bytes32 conversionID) pure returns(bytes)
func (_ValidatorMessages *ValidatorMessagesCallerSession) PackSubnetToL1ConversionMessage(conversionID [32]byte) ([]byte, error) {
	return _ValidatorMessages.Contract.PackSubnetToL1ConversionMessage(&_ValidatorMessages.CallOpts, conversionID)
}

// PackValidationUptimeMessage is a free data retrieval call binding the contract method 0xe1d68f30.
//
// Solidity: function packValidationUptimeMessage(bytes32 validationID, uint64 uptime) pure returns(bytes)
func (_ValidatorMessages *ValidatorMessagesCaller) PackValidationUptimeMessage(opts *bind.CallOpts, validationID [32]byte, uptime uint64) ([]byte, error) {
	var out []interface{}
	err := _ValidatorMessages.contract.Call(opts, &out, "packValidationUptimeMessage", validationID, uptime)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// PackValidationUptimeMessage is a free data retrieval call binding the contract method 0xe1d68f30.
//
// Solidity: function packValidationUptimeMessage(bytes32 validationID, uint64 uptime) pure returns(bytes)
func (_ValidatorMessages *ValidatorMessagesSession) PackValidationUptimeMessage(validationID [32]byte, uptime uint64) ([]byte, error) {
	return _ValidatorMessages.Contract.PackValidationUptimeMessage(&_ValidatorMessages.CallOpts, validationID, uptime)
}

// PackValidationUptimeMessage is a free data retrieval call binding the contract method 0xe1d68f30.
//
// Solidity: function packValidationUptimeMessage(bytes32 validationID, uint64 uptime) pure returns(bytes)
func (_ValidatorMessages *ValidatorMessagesCallerSession) PackValidationUptimeMessage(validationID [32]byte, uptime uint64) ([]byte, error) {
	return _ValidatorMessages.Contract.PackValidationUptimeMessage(&_ValidatorMessages.CallOpts, validationID, uptime)
}

// UnpackL1ValidatorRegistrationMessage is a free data retrieval call binding the contract method 0x021de88f.
//
// Solidity: function unpackL1ValidatorRegistrationMessage(bytes input) pure returns(bytes32, bool)
func (_ValidatorMessages *ValidatorMessagesCaller) UnpackL1ValidatorRegistrationMessage(opts *bind.CallOpts, input []byte) ([32]byte, bool, error) {
	var out []interface{}
	err := _ValidatorMessages.contract.Call(opts, &out, "unpackL1ValidatorRegistrationMessage", input)

	if err != nil {
		return *new([32]byte), *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)
	out1 := *abi.ConvertType(out[1], new(bool)).(*bool)

	return out0, out1, err

}

// UnpackL1ValidatorRegistrationMessage is a free data retrieval call binding the contract method 0x021de88f.
//
// Solidity: function unpackL1ValidatorRegistrationMessage(bytes input) pure returns(bytes32, bool)
func (_ValidatorMessages *ValidatorMessagesSession) UnpackL1ValidatorRegistrationMessage(input []byte) ([32]byte, bool, error) {
	return _ValidatorMessages.Contract.UnpackL1ValidatorRegistrationMessage(&_ValidatorMessages.CallOpts, input)
}

// UnpackL1ValidatorRegistrationMessage is a free data retrieval call binding the contract method 0x021de88f.
//
// Solidity: function unpackL1ValidatorRegistrationMessage(bytes input) pure returns(bytes32, bool)
func (_ValidatorMessages *ValidatorMessagesCallerSession) UnpackL1ValidatorRegistrationMessage(input []byte) ([32]byte, bool, error) {
	return _ValidatorMessages.Contract.UnpackL1ValidatorRegistrationMessage(&_ValidatorMessages.CallOpts, input)
}

// UnpackL1ValidatorWeightMessage is a free data retrieval call binding the contract method 0x50782b0f.
//
// Solidity: function unpackL1ValidatorWeightMessage(bytes input) pure returns(bytes32, uint64, uint64)
func (_ValidatorMessages *ValidatorMessagesCaller) UnpackL1ValidatorWeightMessage(opts *bind.CallOpts, input []byte) ([32]byte, uint64, uint64, error) {
	var out []interface{}
	err := _ValidatorMessages.contract.Call(opts, &out, "unpackL1ValidatorWeightMessage", input)

	if err != nil {
		return *new([32]byte), *new(uint64), *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)
	out1 := *abi.ConvertType(out[1], new(uint64)).(*uint64)
	out2 := *abi.ConvertType(out[2], new(uint64)).(*uint64)

	return out0, out1, out2, err

}

// UnpackL1ValidatorWeightMessage is a free data retrieval call binding the contract method 0x50782b0f.
//
// Solidity: function unpackL1ValidatorWeightMessage(bytes input) pure returns(bytes32, uint64, uint64)
func (_ValidatorMessages *ValidatorMessagesSession) UnpackL1ValidatorWeightMessage(input []byte) ([32]byte, uint64, uint64, error) {
	return _ValidatorMessages.Contract.UnpackL1ValidatorWeightMessage(&_ValidatorMessages.CallOpts, input)
}

// UnpackL1ValidatorWeightMessage is a free data retrieval call binding the contract method 0x50782b0f.
//
// Solidity: function unpackL1ValidatorWeightMessage(bytes input) pure returns(bytes32, uint64, uint64)
func (_ValidatorMessages *ValidatorMessagesCallerSession) UnpackL1ValidatorWeightMessage(input []byte) ([32]byte, uint64, uint64, error) {
	return _ValidatorMessages.Contract.UnpackL1ValidatorWeightMessage(&_ValidatorMessages.CallOpts, input)
}

// UnpackRegisterL1ValidatorMessage is a free data retrieval call binding the contract method 0x9b835465.
//
// Solidity: function unpackRegisterL1ValidatorMessage(bytes input) pure returns((bytes32,bytes,bytes,uint64,(uint32,address[]),(uint32,address[]),uint64))
func (_ValidatorMessages *ValidatorMessagesCaller) UnpackRegisterL1ValidatorMessage(opts *bind.CallOpts, input []byte) (ValidatorMessagesValidationPeriod, error) {
	var out []interface{}
	err := _ValidatorMessages.contract.Call(opts, &out, "unpackRegisterL1ValidatorMessage", input)

	if err != nil {
		return *new(ValidatorMessagesValidationPeriod), err
	}

	out0 := *abi.ConvertType(out[0], new(ValidatorMessagesValidationPeriod)).(*ValidatorMessagesValidationPeriod)

	return out0, err

}

// UnpackRegisterL1ValidatorMessage is a free data retrieval call binding the contract method 0x9b835465.
//
// Solidity: function unpackRegisterL1ValidatorMessage(bytes input) pure returns((bytes32,bytes,bytes,uint64,(uint32,address[]),(uint32,address[]),uint64))
func (_ValidatorMessages *ValidatorMessagesSession) UnpackRegisterL1ValidatorMessage(input []byte) (ValidatorMessagesValidationPeriod, error) {
	return _ValidatorMessages.Contract.UnpackRegisterL1ValidatorMessage(&_ValidatorMessages.CallOpts, input)
}

// UnpackRegisterL1ValidatorMessage is a free data retrieval call binding the contract method 0x9b835465.
//
// Solidity: function unpackRegisterL1ValidatorMessage(bytes input) pure returns((bytes32,bytes,bytes,uint64,(uint32,address[]),(uint32,address[]),uint64))
func (_ValidatorMessages *ValidatorMessagesCallerSession) UnpackRegisterL1ValidatorMessage(input []byte) (ValidatorMessagesValidationPeriod, error) {
	return _ValidatorMessages.Contract.UnpackRegisterL1ValidatorMessage(&_ValidatorMessages.CallOpts, input)
}

// UnpackSubnetToL1ConversionMessage is a free data retrieval call binding the contract method 0x4d847884.
//
// Solidity: function unpackSubnetToL1ConversionMessage(bytes input) pure returns(bytes32)
func (_ValidatorMessages *ValidatorMessagesCaller) UnpackSubnetToL1ConversionMessage(opts *bind.CallOpts, input []byte) ([32]byte, error) {
	var out []interface{}
	err := _ValidatorMessages.contract.Call(opts, &out, "unpackSubnetToL1ConversionMessage", input)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// UnpackSubnetToL1ConversionMessage is a free data retrieval call binding the contract method 0x4d847884.
//
// Solidity: function unpackSubnetToL1ConversionMessage(bytes input) pure returns(bytes32)
func (_ValidatorMessages *ValidatorMessagesSession) UnpackSubnetToL1ConversionMessage(input []byte) ([32]byte, error) {
	return _ValidatorMessages.Contract.UnpackSubnetToL1ConversionMessage(&_ValidatorMessages.CallOpts, input)
}

// UnpackSubnetToL1ConversionMessage is a free data retrieval call binding the contract method 0x4d847884.
//
// Solidity: function unpackSubnetToL1ConversionMessage(bytes input) pure returns(bytes32)
func (_ValidatorMessages *ValidatorMessagesCallerSession) UnpackSubnetToL1ConversionMessage(input []byte) ([32]byte, error) {
	return _ValidatorMessages.Contract.UnpackSubnetToL1ConversionMessage(&_ValidatorMessages.CallOpts, input)
}

// UnpackValidationUptimeMessage is a free data retrieval call binding the contract method 0x088c2463.
//
// Solidity: function unpackValidationUptimeMessage(bytes input) pure returns(bytes32, uint64)
func (_ValidatorMessages *ValidatorMessagesCaller) UnpackValidationUptimeMessage(opts *bind.CallOpts, input []byte) ([32]byte, uint64, error) {
	var out []interface{}
	err := _ValidatorMessages.contract.Call(opts, &out, "unpackValidationUptimeMessage", input)

	if err != nil {
		return *new([32]byte), *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)
	out1 := *abi.ConvertType(out[1], new(uint64)).(*uint64)

	return out0, out1, err

}

// UnpackValidationUptimeMessage is a free data retrieval call binding the contract method 0x088c2463.
//
// Solidity: function unpackValidationUptimeMessage(bytes input) pure returns(bytes32, uint64)
func (_ValidatorMessages *ValidatorMessagesSession) UnpackValidationUptimeMessage(input []byte) ([32]byte, uint64, error) {
	return _ValidatorMessages.Contract.UnpackValidationUptimeMessage(&_ValidatorMessages.CallOpts, input)
}

// UnpackValidationUptimeMessage is a free data retrieval call binding the contract method 0x088c2463.
//
// Solidity: function unpackValidationUptimeMessage(bytes input) pure returns(bytes32, uint64)
func (_ValidatorMessages *ValidatorMessagesCallerSession) UnpackValidationUptimeMessage(input []byte) ([32]byte, uint64, error) {
	return _ValidatorMessages.Contract.UnpackValidationUptimeMessage(&_ValidatorMessages.CallOpts, input)
}
